{
	"id": "dcd803733faf9c2b4fe034af9be667a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"RebaseAirdrop.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ncontract testRebase { \r\n\r\n    //TODO: Update airdropped balance of tUSDC \r\n    //mapping(address => uint256) public airdroppedBal;\r\n    //uint256 public timeLaunched;\r\n    //uint256 deltaTimeFromInit;\r\n    struct btonsLocked {  \r\n        uint256 timeInit;  \r\n        uint256 amounts;  \r\n        }\r\n    mapping(address => btonsLocked) public airdroppedBal;\r\n\r\n    constructor() {\r\n        \r\n        }\r\n\r\n   \r\n    function startAirDrop() public\r\n    {\r\n        airdroppedBal[msg.sender].timeInit = block.timestamp;\r\n     //TODO: Check amount of BTON Held\r\n\r\n    }\r\n    //TODO: Calculate airdrop per 3 min\r\n\r\n    function calcAirdrop() internal {\r\n        uint256 deltaTimeFromInit;\r\n        uint256 epochs;\r\n        uint256 airdropAmt;\r\n    deltaTimeFromInit = block.timestamp - airdroppedBal[msg.sender].timeInit;\r\n    epochs = deltaTimeFromInit / 180;\r\n    airdropAmt = epochs *1;\r\n    airdroppedBal[msg.sender].amounts = airdropAmt;\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"RebaseAirdrop.sol": {
				"testRebase": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "airdroppedBal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "timeInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amounts",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startAirDrop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"RebaseAirdrop.sol\":55:1006  contract testRebase { \r... */\n  mstore(0x40, 0x80)\n    /* \"RebaseAirdrop.sol\":418:454  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"RebaseAirdrop.sol\":55:1006  contract testRebase { \r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"RebaseAirdrop.sol\":55:1006  contract testRebase { \r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x283a1e16\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa87c70fa\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RebaseAirdrop.sol\":467:616  function startAirDrop() public\r... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"RebaseAirdrop.sol\":357:409  mapping(address => btonsLocked) public airdroppedBal */\n    tag_4:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_11\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RebaseAirdrop.sol\":467:616  function startAirDrop() public\r... */\n    tag_6:\n        /* \"RebaseAirdrop.sol\":551:566  block.timestamp */\n      timestamp\n        /* \"RebaseAirdrop.sol\":514:527  airdroppedBal */\n      0x00\n        /* \"RebaseAirdrop.sol\":514:539  airdroppedBal[msg.sender] */\n      dup1\n        /* \"RebaseAirdrop.sol\":528:538  msg.sender */\n      caller\n        /* \"RebaseAirdrop.sol\":514:539  airdroppedBal[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"RebaseAirdrop.sol\":514:548  airdroppedBal[msg.sender].timeInit */\n      0x00\n      add\n        /* \"RebaseAirdrop.sol\":514:566  airdroppedBal[msg.sender].timeInit = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"RebaseAirdrop.sol\":467:616  function startAirDrop() public\r... */\n      jump\t// out\n        /* \"RebaseAirdrop.sol\":357:409  mapping(address => btonsLocked) public airdroppedBal */\n    tag_10:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_15:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_17\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_9:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_20\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":228:347   */\n    tag_20:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_23\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_15\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_24:\n        /* \"#utility.yul\":574:598   */\n      tag_26\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:943   */\n    tag_12:\n        /* \"#utility.yul\":732:736   */\n      0x00\n        /* \"#utility.yul\":770:772   */\n      0x40\n        /* \"#utility.yul\":759:768   */\n      dup3\n        /* \"#utility.yul\":755:773   */\n      add\n        /* \"#utility.yul\":747:773   */\n      swap1\n      pop\n        /* \"#utility.yul\":783:854   */\n      tag_29\n        /* \"#utility.yul\":851:852   */\n      0x00\n        /* \"#utility.yul\":840:849   */\n      dup4\n        /* \"#utility.yul\":836:853   */\n      add\n        /* \"#utility.yul\":827:833   */\n      dup6\n        /* \"#utility.yul\":783:854   */\n      tag_24\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":864:936   */\n      tag_30\n        /* \"#utility.yul\":932:934   */\n      0x20\n        /* \"#utility.yul\":921:930   */\n      dup4\n        /* \"#utility.yul\":917:935   */\n      add\n        /* \"#utility.yul\":908:914   */\n      dup5\n        /* \"#utility.yul\":864:936   */\n      tag_24\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":611:943   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1126   */\n    tag_33:\n        /* \"#utility.yul\":1067:1074   */\n      0x00\n        /* \"#utility.yul\":1096:1120   */\n      tag_35\n        /* \"#utility.yul\":1114:1119   */\n      dup3\n        /* \"#utility.yul\":1096:1120   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1085:1120   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1132:1258   */\n    tag_36:\n        /* \"#utility.yul\":1169:1176   */\n      0x00\n        /* \"#utility.yul\":1209:1251   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1202:1207   */\n      dup3\n        /* \"#utility.yul\":1198:1252   */\n      and\n        /* \"#utility.yul\":1187:1252   */\n      swap1\n      pop\n        /* \"#utility.yul\":1132:1258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1264:1341   */\n    tag_27:\n        /* \"#utility.yul\":1301:1308   */\n      0x00\n        /* \"#utility.yul\":1330:1335   */\n      dup2\n        /* \"#utility.yul\":1319:1335   */\n      swap1\n      pop\n        /* \"#utility.yul\":1264:1341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1587   */\n    tag_22:\n        /* \"#utility.yul\":1579:1580   */\n      0x00\n        /* \"#utility.yul\":1576:1577   */\n      dup1\n        /* \"#utility.yul\":1569:1581   */\n      revert\n        /* \"#utility.yul\":1593:1715   */\n    tag_18:\n        /* \"#utility.yul\":1666:1690   */\n      tag_43\n        /* \"#utility.yul\":1684:1689   */\n      dup2\n        /* \"#utility.yul\":1666:1690   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1659:1664   */\n      dup2\n        /* \"#utility.yul\":1656:1691   */\n      eq\n        /* \"#utility.yul\":1646:1709   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1705:1706   */\n      0x00\n        /* \"#utility.yul\":1702:1703   */\n      dup1\n        /* \"#utility.yul\":1695:1707   */\n      revert\n        /* \"#utility.yul\":1646:1709   */\n    tag_44:\n        /* \"#utility.yul\":1593:1715   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d5b1e4ed9564e78be482a97dc4c303be68e0cda71d3e636cb3f134673ca5b24e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101ea806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063283a1e161461003b578063a87c70fa14610045575b600080fd5b610043610076565b005b61005f600480360381019061005a91906100f7565b6100be565b60405161006d929190610133565b60405180910390f35b426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b60006020528060005260406000206000915090508060000154908060010154905082565b6000813590506100f18161019d565b92915050565b60006020828403121561010d5761010c610198565b5b600061011b848285016100e2565b91505092915050565b61012d8161018e565b82525050565b60006040820190506101486000830185610124565b6101556020830184610124565b9392505050565b60006101678261016e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101a68161015c565b81146101b157600080fd5b5056fea2646970667358221220d5b1e4ed9564e78be482a97dc4c303be68e0cda71d3e636cb3f134673ca5b24e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x283A1E16 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP3 SWAP2 SWAP1 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1 DUP2 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x198 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP5 DUP3 DUP6 ADD PUSH2 0xE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D DUP2 PUSH2 0x18E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x148 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0x155 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167 DUP3 PUSH2 0x16E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x15C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB1 0xE4 0xED SWAP6 PUSH5 0xE78BE482A9 PUSH30 0xC4C303BE68E0CDA71D3E636CB3F134673CA5B24E64736F6C634300080700 CALLER ",
							"sourceMap": "55:951:1:-:0;;;418:36;;;;;;;;;;55:951;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@airdroppedBal_90": {
									"entryPoint": 190,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startAirDrop_107": {
									"entryPoint": 118,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1718:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:2"
															},
															"nodeType": "YulIf",
															"src": "228:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:2",
														"type": ""
													}
												],
												"src": "152:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:2",
														"type": ""
													}
												],
												"src": "487:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "737:206:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "747:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "759:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "770:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "755:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "755:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "747:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "840:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "851:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "783:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "783:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "783:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "921:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "932:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "864:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "864:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "701:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "713:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "721:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "732:4:2",
														"type": ""
													}
												],
												"src": "611:332:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "989:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "999:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1009:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "999:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "982:6:2",
														"type": ""
													}
												],
												"src": "949:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1075:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1085:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1114:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1096:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1085:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1057:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1067:7:2",
														"type": ""
													}
												],
												"src": "1030:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1187:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1202:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1209:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1198:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1187:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1159:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1169:7:2",
														"type": ""
													}
												],
												"src": "1132:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1309:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1319:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1330:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1319:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1291:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1301:7:2",
														"type": ""
													}
												],
												"src": "1264:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1436:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1453:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1456:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1446:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1347:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1559:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1569:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1470:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1636:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1693:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1702:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1705:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1695:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1695:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1695:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1659:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1684:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1666:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1666:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1656:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1656:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1649:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:43:2"
															},
															"nodeType": "YulIf",
															"src": "1646:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1629:5:2",
														"type": ""
													}
												],
												"src": "1593:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063283a1e161461003b578063a87c70fa14610045575b600080fd5b610043610076565b005b61005f600480360381019061005a91906100f7565b6100be565b60405161006d929190610133565b60405180910390f35b426000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550565b60006020528060005260406000206000915090508060000154908060010154905082565b6000813590506100f18161019d565b92915050565b60006020828403121561010d5761010c610198565b5b600061011b848285016100e2565b91505092915050565b61012d8161018e565b82525050565b60006040820190506101486000830185610124565b6101556020830184610124565b9392505050565b60006101678261016e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6101a68161015c565b81146101b157600080fd5b5056fea2646970667358221220d5b1e4ed9564e78be482a97dc4c303be68e0cda71d3e636cb3f134673ca5b24e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x283A1E16 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA87C70FA EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP3 SWAP2 SWAP1 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST TIMESTAMP PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1 DUP2 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x198 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP5 DUP3 DUP6 ADD PUSH2 0xE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D DUP2 PUSH2 0x18E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x148 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x124 JUMP JUMPDEST PUSH2 0x155 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x124 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167 DUP3 PUSH2 0x16E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x15C JUMP JUMPDEST DUP2 EQ PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB1 0xE4 0xED SWAP6 PUSH5 0xE78BE482A9 PUSH30 0xC4C303BE68E0CDA71D3E636CB3F134673CA5B24E64736F6C634300080700 CALLER ",
							"sourceMap": "55:951:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:149;;;:::i;:::-;;357:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;467:149;551:15;514:13;:25;528:10;514:25;;;;;;;;;;;;;;;:34;;:52;;;;467:149::o;357:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:332::-;732:4;770:2;759:9;755:18;747:26;;783:71;851:1;840:9;836:17;827:6;783:71;:::i;:::-;864:72;932:2;921:9;917:18;908:6;864:72;:::i;:::-;611:332;;;;;:::o;1030:96::-;1067:7;1096:24;1114:5;1096:24;:::i;:::-;1085:35;;1030:96;;;:::o;1132:126::-;1169:7;1209:42;1202:5;1198:54;1187:65;;1132:126;;;:::o;1264:77::-;1301:7;1330:5;1319:16;;1264:77;;;:::o;1470:117::-;1579:1;1576;1569:12;1593:122;1666:24;1684:5;1666:24;:::i;:::-;1659:5;1656:35;1646:63;;1705:1;1702;1695:12;1646:63;1593:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "98000",
								"executionCost": "147",
								"totalCost": "98147"
							},
							"external": {
								"airdroppedBal(address)": "infinite",
								"startAirDrop()": "22330"
							},
							"internal": {
								"calcAirdrop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 1006,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 454,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 454,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 454,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 418,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 1006,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5b1e4ed9564e78be482a97dc4c303be68e0cda71d3e636cb3f134673ca5b24e64736f6c63430008070033",
									".code": [
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "283A1E16"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "A87C70FA"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 55,
											"end": 1006,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 566,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 514,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 528,
											"end": 538,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 539,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 514,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 514,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 616,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 357,
											"end": 409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 943,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 611,
											"end": 943,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 770,
											"end": 772,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 768,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 755,
											"end": 773,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 747,
											"end": 773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 747,
											"end": 773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 783,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 851,
											"end": 852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 853,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 783,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 783,
											"end": 854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 864,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 917,
											"end": 935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 864,
											"end": 936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 864,
											"end": 936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 611,
											"end": 943,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1030,
											"end": 1126,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1030,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1096,
											"end": 1120,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1096,
											"end": 1120,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1096,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1126,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1030,
											"end": 1126,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1132,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1132,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1252,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1258,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1264,
											"end": 1341,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1264,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1587,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1470,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1569,
											"end": 1581,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1715,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1593,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1684,
											"end": 1689,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1666,
											"end": 1690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1666,
											"end": 1690,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1666,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1659,
											"end": 1664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1691,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1646,
											"end": 1709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1705,
											"end": 1706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1695,
											"end": 1707,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1709,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1646,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1715,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1715,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"airdroppedBal(address)": "a87c70fa",
							"startAirDrop()": "283a1e16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"airdroppedBal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startAirDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"RebaseAirdrop.sol\":\"testRebase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"RebaseAirdrop.sol\":{\"keccak256\":\"0x285840f7b7597742b43123ed02ff8f551886ddb83d7396e30a6d1ec43814e516\",\"urls\":[\"bzz-raw://afdf01eb7f6c2df3412c72c49ddce05655cd4d2a8560cf7f46b853ab5c128ce3\",\"dweb:/ipfs/QmUBopu1V4q86PR7ufDL9NLJLehH9q5t96aRTn8wbKuwFG\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> RebaseAirdrop.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "RebaseAirdrop.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "197:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:0"
									},
									"scope": 77,
									"src": "281:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:0"
									},
									"scope": 77,
									"src": "419:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "725:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "744:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 77,
									"src": "707:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1078:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:0"
									},
									"scope": 77,
									"src": "1059:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1812:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1829:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1863:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:0"
									},
									"scope": 77,
									"src": "1795:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2207:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2297:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:0"
									},
									"scope": 77,
									"src": "2176:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2478:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2487:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2509:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2529:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:0"
									},
									"src": "2472:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2709:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2718:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2741:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2766:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:0"
									},
									"src": "2703:78:0"
								}
							],
							"scope": 78,
							"src": "187:2596:0",
							"usedErrors": []
						}
					],
					"src": "91:2693:0"
				},
				"id": 0
			},
			"RebaseAirdrop.sol": {
				"ast": {
					"absolutePath": "RebaseAirdrop.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"testRebase": [
							152
						]
					},
					"id": 153,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 153,
							"sourceUnit": 78,
							"src": "29:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "testRebase",
							"nameLocation": "64:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "testRebase.btonsLocked",
									"id": 85,
									"members": [
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "timeInit",
											"nameLocation": "301:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "293:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 81,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "293:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 84,
											"mutability": "mutable",
											"name": "amounts",
											"nameLocation": "330:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "322:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 83,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "322:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "btonsLocked",
									"nameLocation": "268:11:1",
									"nodeType": "StructDefinition",
									"scope": 152,
									"src": "261:90:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87c70fa",
									"id": 90,
									"mutability": "mutable",
									"name": "airdroppedBal",
									"nameLocation": "396:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "357:52:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
										"typeString": "mapping(address => struct testRebase.btonsLocked)"
									},
									"typeName": {
										"id": 89,
										"keyType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "365:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "357:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
											"typeString": "mapping(address => struct testRebase.btonsLocked)"
										},
										"valueType": {
											"id": 88,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 87,
												"name": "btonsLocked",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "376:11:1"
											},
											"referencedDeclaration": 85,
											"src": "376:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_btonsLocked_$85_storage_ptr",
												"typeString": "struct testRebase.btonsLocked"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "432:22:1",
										"statements": []
									},
									"id": 94,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:2:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:1"
									},
									"scope": 152,
									"src": "418:36:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "503:113:1",
										"statements": [
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 97,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "514:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																	"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																}
															},
															"id": 100,
															"indexExpression": {
																"expression": {
																	"id": 98,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "528:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "528:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "514:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																"typeString": "struct testRebase.btonsLocked storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timeInit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "514:34:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 102,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "551:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "514:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "514:52:1"
											}
										]
									},
									"functionSelector": "283a1e16",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startAirDrop",
									"nameLocation": "476:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:1"
									},
									"scope": 152,
									"src": "467:149:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "697:300:1",
										"statements": [
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "deltaTimeFromInit",
														"nameLocation": "716:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "708:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "708:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"nodeType": "VariableDeclarationStatement",
												"src": "708:25:1"
											},
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "epochs",
														"nameLocation": "752:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "744:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "744:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"nodeType": "VariableDeclarationStatement",
												"src": "744:14:1"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "airdropAmt",
														"nameLocation": "777:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "769:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "769:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"nodeType": "VariableDeclarationStatement",
												"src": "769:18:1"
											},
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "deltaTimeFromInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "794:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "814:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "814:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 122,
																	"name": "airdroppedBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "832:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																		"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																	}
																},
																"id": 125,
																"indexExpression": {
																	"expression": {
																		"id": 123,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "846:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "846:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "832:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																	"typeString": "struct testRebase.btonsLocked storage ref"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timeInit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "832:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "814:52:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "794:72:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "794:72:1"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 130,
														"name": "epochs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "873:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 131,
															"name": "deltaTimeFromInit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "882:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313830",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "902:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_180_by_1",
																"typeString": "int_const 180"
															},
															"value": "180"
														},
														"src": "882:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "873:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "873:32:1"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "912:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 137,
															"name": "epochs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "925:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "933:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "925:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "912:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "912:22:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 142,
																"name": "airdroppedBal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "941:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_btonsLocked_$85_storage_$",
																	"typeString": "mapping(address => struct testRebase.btonsLocked storage ref)"
																}
															},
															"id": 145,
															"indexExpression": {
																"expression": {
																	"id": 143,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "955:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "955:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "941:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_btonsLocked_$85_storage",
																"typeString": "struct testRebase.btonsLocked storage ref"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amounts",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "941:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "airdropAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "977:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "941:46:1"
											}
										]
									},
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAirdrop",
									"nameLocation": "674:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "697:0:1"
									},
									"scope": 152,
									"src": "665:332:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "55:951:1",
							"usedErrors": []
						}
					],
					"src": "2:1006:1"
				},
				"id": 1
			}
		}
	}
}