{
	"id": "e28c7768b843d8fda9015f596f95e551",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"WandInstruments.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT LICENSE\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ABDKMath64x64.sol\";\r\nimport \"./IERC20.sol\";\r\nlibrary SignedSafeMath {\r\n    int256 constant private _INT256_MIN = -2**255;\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two signed integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(int256 a, int256 b) internal pure returns (int256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        require(!(a == -1 && b == _INT256_MIN), \"SignedSafeMath: multiplication overflow\");\r\n\r\n        int256 c = a * b;\r\n        require(c / a == b, \"SignedSafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two signed integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(int256 a, int256 b) internal pure returns (int256) {\r\n        require(b != 0, \"SignedSafeMath: division by zero\");\r\n        require(!(b == -1 && a == _INT256_MIN), \"SignedSafeMath: division overflow\");\r\n\r\n        int256 c = a / b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two signed integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a - b;\r\n        require((b >= 0 && c <= a) || (b < 0 && c > a), \"SignedSafeMath: subtraction overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two signed integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(int256 a, int256 b) internal pure returns (int256) {\r\n        int256 c = a + b;\r\n        require((b >= 0 && c >= a) || (b < 0 && c < a), \"SignedSafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n}\r\n\r\ncontract WandInstruments {\r\n    /*function someAction(address addr) returns(uint) {\r\n        Callee c = Callee(addr);\r\n        return c.getValue(100);\r\n    }*/\r\n    uint256 public growthFactor;\r\n    uint256 public sellFactor;\r\n\r\n    uint256 private backingPrice;\r\n\r\n    uint256 private scepterBuyPrice;\r\n    uint256 private scepterSellPrice;\r\n\r\n    uint256 private treasuryUSDC;\r\n    //addresses of Treasuries\r\n    address public treasury1Addr;\r\n    address public treasury2Addr;\r\n\r\n    //view treasuries balances\r\n    uint256 public treasury1bal = 500000*(10**18);\r\n\r\n    //fortest\r\n    uint256 private ft5daybought = 100000;\r\n    uint256 private ft5daysold = 90000;\r\n    uint256 private double5daytokens = 600000;\r\n    uint256 private a = 9;\r\n    uint256 private bc = 10;\r\n    int128 public res;\r\n    address public testwallet = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2;\r\n\r\n    //Scepter public scepterToken;\r\n    //address public usdcToken= 0x291153a24E642A16e876aB68B4516f1a8EdadDD3;\r\n    \r\n    IERC20 public tSC;\r\n    IERC20 public mockUSDC;\r\n\r\n   // Scepter private s;\r\n    Baton private b;\r\n    constructor(address scepterAddr, address batonAddr) {   \r\n         //s = Scepter(scepterAddr);\r\n         b = Baton(batonAddr);\r\n\r\n         tSC = IERC20(scepterAddr);\r\n         mockUSDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B);\r\n        treasury1Addr = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2;\r\n        //treasury1bal=treasury1Addr.balance;\r\n\r\n        growthFactor=(ft5daybought/double5daytokens) * (10**18);\r\n       // growthFactor=divide(ft5daybought,double5daytokens);\r\n        sellFactor=ft5daysold/double5daytokens* (10**18);\r\n\r\n        \r\n        }\r\n\r\n    function queryERC20Balance(address _tokenAddress, address _addressToQuery) view public returns (uint) {\r\n        return ERC20Interface(_tokenAddress).balanceOf(_addressToQuery);\r\n    }\r\n\r\n   /* function mintScepter(uint256 amount) internal {\r\n        \r\n        tSC.mint(msg.sender, amount);\r\n        \r\n    }*/\r\n\r\n    function sellScepter(uint256 amountSCPtoSell) public payable{\r\n        //require(msg.sender == trader , \"Not authorized\");\r\n        uint256 trader_tsc_balance = tSC.balanceOf(msg.sender);\r\n        require(trader_tsc_balance > amountSCPtoSell, \"You dont have that amount!\");\r\n\r\n       /* require(\r\n            mockUSDC.allowance(owner2, address(this)) >= amount2,\r\n            \"Token 2 allowance too low\"\r\n        );*/\r\n            //WAND to transfer USDC to seller\r\n        mockUSDC.transfer(msg.sender, amountSCPtoSell + (1*(10**18)));\r\n            //Transfer the sold tsc to WAND\r\n        _safeTransferFrom(tSC, msg.sender, address(this), amountSCPtoSell);\r\n        //tSC.transferFrom(msg.sender, address(this), amountSCPtoSell);\r\n        //msg.sender.tSC.transfer(msg.sender, amountSCPtoSell + (1*(10**18)));\r\n        //_safeTransferFrom(token2, owner2, owner1, amount2);\r\n    }\r\n    function buyScepter(uint256 amountSCPtoBuy) public payable{\r\n        //require(msg.sender == trader , \"Not authorized\");\r\n        uint256 trader_usdc_balance = mockUSDC.balanceOf(msg.sender);\r\n        require(trader_usdc_balance > amountSCPtoBuy, \"You dont have that amount!\");\r\n\r\n        //transfer the tSC to trader\r\n        tSC.transfer(msg.sender, amountSCPtoBuy);\r\n        //_safeTransferFrom(tSC, address(this), msg.sender, amountSCPtoBuy);\r\n        //Transfer USDC to WAND from trader\r\n        _safeTransferFrom(mockUSDC, msg.sender, address(this), amountSCPtoBuy);\r\n        //tSC.transferFrom(msg.sender, address(this), amountSCPtoSell);\r\n        //msg.sender.tSC.transfer(msg.sender, amountSCPtoSell + (1*(10**18)));\r\n        //_safeTransferFrom(token2, owner2, owner1, amount2);\r\n\r\n    }\r\n    function mintBaton(uint256 amount) public {\r\n        \r\n        b.mint(msg.sender, amount);\r\n        \r\n    }\r\n\r\n    function floorDiv(int256 a, int256 b) public returns (int256) {\r\n    int256 r = SignedSafeMath.div(a, b);\r\n    if ((a ^ b) < 0 && (r * b != a)) r--;\r\n    return r;\r\n}\r\n    function getBackingPrice() external view returns (uint256){\r\n        //floorPrice=;\r\n        //treasuryUSDC = 2;\r\n       \r\n       return (treasury1bal/tSC.totalSupply())  ;\r\n       // return 2;\r\n    }\r\n    function getBuyPrice() external view returns (uint256){\r\n   \r\n        return (this.getBackingPrice() * ((9/10) *(10**18) - sellFactor) / (10**18));\r\n    }\r\n    function getSellPrice() external view returns (uint256){\r\n        //Sell price: (backing price * (1.2 + growth factor)) in USDC\r\n        return (this.getBackingPrice() * (growthFactor + (6*(10**18)/5)))/ (10**18);\r\n    }\r\n    function _safeTransferFrom(\r\n        IERC20 token,\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) private {\r\n        bool sent = token.transferFrom(sender, recipient, amount);\r\n        require(sent, \"Token transfer failed\");\r\n    }\r\n\r\n}\r\nabstract contract ERC20Interface {\r\n    function balanceOf(address whom) view public virtual returns (uint);\r\n}\r\n/*abstract contract Scepter {\r\n   \r\n    function mint(address addrTo, uint256 amount) public virtual ;\r\n    function scepterTotalSupply() public view virtual returns (uint256);\r\n    function transferFrom(address addrTo, uint256 amount) public virtual;\r\n}*/\r\nabstract contract Baton {\r\n  \r\n    function mint(address addrTo, uint256 amount) public virtual ;\r\n}"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"ABDKMath64x64.sol": {
				"content": "// SPDX-License-Identifier: BSD-4-Clause\r\n/*\r\n * ABDK Math 64.64 Smart Contract Library.  Copyright © 2019 by ABDK Consulting.\r\n * Author: Mikhail Vladimirov <mikhail.vladimirov@gmail.com>\r\n */\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * Smart contract library of mathematical functions operating with signed\r\n * 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is\r\n * basically a simple fraction whose numerator is signed 128-bit integer and\r\n * denominator is 2^64.  As long as denominator is always the same, there is no\r\n * need to store it, thus in Solidity signed 64.64-bit fixed point numbers are\r\n * represented by int128 type holding only the numerator.\r\n */\r\nlibrary ABDKMath64x64 {\r\n  /*\r\n   * Minimum value signed 64.64-bit fixed point number may have. \r\n   */\r\n  int128 private constant MIN_64x64 = -0x80000000000000000000000000000000;\r\n\r\n  /*\r\n   * Maximum value signed 64.64-bit fixed point number may have. \r\n   */\r\n  int128 private constant MAX_64x64 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n  /**\r\n   * Convert signed 256-bit integer number into signed 64.64-bit fixed point\r\n   * number.  Revert on overflow.\r\n   *\r\n   * @param x signed 256-bit integer number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function fromInt (int256 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x >= -0x8000000000000000 && x <= 0x7FFFFFFFFFFFFFFF);\r\n      return int128 (x << 64);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert signed 64.64 fixed point number into signed 64-bit integer number\r\n   * rounding down.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64-bit integer number\r\n   */\r\n  function toInt (int128 x) internal pure returns (int64) {\r\n    unchecked {\r\n      return int64 (x >> 64);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert unsigned 256-bit integer number into signed 64.64-bit fixed point\r\n   * number.  Revert on overflow.\r\n   *\r\n   * @param x unsigned 256-bit integer number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function fromUInt (uint256 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x <= 0x7FFFFFFFFFFFFFFF);\r\n      return int128 (int256 (x << 64));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert signed 64.64 fixed point number into unsigned 64-bit integer\r\n   * number rounding down.  Revert on underflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return unsigned 64-bit integer number\r\n   */\r\n  function toUInt (int128 x) internal pure returns (uint64) {\r\n    unchecked {\r\n      require (x >= 0);\r\n      return uint64 (uint128 (x >> 64));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert signed 128.128 fixed point number into signed 64.64-bit fixed point\r\n   * number rounding down.  Revert on overflow.\r\n   *\r\n   * @param x signed 128.128-bin fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function from128x128 (int256 x) internal pure returns (int128) {\r\n    unchecked {\r\n      int256 result = x >> 64;\r\n      require (result >= MIN_64x64 && result <= MAX_64x64);\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert signed 64.64 fixed point number into signed 128.128 fixed point\r\n   * number.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 128.128 fixed point number\r\n   */\r\n  function to128x128 (int128 x) internal pure returns (int256) {\r\n    unchecked {\r\n      return int256 (x) << 64;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x + y.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @param y signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function add (int128 x, int128 y) internal pure returns (int128) {\r\n    unchecked {\r\n      int256 result = int256(x) + y;\r\n      require (result >= MIN_64x64 && result <= MAX_64x64);\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x - y.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @param y signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function sub (int128 x, int128 y) internal pure returns (int128) {\r\n    unchecked {\r\n      int256 result = int256(x) - y;\r\n      require (result >= MIN_64x64 && result <= MAX_64x64);\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x * y rounding down.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @param y signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function mul (int128 x, int128 y) internal pure returns (int128) {\r\n    unchecked {\r\n      int256 result = int256(x) * y >> 64;\r\n      require (result >= MIN_64x64 && result <= MAX_64x64);\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x * y rounding towards zero, where x is signed 64.64 fixed point\r\n   * number and y is signed 256-bit integer number.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64 fixed point number\r\n   * @param y signed 256-bit integer number\r\n   * @return signed 256-bit integer number\r\n   */\r\n  function muli (int128 x, int256 y) internal pure returns (int256) {\r\n    unchecked {\r\n      if (x == MIN_64x64) {\r\n        require (y >= -0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF &&\r\n          y <= 0x1000000000000000000000000000000000000000000000000);\r\n        return -y << 63;\r\n      } else {\r\n        bool negativeResult = false;\r\n        if (x < 0) {\r\n          x = -x;\r\n          negativeResult = true;\r\n        }\r\n        if (y < 0) {\r\n          y = -y; // We rely on overflow behavior here\r\n          negativeResult = !negativeResult;\r\n        }\r\n        uint256 absoluteResult = mulu (x, uint256 (y));\r\n        if (negativeResult) {\r\n          require (absoluteResult <=\r\n            0x8000000000000000000000000000000000000000000000000000000000000000);\r\n          return -int256 (absoluteResult); // We rely on overflow behavior here\r\n        } else {\r\n          require (absoluteResult <=\r\n            0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\r\n          return int256 (absoluteResult);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x * y rounding down, where x is signed 64.64 fixed point number\r\n   * and y is unsigned 256-bit integer number.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64 fixed point number\r\n   * @param y unsigned 256-bit integer number\r\n   * @return unsigned 256-bit integer number\r\n   */\r\n  function mulu (int128 x, uint256 y) internal pure returns (uint256) {\r\n    unchecked {\r\n      if (y == 0) return 0;\r\n\r\n      require (x >= 0);\r\n\r\n      uint256 lo = (uint256 (int256 (x)) * (y & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)) >> 64;\r\n      uint256 hi = uint256 (int256 (x)) * (y >> 128);\r\n\r\n      require (hi <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\r\n      hi <<= 64;\r\n\r\n      require (hi <=\r\n        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF - lo);\r\n      return hi + lo;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x / y rounding towards zero.  Revert on overflow or when y is\r\n   * zero.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @param y signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function div (int128 x, int128 y) internal pure returns (int128) {\r\n    unchecked {\r\n      require (y != 0);\r\n      int256 result = (int256 (x) << 64) / y;\r\n      require (result >= MIN_64x64 && result <= MAX_64x64);\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x / y rounding towards zero, where x and y are signed 256-bit\r\n   * integer numbers.  Revert on overflow or when y is zero.\r\n   *\r\n   * @param x signed 256-bit integer number\r\n   * @param y signed 256-bit integer number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function divi (int256 x, int256 y) internal pure returns (int128) {\r\n    unchecked {\r\n      require (y != 0);\r\n\r\n      bool negativeResult = false;\r\n      if (x < 0) {\r\n        x = -x; // We rely on overflow behavior here\r\n        negativeResult = true;\r\n      }\r\n      if (y < 0) {\r\n        y = -y; // We rely on overflow behavior here\r\n        negativeResult = !negativeResult;\r\n      }\r\n      uint128 absoluteResult = divuu (uint256 (x), uint256 (y));\r\n      if (negativeResult) {\r\n        require (absoluteResult <= 0x80000000000000000000000000000000);\r\n        return -int128 (absoluteResult); // We rely on overflow behavior here\r\n      } else {\r\n        require (absoluteResult <= 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\r\n        return int128 (absoluteResult); // We rely on overflow behavior here\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\r\n   * integer numbers.  Revert on overflow or when y is zero.\r\n   *\r\n   * @param x unsigned 256-bit integer number\r\n   * @param y unsigned 256-bit integer number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function divu (uint256 x, uint256 y) internal pure returns (int128) {\r\n    unchecked {\r\n      require (y != 0);\r\n      uint128 result = divuu (x, y);\r\n      require (result <= uint128 (MAX_64x64));\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate -x.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function neg (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x != MIN_64x64);\r\n      return -x;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate |x|.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function abs (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x != MIN_64x64);\r\n      return x < 0 ? -x : x;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate 1 / x rounding towards zero.  Revert on overflow or when x is\r\n   * zero.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function inv (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x != 0);\r\n      int256 result = int256 (0x100000000000000000000000000000000) / x;\r\n      require (result >= MIN_64x64 && result <= MAX_64x64);\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate arithmetics average of x and y, i.e. (x + y) / 2 rounding down.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @param y signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function avg (int128 x, int128 y) internal pure returns (int128) {\r\n    unchecked {\r\n      return int128 ((int256 (x) + int256 (y)) >> 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate geometric average of x and y, i.e. sqrt (x * y) rounding down.\r\n   * Revert on overflow or in case x * y is negative.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @param y signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function gavg (int128 x, int128 y) internal pure returns (int128) {\r\n    unchecked {\r\n      int256 m = int256 (x) * int256 (y);\r\n      require (m >= 0);\r\n      require (m <\r\n          0x4000000000000000000000000000000000000000000000000000000000000000);\r\n      return int128 (sqrtu (uint256 (m)));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x^y assuming 0^0 is 1, where x is signed 64.64 fixed point number\r\n   * and y is unsigned 256-bit integer number.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @param y uint256 value\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function pow (int128 x, uint256 y) internal pure returns (int128) {\r\n    unchecked {\r\n      bool negative = x < 0 && y & 1 == 1;\r\n\r\n      uint256 absX = uint128 (x < 0 ? -x : x);\r\n      uint256 absResult;\r\n      absResult = 0x100000000000000000000000000000000;\r\n\r\n      if (absX <= 0x10000000000000000) {\r\n        absX <<= 63;\r\n        while (y != 0) {\r\n          if (y & 0x1 != 0) {\r\n            absResult = absResult * absX >> 127;\r\n          }\r\n          absX = absX * absX >> 127;\r\n\r\n          if (y & 0x2 != 0) {\r\n            absResult = absResult * absX >> 127;\r\n          }\r\n          absX = absX * absX >> 127;\r\n\r\n          if (y & 0x4 != 0) {\r\n            absResult = absResult * absX >> 127;\r\n          }\r\n          absX = absX * absX >> 127;\r\n\r\n          if (y & 0x8 != 0) {\r\n            absResult = absResult * absX >> 127;\r\n          }\r\n          absX = absX * absX >> 127;\r\n\r\n          y >>= 4;\r\n        }\r\n\r\n        absResult >>= 64;\r\n      } else {\r\n        uint256 absXShift = 63;\r\n        if (absX < 0x1000000000000000000000000) { absX <<= 32; absXShift -= 32; }\r\n        if (absX < 0x10000000000000000000000000000) { absX <<= 16; absXShift -= 16; }\r\n        if (absX < 0x1000000000000000000000000000000) { absX <<= 8; absXShift -= 8; }\r\n        if (absX < 0x10000000000000000000000000000000) { absX <<= 4; absXShift -= 4; }\r\n        if (absX < 0x40000000000000000000000000000000) { absX <<= 2; absXShift -= 2; }\r\n        if (absX < 0x80000000000000000000000000000000) { absX <<= 1; absXShift -= 1; }\r\n\r\n        uint256 resultShift = 0;\r\n        while (y != 0) {\r\n          require (absXShift < 64);\r\n\r\n          if (y & 0x1 != 0) {\r\n            absResult = absResult * absX >> 127;\r\n            resultShift += absXShift;\r\n            if (absResult > 0x100000000000000000000000000000000) {\r\n              absResult >>= 1;\r\n              resultShift += 1;\r\n            }\r\n          }\r\n          absX = absX * absX >> 127;\r\n          absXShift <<= 1;\r\n          if (absX >= 0x100000000000000000000000000000000) {\r\n              absX >>= 1;\r\n              absXShift += 1;\r\n          }\r\n\r\n          y >>= 1;\r\n        }\r\n\r\n        require (resultShift < 64);\r\n        absResult >>= 64 - resultShift;\r\n      }\r\n      int256 result = negative ? -int256 (absResult) : int256 (absResult);\r\n      require (result >= MIN_64x64 && result <= MAX_64x64);\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate sqrt (x) rounding down.  Revert if x < 0.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function sqrt (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x >= 0);\r\n      return int128 (sqrtu (uint256 (int256 (x)) << 64));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate binary logarithm of x.  Revert if x <= 0.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function log_2 (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x > 0);\r\n\r\n      int256 msb = 0;\r\n      int256 xc = x;\r\n      if (xc >= 0x10000000000000000) { xc >>= 64; msb += 64; }\r\n      if (xc >= 0x100000000) { xc >>= 32; msb += 32; }\r\n      if (xc >= 0x10000) { xc >>= 16; msb += 16; }\r\n      if (xc >= 0x100) { xc >>= 8; msb += 8; }\r\n      if (xc >= 0x10) { xc >>= 4; msb += 4; }\r\n      if (xc >= 0x4) { xc >>= 2; msb += 2; }\r\n      if (xc >= 0x2) msb += 1;  // No need to shift xc anymore\r\n\r\n      int256 result = msb - 64 << 64;\r\n      uint256 ux = uint256 (int256 (x)) << uint256 (127 - msb);\r\n      for (int256 bit = 0x8000000000000000; bit > 0; bit >>= 1) {\r\n        ux *= ux;\r\n        uint256 b = ux >> 255;\r\n        ux >>= 127 + b;\r\n        result += bit * int256 (b);\r\n      }\r\n\r\n      return int128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate natural logarithm of x.  Revert if x <= 0.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function ln (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x > 0);\r\n\r\n      return int128 (int256 (\r\n          uint256 (int256 (log_2 (x))) * 0xB17217F7D1CF79ABC9E3B39803F2F6AF >> 128));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate binary exponent of x.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function exp_2 (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x < 0x400000000000000000); // Overflow\r\n\r\n      if (x < -0x400000000000000000) return 0; // Underflow\r\n\r\n      uint256 result = 0x80000000000000000000000000000000;\r\n\r\n      if (x & 0x8000000000000000 > 0)\r\n        result = result * 0x16A09E667F3BCC908B2FB1366EA957D3E >> 128;\r\n      if (x & 0x4000000000000000 > 0)\r\n        result = result * 0x1306FE0A31B7152DE8D5A46305C85EDEC >> 128;\r\n      if (x & 0x2000000000000000 > 0)\r\n        result = result * 0x1172B83C7D517ADCDF7C8C50EB14A791F >> 128;\r\n      if (x & 0x1000000000000000 > 0)\r\n        result = result * 0x10B5586CF9890F6298B92B71842A98363 >> 128;\r\n      if (x & 0x800000000000000 > 0)\r\n        result = result * 0x1059B0D31585743AE7C548EB68CA417FD >> 128;\r\n      if (x & 0x400000000000000 > 0)\r\n        result = result * 0x102C9A3E778060EE6F7CACA4F7A29BDE8 >> 128;\r\n      if (x & 0x200000000000000 > 0)\r\n        result = result * 0x10163DA9FB33356D84A66AE336DCDFA3F >> 128;\r\n      if (x & 0x100000000000000 > 0)\r\n        result = result * 0x100B1AFA5ABCBED6129AB13EC11DC9543 >> 128;\r\n      if (x & 0x80000000000000 > 0)\r\n        result = result * 0x10058C86DA1C09EA1FF19D294CF2F679B >> 128;\r\n      if (x & 0x40000000000000 > 0)\r\n        result = result * 0x1002C605E2E8CEC506D21BFC89A23A00F >> 128;\r\n      if (x & 0x20000000000000 > 0)\r\n        result = result * 0x100162F3904051FA128BCA9C55C31E5DF >> 128;\r\n      if (x & 0x10000000000000 > 0)\r\n        result = result * 0x1000B175EFFDC76BA38E31671CA939725 >> 128;\r\n      if (x & 0x8000000000000 > 0)\r\n        result = result * 0x100058BA01FB9F96D6CACD4B180917C3D >> 128;\r\n      if (x & 0x4000000000000 > 0)\r\n        result = result * 0x10002C5CC37DA9491D0985C348C68E7B3 >> 128;\r\n      if (x & 0x2000000000000 > 0)\r\n        result = result * 0x1000162E525EE054754457D5995292026 >> 128;\r\n      if (x & 0x1000000000000 > 0)\r\n        result = result * 0x10000B17255775C040618BF4A4ADE83FC >> 128;\r\n      if (x & 0x800000000000 > 0)\r\n        result = result * 0x1000058B91B5BC9AE2EED81E9B7D4CFAB >> 128;\r\n      if (x & 0x400000000000 > 0)\r\n        result = result * 0x100002C5C89D5EC6CA4D7C8ACC017B7C9 >> 128;\r\n      if (x & 0x200000000000 > 0)\r\n        result = result * 0x10000162E43F4F831060E02D839A9D16D >> 128;\r\n      if (x & 0x100000000000 > 0)\r\n        result = result * 0x100000B1721BCFC99D9F890EA06911763 >> 128;\r\n      if (x & 0x80000000000 > 0)\r\n        result = result * 0x10000058B90CF1E6D97F9CA14DBCC1628 >> 128;\r\n      if (x & 0x40000000000 > 0)\r\n        result = result * 0x1000002C5C863B73F016468F6BAC5CA2B >> 128;\r\n      if (x & 0x20000000000 > 0)\r\n        result = result * 0x100000162E430E5A18F6119E3C02282A5 >> 128;\r\n      if (x & 0x10000000000 > 0)\r\n        result = result * 0x1000000B1721835514B86E6D96EFD1BFE >> 128;\r\n      if (x & 0x8000000000 > 0)\r\n        result = result * 0x100000058B90C0B48C6BE5DF846C5B2EF >> 128;\r\n      if (x & 0x4000000000 > 0)\r\n        result = result * 0x10000002C5C8601CC6B9E94213C72737A >> 128;\r\n      if (x & 0x2000000000 > 0)\r\n        result = result * 0x1000000162E42FFF037DF38AA2B219F06 >> 128;\r\n      if (x & 0x1000000000 > 0)\r\n        result = result * 0x10000000B17217FBA9C739AA5819F44F9 >> 128;\r\n      if (x & 0x800000000 > 0)\r\n        result = result * 0x1000000058B90BFCDEE5ACD3C1CEDC823 >> 128;\r\n      if (x & 0x400000000 > 0)\r\n        result = result * 0x100000002C5C85FE31F35A6A30DA1BE50 >> 128;\r\n      if (x & 0x200000000 > 0)\r\n        result = result * 0x10000000162E42FF0999CE3541B9FFFCF >> 128;\r\n      if (x & 0x100000000 > 0)\r\n        result = result * 0x100000000B17217F80F4EF5AADDA45554 >> 128;\r\n      if (x & 0x80000000 > 0)\r\n        result = result * 0x10000000058B90BFBF8479BD5A81B51AD >> 128;\r\n      if (x & 0x40000000 > 0)\r\n        result = result * 0x1000000002C5C85FDF84BD62AE30A74CC >> 128;\r\n      if (x & 0x20000000 > 0)\r\n        result = result * 0x100000000162E42FEFB2FED257559BDAA >> 128;\r\n      if (x & 0x10000000 > 0)\r\n        result = result * 0x1000000000B17217F7D5A7716BBA4A9AE >> 128;\r\n      if (x & 0x8000000 > 0)\r\n        result = result * 0x100000000058B90BFBE9DDBAC5E109CCE >> 128;\r\n      if (x & 0x4000000 > 0)\r\n        result = result * 0x10000000002C5C85FDF4B15DE6F17EB0D >> 128;\r\n      if (x & 0x2000000 > 0)\r\n        result = result * 0x1000000000162E42FEFA494F1478FDE05 >> 128;\r\n      if (x & 0x1000000 > 0)\r\n        result = result * 0x10000000000B17217F7D20CF927C8E94C >> 128;\r\n      if (x & 0x800000 > 0)\r\n        result = result * 0x1000000000058B90BFBE8F71CB4E4B33D >> 128;\r\n      if (x & 0x400000 > 0)\r\n        result = result * 0x100000000002C5C85FDF477B662B26945 >> 128;\r\n      if (x & 0x200000 > 0)\r\n        result = result * 0x10000000000162E42FEFA3AE53369388C >> 128;\r\n      if (x & 0x100000 > 0)\r\n        result = result * 0x100000000000B17217F7D1D351A389D40 >> 128;\r\n      if (x & 0x80000 > 0)\r\n        result = result * 0x10000000000058B90BFBE8E8B2D3D4EDE >> 128;\r\n      if (x & 0x40000 > 0)\r\n        result = result * 0x1000000000002C5C85FDF4741BEA6E77E >> 128;\r\n      if (x & 0x20000 > 0)\r\n        result = result * 0x100000000000162E42FEFA39FE95583C2 >> 128;\r\n      if (x & 0x10000 > 0)\r\n        result = result * 0x1000000000000B17217F7D1CFB72B45E1 >> 128;\r\n      if (x & 0x8000 > 0)\r\n        result = result * 0x100000000000058B90BFBE8E7CC35C3F0 >> 128;\r\n      if (x & 0x4000 > 0)\r\n        result = result * 0x10000000000002C5C85FDF473E242EA38 >> 128;\r\n      if (x & 0x2000 > 0)\r\n        result = result * 0x1000000000000162E42FEFA39F02B772C >> 128;\r\n      if (x & 0x1000 > 0)\r\n        result = result * 0x10000000000000B17217F7D1CF7D83C1A >> 128;\r\n      if (x & 0x800 > 0)\r\n        result = result * 0x1000000000000058B90BFBE8E7BDCBE2E >> 128;\r\n      if (x & 0x400 > 0)\r\n        result = result * 0x100000000000002C5C85FDF473DEA871F >> 128;\r\n      if (x & 0x200 > 0)\r\n        result = result * 0x10000000000000162E42FEFA39EF44D91 >> 128;\r\n      if (x & 0x100 > 0)\r\n        result = result * 0x100000000000000B17217F7D1CF79E949 >> 128;\r\n      if (x & 0x80 > 0)\r\n        result = result * 0x10000000000000058B90BFBE8E7BCE544 >> 128;\r\n      if (x & 0x40 > 0)\r\n        result = result * 0x1000000000000002C5C85FDF473DE6ECA >> 128;\r\n      if (x & 0x20 > 0)\r\n        result = result * 0x100000000000000162E42FEFA39EF366F >> 128;\r\n      if (x & 0x10 > 0)\r\n        result = result * 0x1000000000000000B17217F7D1CF79AFA >> 128;\r\n      if (x & 0x8 > 0)\r\n        result = result * 0x100000000000000058B90BFBE8E7BCD6D >> 128;\r\n      if (x & 0x4 > 0)\r\n        result = result * 0x10000000000000002C5C85FDF473DE6B2 >> 128;\r\n      if (x & 0x2 > 0)\r\n        result = result * 0x1000000000000000162E42FEFA39EF358 >> 128;\r\n      if (x & 0x1 > 0)\r\n        result = result * 0x10000000000000000B17217F7D1CF79AB >> 128;\r\n\r\n      result >>= uint256 (int256 (63 - (x >> 64)));\r\n      require (result <= uint256 (int256 (MAX_64x64)));\r\n\r\n      return int128 (int256 (result));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate natural exponent of x.  Revert on overflow.\r\n   *\r\n   * @param x signed 64.64-bit fixed point number\r\n   * @return signed 64.64-bit fixed point number\r\n   */\r\n  function exp (int128 x) internal pure returns (int128) {\r\n    unchecked {\r\n      require (x < 0x400000000000000000); // Overflow\r\n\r\n      if (x < -0x400000000000000000) return 0; // Underflow\r\n\r\n      return exp_2 (\r\n          int128 (int256 (x) * 0x171547652B82FE1777D0FFDA0D23A7D12 >> 128));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\r\n   * integer numbers.  Revert on overflow or when y is zero.\r\n   *\r\n   * @param x unsigned 256-bit integer number\r\n   * @param y unsigned 256-bit integer number\r\n   * @return unsigned 64.64-bit fixed point number\r\n   */\r\n  function divuu (uint256 x, uint256 y) private pure returns (uint128) {\r\n    unchecked {\r\n      require (y != 0);\r\n\r\n      uint256 result;\r\n\r\n      if (x <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)\r\n        result = (x << 64) / y;\r\n      else {\r\n        uint256 msb = 192;\r\n        uint256 xc = x >> 192;\r\n        if (xc >= 0x100000000) { xc >>= 32; msb += 32; }\r\n        if (xc >= 0x10000) { xc >>= 16; msb += 16; }\r\n        if (xc >= 0x100) { xc >>= 8; msb += 8; }\r\n        if (xc >= 0x10) { xc >>= 4; msb += 4; }\r\n        if (xc >= 0x4) { xc >>= 2; msb += 2; }\r\n        if (xc >= 0x2) msb += 1;  // No need to shift xc anymore\r\n\r\n        result = (x << 255 - msb) / ((y - 1 >> msb - 191) + 1);\r\n        require (result <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\r\n\r\n        uint256 hi = result * (y >> 128);\r\n        uint256 lo = result * (y & 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\r\n\r\n        uint256 xh = x >> 192;\r\n        uint256 xl = x << 64;\r\n\r\n        if (xl < lo) xh -= 1;\r\n        xl -= lo; // We rely on overflow behavior here\r\n        lo = hi << 128;\r\n        if (xl < lo) xh -= 1;\r\n        xl -= lo; // We rely on overflow behavior here\r\n\r\n        assert (xh == hi >> 128);\r\n\r\n        result += xl / y;\r\n      }\r\n\r\n      require (result <= 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF);\r\n      return uint128 (result);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate sqrt (x) rounding down, where x is unsigned 256-bit integer\r\n   * number.\r\n   *\r\n   * @param x unsigned 256-bit integer number\r\n   * @return unsigned 128-bit integer number\r\n   */\r\n  function sqrtu (uint256 x) private pure returns (uint128) {\r\n    unchecked {\r\n      if (x == 0) return 0;\r\n      else {\r\n        uint256 xx = x;\r\n        uint256 r = 1;\r\n        if (xx >= 0x100000000000000000000000000000000) { xx >>= 128; r <<= 64; }\r\n        if (xx >= 0x10000000000000000) { xx >>= 64; r <<= 32; }\r\n        if (xx >= 0x100000000) { xx >>= 32; r <<= 16; }\r\n        if (xx >= 0x10000) { xx >>= 16; r <<= 8; }\r\n        if (xx >= 0x100) { xx >>= 8; r <<= 4; }\r\n        if (xx >= 0x10) { xx >>= 4; r <<= 2; }\r\n        if (xx >= 0x8) { r <<= 1; }\r\n        r = (r + x / r) >> 1;\r\n        r = (r + x / r) >> 1;\r\n        r = (r + x / r) >> 1;\r\n        r = (r + x / r) >> 1;\r\n        r = (r + x / r) >> 1;\r\n        r = (r + x / r) >> 1;\r\n        r = (r + x / r) >> 1; // Seven iterations should be enough\r\n        uint256 r1 = x / r;\r\n        return uint128 (r < r1 ? r : r1);\r\n      }\r\n    }\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ABDKMath64x64.sol": {
				"ABDKMath64x64": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ABDKMath64x64.sol\":681:26301  library ABDKMath64x64 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ABDKMath64x64.sol\":681:26301  library ABDKMath64x64 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e7efe4cbc2f40f5a939e42066f9fb9c296ea37364fabfb70a3725f8c165322664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e7efe4cbc2f40f5a939e42066f9fb9c296ea37364fabfb70a3725f8c165322664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x7EFE4CBC2F40F5A939E42066F9FB9C 0x29 PUSH15 0xA37364FABFB70A3725F8C165322664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "681:25620:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e7efe4cbc2f40f5a939e42066f9fb9c296ea37364fabfb70a3725f8c165322664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x7EFE4CBC2F40F5A939E42066F9FB9C 0x29 PUSH15 0xA37364FABFB70A3725F8C165322664 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "681:25620:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int128)": "infinite",
								"add(int128,int128)": "infinite",
								"avg(int128,int128)": "infinite",
								"div(int128,int128)": "infinite",
								"divi(int256,int256)": "infinite",
								"divu(uint256,uint256)": "infinite",
								"divuu(uint256,uint256)": "infinite",
								"exp(int128)": "infinite",
								"exp_2(int128)": "infinite",
								"from128x128(int256)": "infinite",
								"fromInt(int256)": "infinite",
								"fromUInt(uint256)": "infinite",
								"gavg(int128,int128)": "infinite",
								"inv(int128)": "infinite",
								"ln(int128)": "infinite",
								"log_2(int128)": "infinite",
								"mul(int128,int128)": "infinite",
								"muli(int128,int256)": "infinite",
								"mulu(int128,uint256)": "infinite",
								"neg(int128)": "infinite",
								"pow(int128,uint256)": "infinite",
								"sqrt(int128)": "infinite",
								"sqrtu(uint256)": "infinite",
								"sub(int128,int128)": "infinite",
								"to128x128(int128)": "infinite",
								"toInt(int128)": "infinite",
								"toUInt(int128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 681,
									"end": 26301,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e7efe4cbc2f40f5a939e42066f9fb9c296ea37364fabfb70a3725f8c165322664736f6c63430008070033",
									".code": [
										{
											"begin": 681,
											"end": 26301,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 26301,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Smart contract library of mathematical functions operating with signed 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is basically a simple fraction whose numerator is signed 128-bit integer and denominator is 2^64.  As long as denominator is always the same, there is no need to store it, thus in Solidity signed 64.64-bit fixed point numbers are represented by int128 type holding only the numerator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"ABDKMath64x64.sol\":\"ABDKMath64x64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ABDKMath64x64.sol\":{\"keccak256\":\"0xa777b0eb32eff9e6c118bfb10f2b86bf6835a2bd2e835d914fce3b84ae9ec02d\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://b9f8d13b765225dd13e388205934aae0c3715c6942f24b89ce118039fa8ba929\",\"dweb:/ipfs/QmR2LdqeuiWxi2vkS1PhcE1RbrHEkUXu7uK7dXdNtBWfyH\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Smart contract library of mathematical functions operating with signed 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is basically a simple fraction whose numerator is signed 128-bit integer and denominator is 2^64.  As long as denominator is always the same, there is no need to store it, thus in Solidity signed 64.64-bit fixed point numbers are represented by int128 type holding only the numerator.",
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"WandInstruments.sol": {
				"Baton": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addrTo",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mint(address,uint256)": "40c10f19"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addrTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WandInstruments.sol\":\"Baton\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ABDKMath64x64.sol\":{\"keccak256\":\"0xa777b0eb32eff9e6c118bfb10f2b86bf6835a2bd2e835d914fce3b84ae9ec02d\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://b9f8d13b765225dd13e388205934aae0c3715c6942f24b89ce118039fa8ba929\",\"dweb:/ipfs/QmR2LdqeuiWxi2vkS1PhcE1RbrHEkUXu7uK7dXdNtBWfyH\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"WandInstruments.sol\":{\"keccak256\":\"0x65e7736eaa8a96e05be6c945b13f8a6b7af5c4e10bdbfaad40ae7f6ecb44837b\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://d87c69d2a8c15d23ea35c5c25841f891ce2925207cd87c874745cccc2db2ae0c\",\"dweb:/ipfs/QmZn83LxutUf4jnFfNTGwBEYZJGjHqFco3yVubcCChbEA1\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Interface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "whom",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WandInstruments.sol\":\"ERC20Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ABDKMath64x64.sol\":{\"keccak256\":\"0xa777b0eb32eff9e6c118bfb10f2b86bf6835a2bd2e835d914fce3b84ae9ec02d\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://b9f8d13b765225dd13e388205934aae0c3715c6942f24b89ce118039fa8ba929\",\"dweb:/ipfs/QmR2LdqeuiWxi2vkS1PhcE1RbrHEkUXu7uK7dXdNtBWfyH\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"WandInstruments.sol\":{\"keccak256\":\"0x65e7736eaa8a96e05be6c945b13f8a6b7af5c4e10bdbfaad40ae7f6ecb44837b\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://d87c69d2a8c15d23ea35c5c25841f891ce2925207cd87c874745cccc2db2ae0c\",\"dweb:/ipfs/QmZn83LxutUf4jnFfNTGwBEYZJGjHqFco3yVubcCChbEA1\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedSafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"WandInstruments.sol\":127:2705  library SignedSafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"WandInstruments.sol\":127:2705  library SignedSafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220319594da2369b8a5a94adfa5a684bc42a5fab4264a4eb29a759b6a4ac90bcdbf64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220319594da2369b8a5a94adfa5a684bc42a5fab4264a4eb29a759b6a4ac90bcdbf64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP6 SWAP5 0xDA 0x23 PUSH10 0xB8A5A94ADFA5A684BC42 0xA5 STATICCALL 0xB4 0x26 0x4A 0x4E 0xB2 SWAP11 PUSH22 0x9B6A4AC90BCDBF64736F6C6343000807003300000000 ",
							"sourceMap": "127:2578:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220319594da2369b8a5a94adfa5a684bc42a5fab4264a4eb29a759b6a4ac90bcdbf64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE SWAP6 SWAP5 0xDA 0x23 PUSH10 0xB8A5A94ADFA5A684BC42 0xA5 STATICCALL 0xB4 0x26 0x4A 0x4E 0xB2 SWAP11 PUSH22 0x9B6A4AC90BCDBF64736F6C6343000807003300000000 ",
							"sourceMap": "127:2578:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"div(int256,int256)": "infinite",
								"mul(int256,int256)": "infinite",
								"sub(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 127,
									"end": 2705,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220319594da2369b8a5a94adfa5a684bc42a5fab4264a4eb29a759b6a4ac90bcdbf64736f6c63430008070033",
									".code": [
										{
											"begin": 127,
											"end": 2705,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 2705,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WandInstruments.sol\":\"SignedSafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ABDKMath64x64.sol\":{\"keccak256\":\"0xa777b0eb32eff9e6c118bfb10f2b86bf6835a2bd2e835d914fce3b84ae9ec02d\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://b9f8d13b765225dd13e388205934aae0c3715c6942f24b89ce118039fa8ba929\",\"dweb:/ipfs/QmR2LdqeuiWxi2vkS1PhcE1RbrHEkUXu7uK7dXdNtBWfyH\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"WandInstruments.sol\":{\"keccak256\":\"0x65e7736eaa8a96e05be6c945b13f8a6b7af5c4e10bdbfaad40ae7f6ecb44837b\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://d87c69d2a8c15d23ea35c5c25841f891ce2925207cd87c874745cccc2db2ae0c\",\"dweb:/ipfs/QmZn83LxutUf4jnFfNTGwBEYZJGjHqFco3yVubcCChbEA1\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WandInstruments": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "scepterAddr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "batonAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountSCPtoBuy",
									"type": "uint256"
								}
							],
							"name": "buyScepter",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "a",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "b",
									"type": "int256"
								}
							],
							"name": "floorDiv",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBackingPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBuyPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSellPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "growthFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintBaton",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mockUSDC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_addressToQuery",
									"type": "address"
								}
							],
							"name": "queryERC20Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "res",
							"outputs": [
								{
									"internalType": "int128",
									"name": "",
									"type": "int128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountSCPtoSell",
									"type": "uint256"
								}
							],
							"name": "sellScepter",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tSC",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "testwallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury1Addr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury1bal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury2Addr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"WandInstruments.sol\":2709:7547  contract WandInstruments {\r... */\n  mstore(0x40, 0x80)\n    /* \"WandInstruments.sol\":3258:3273  500000*(10**18) */\n  0x69e10de76676d0800000\n    /* \"WandInstruments.sol\":3228:3273  uint256 public treasury1bal = 500000*(10**18) */\n  0x08\n  sstore\n    /* \"WandInstruments.sol\":3328:3334  100000 */\n  0x0186a0\n    /* \"WandInstruments.sol\":3297:3334  uint256 private ft5daybought = 100000 */\n  0x09\n  sstore\n    /* \"WandInstruments.sol\":3370:3375  90000 */\n  0x015f90\n    /* \"WandInstruments.sol\":3341:3375  uint256 private ft5daysold = 90000 */\n  0x0a\n  sstore\n    /* \"WandInstruments.sol\":3417:3423  600000 */\n  0x0927c0\n    /* \"WandInstruments.sol\":3382:3423  uint256 private double5daytokens = 600000 */\n  0x0b\n  sstore\n    /* \"WandInstruments.sol\":3450:3451  9 */\n  0x09\n    /* \"WandInstruments.sol\":3430:3451  uint256 private a = 9 */\n  0x0c\n  sstore\n    /* \"WandInstruments.sol\":3479:3481  10 */\n  0x0a\n    /* \"WandInstruments.sol\":3458:3481  uint256 private bc = 10 */\n  0x0d\n  sstore\n    /* \"WandInstruments.sol\":3540:3582  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n    /* \"WandInstruments.sol\":3512:3582  address public testwallet = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x0f\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandInstruments.sol\":3813:4380  constructor(address scepterAddr, address batonAddr) {   \r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"WandInstruments.sol\":3928:3937  batonAddr */\n  dup1\n    /* \"WandInstruments.sol\":3918:3919  b */\n  0x12\n  0x00\n    /* \"WandInstruments.sol\":3918:3938  b = Baton(batonAddr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandInstruments.sol\":3965:3976  scepterAddr */\n  dup2\n    /* \"WandInstruments.sol\":3952:3955  tSC */\n  0x10\n  0x00\n    /* \"WandInstruments.sol\":3952:3977  tSC = IERC20(scepterAddr) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandInstruments.sol\":4007:4049  0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B */\n  0xd7acd2a9fd159e69bb102a1ca21c9a3e3a5f771b\n    /* \"WandInstruments.sol\":3989:3997  mockUSDC */\n  0x11\n  0x00\n    /* \"WandInstruments.sol\":3989:4050  mockUSDC = IERC20(0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandInstruments.sol\":4077:4119  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n    /* \"WandInstruments.sol\":4061:4074  treasury1Addr */\n  0x06\n  0x00\n    /* \"WandInstruments.sol\":4061:4119  treasury1Addr = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"WandInstruments.sol\":4227:4233  10**18 */\n  0x0de0b6b3a7640000\n    /* \"WandInstruments.sol\":4206:4222  double5daytokens */\n  sload(0x0b)\n    /* \"WandInstruments.sol\":4193:4205  ft5daybought */\n  sload(0x09)\n    /* \"WandInstruments.sol\":4193:4222  ft5daybought/double5daytokens */\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"WandInstruments.sol\":4192:4234  (ft5daybought/double5daytokens) * (10**18) */\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"WandInstruments.sol\":4179:4191  growthFactor */\n  0x00\n    /* \"WandInstruments.sol\":4179:4234  growthFactor=(ft5daybought/double5daytokens) * (10**18) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"WandInstruments.sol\":4349:4355  10**18 */\n  0x0de0b6b3a7640000\n    /* \"WandInstruments.sol\":4330:4346  double5daytokens */\n  sload(0x0b)\n    /* \"WandInstruments.sol\":4319:4329  ft5daysold */\n  sload(0x0a)\n    /* \"WandInstruments.sol\":4319:4346  ft5daysold/double5daytokens */\n  tag_10\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_10:\n    /* \"WandInstruments.sol\":4319:4356  ft5daysold/double5daytokens* (10**18) */\n  tag_11\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_11:\n    /* \"WandInstruments.sol\":4308:4318  sellFactor */\n  0x01\n    /* \"WandInstruments.sol\":4308:4356  sellFactor=ft5daysold/double5daytokens* (10**18) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"WandInstruments.sol\":3813:4380  constructor(address scepterAddr, address batonAddr) {   \r... */\n  pop\n  pop\n    /* \"WandInstruments.sol\":2709:7547  contract WandInstruments {\r... */\n  jump(tag_12)\n    /* \"#utility.yul\":7:150   */\ntag_14:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_16\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_20\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":260:379   */\ntag_19:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_22\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_14\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_23\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_14\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:935   */\ntag_7:\n    /* \"#utility.yul\":790:791   */\n  0x00\n    /* \"#utility.yul\":807:827   */\n  tag_27\n    /* \"#utility.yul\":825:826   */\n  dup3\n    /* \"#utility.yul\":807:827   */\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":802:827   */\n  swap2\n  pop\n    /* \"#utility.yul\":841:861   */\n  tag_29\n    /* \"#utility.yul\":859:860   */\n  dup4\n    /* \"#utility.yul\":841:861   */\n  tag_28\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":836:861   */\n  swap3\n  pop\n    /* \"#utility.yul\":880:881   */\n  dup3\n    /* \"#utility.yul\":870:905   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":885:903   */\n  tag_31\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":870:905   */\ntag_30:\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:925   */\n  dup3\n    /* \"#utility.yul\":920:929   */\n  div\n    /* \"#utility.yul\":915:929   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:935   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":941:1289   */\ntag_9:\n    /* \"#utility.yul\":981:988   */\n  0x00\n    /* \"#utility.yul\":1004:1024   */\n  tag_34\n    /* \"#utility.yul\":1022:1023   */\n  dup3\n    /* \"#utility.yul\":1004:1024   */\n  tag_28\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":999:1024   */\n  swap2\n  pop\n    /* \"#utility.yul\":1038:1058   */\n  tag_35\n    /* \"#utility.yul\":1056:1057   */\n  dup4\n    /* \"#utility.yul\":1038:1058   */\n  tag_28\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1033:1058   */\n  swap3\n  pop\n    /* \"#utility.yul\":1226:1227   */\n  dup2\n    /* \"#utility.yul\":1158:1224   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1154:1228   */\n  div\n    /* \"#utility.yul\":1151:1152   */\n  dup4\n    /* \"#utility.yul\":1148:1229   */\n  gt\n    /* \"#utility.yul\":1143:1144   */\n  dup3\n    /* \"#utility.yul\":1136:1145   */\n  iszero\n    /* \"#utility.yul\":1129:1146   */\n  iszero\n    /* \"#utility.yul\":1125:1230   */\n  and\n    /* \"#utility.yul\":1122:1253   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1233:1251   */\n  tag_37\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1122:1253   */\ntag_36:\n    /* \"#utility.yul\":1281:1282   */\n  dup3\n    /* \"#utility.yul\":1278:1279   */\n  dup3\n    /* \"#utility.yul\":1274:1283   */\n  mul\n    /* \"#utility.yul\":1263:1283   */\n  swap1\n  pop\n    /* \"#utility.yul\":941:1289   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1295:1391   */\ntag_39:\n    /* \"#utility.yul\":1332:1339   */\n  0x00\n    /* \"#utility.yul\":1361:1385   */\n  tag_41\n    /* \"#utility.yul\":1379:1384   */\n  dup3\n    /* \"#utility.yul\":1361:1385   */\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1350:1385   */\n  swap1\n  pop\n    /* \"#utility.yul\":1295:1391   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1397:1523   */\ntag_42:\n    /* \"#utility.yul\":1434:1441   */\n  0x00\n    /* \"#utility.yul\":1474:1516   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1467:1472   */\n  dup3\n    /* \"#utility.yul\":1463:1517   */\n  and\n    /* \"#utility.yul\":1452:1517   */\n  swap1\n  pop\n    /* \"#utility.yul\":1397:1523   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1529:1606   */\ntag_28:\n    /* \"#utility.yul\":1566:1573   */\n  0x00\n    /* \"#utility.yul\":1595:1600   */\n  dup2\n    /* \"#utility.yul\":1584:1600   */\n  swap1\n  pop\n    /* \"#utility.yul\":1529:1606   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1612:1792   */\ntag_38:\n    /* \"#utility.yul\":1660:1737   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1657:1658   */\n  0x00\n    /* \"#utility.yul\":1650:1738   */\n  mstore\n    /* \"#utility.yul\":1757:1761   */\n  0x11\n    /* \"#utility.yul\":1754:1755   */\n  0x04\n    /* \"#utility.yul\":1747:1762   */\n  mstore\n    /* \"#utility.yul\":1781:1785   */\n  0x24\n    /* \"#utility.yul\":1778:1779   */\n  0x00\n    /* \"#utility.yul\":1771:1786   */\n  revert\n    /* \"#utility.yul\":1798:1978   */\ntag_32:\n    /* \"#utility.yul\":1846:1923   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1843:1844   */\n  0x00\n    /* \"#utility.yul\":1836:1924   */\n  mstore\n    /* \"#utility.yul\":1943:1947   */\n  0x12\n    /* \"#utility.yul\":1940:1941   */\n  0x04\n    /* \"#utility.yul\":1933:1948   */\n  mstore\n    /* \"#utility.yul\":1967:1971   */\n  0x24\n    /* \"#utility.yul\":1964:1965   */\n  0x00\n    /* \"#utility.yul\":1957:1972   */\n  revert\n    /* \"#utility.yul\":2107:2224   */\ntag_21:\n    /* \"#utility.yul\":2216:2217   */\n  0x00\n    /* \"#utility.yul\":2213:2214   */\n  dup1\n    /* \"#utility.yul\":2206:2218   */\n  revert\n    /* \"#utility.yul\":2230:2352   */\ntag_17:\n    /* \"#utility.yul\":2303:2327   */\n  tag_51\n    /* \"#utility.yul\":2321:2326   */\n  dup2\n    /* \"#utility.yul\":2303:2327   */\n  tag_39\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2296:2301   */\n  dup2\n    /* \"#utility.yul\":2293:2328   */\n  eq\n    /* \"#utility.yul\":2283:2346   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2342:2343   */\n  0x00\n    /* \"#utility.yul\":2339:2340   */\n  dup1\n    /* \"#utility.yul\":2332:2344   */\n  revert\n    /* \"#utility.yul\":2283:2346   */\ntag_52:\n    /* \"#utility.yul\":2230:2352   */\n  pop\n  jump\t// out\n    /* \"WandInstruments.sol\":2709:7547  contract WandInstruments {\r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"WandInstruments.sol\":2709:7547  contract WandInstruments {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6f10e285\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xee467678\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xee467678\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xee546a51\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xee620868\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xeee05f5e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfbbb4589\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x6f10e285\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcbff4617\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdaa3a4a4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd9b1d97\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x35453307\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x35453307\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x43d32e9c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x65819f7e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6e05c1b9\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x018a25e8\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0e8a0f89\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f564a06\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2934b237\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"WandInstruments.sol\":6888:7042  function getBuyPrice() external view returns (uint256){\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":6510:6676  function floorDiv(int256 a, int256 b) public returns (int256) {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":6682:6882  function getBackingPrice() external view returns (uint256){\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":6395:6502  function mintBaton(uint256 amount) public {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"WandInstruments.sol\":3228:3273  uint256 public treasury1bal = 500000*(10**18) */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":7048:7268  function getSellPrice() external view returns (uint256){\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":5592:6389  function buyScepter(uint256 amountSCPtoBuy) public payable{\r... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"WandInstruments.sol\":3710:3727  IERC20 public tSC */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":3488:3505  int128 public res */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":2908:2933  uint256 public sellFactor */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":4705:5586  function sellScepter(uint256 amountSCPtoSell) public payable{\r... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"WandInstruments.sol\":3159:3187  address public treasury2Addr */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":3734:3756  IERC20 public mockUSDC */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":4388:4572  function queryERC20Balance(address _tokenAddress, address _addressToQuery) view public returns (uint) {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":2874:2901  uint256 public growthFactor */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":3512:3582  address public testwallet = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":3124:3152  address public treasury1Addr */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"WandInstruments.sol\":6888:7042  function getBuyPrice() external view returns (uint256){\r... */\n    tag_24:\n        /* \"WandInstruments.sol\":6934:6941  uint256 */\n      0x00\n        /* \"WandInstruments.sol\":7026:7032  10**18 */\n      0x0de0b6b3a7640000\n        /* \"WandInstruments.sol\":7011:7021  sellFactor */\n      sload(0x01)\n        /* \"WandInstruments.sol\":6992:7008  (9/10) *(10**18) */\n      0x0c7d713b49da0000\n        /* \"WandInstruments.sol\":6992:7021  (9/10) *(10**18) - sellFactor */\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"WandInstruments.sol\":6966:6970  this */\n      address\n        /* \"WandInstruments.sol\":6966:6986  this.getBackingPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1f564a06\n        /* \"WandInstruments.sol\":6966:6988  this.getBackingPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"WandInstruments.sol\":6966:7022  this.getBackingPrice() * ((9/10) *(10**18) - sellFactor) */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"WandInstruments.sol\":6966:7033  this.getBackingPrice() * ((9/10) *(10**18) - sellFactor) / (10**18) */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"WandInstruments.sol\":6958:7034  return (this.getBackingPrice() * ((9/10) *(10**18) - sellFactor) / (10**18)) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":6888:7042  function getBuyPrice() external view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"WandInstruments.sol\":6510:6676  function floorDiv(int256 a, int256 b) public returns (int256) {\r... */\n    tag_31:\n        /* \"WandInstruments.sol\":6564:6570  int256 */\n      0x00\n        /* \"WandInstruments.sol\":6579:6587  int256 r */\n      dup1\n        /* \"WandInstruments.sol\":6590:6614  SignedSafeMath.div(a, b) */\n      tag_111\n        /* \"WandInstruments.sol\":6609:6610  a */\n      dup5\n        /* \"WandInstruments.sol\":6612:6613  b */\n      dup5\n        /* \"WandInstruments.sol\":6590:6608  SignedSafeMath.div */\n      tag_112\n        /* \"WandInstruments.sol\":6590:6614  SignedSafeMath.div(a, b) */\n      jump\t// in\n    tag_111:\n        /* \"WandInstruments.sol\":6579:6614  int256 r = SignedSafeMath.div(a, b) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":6635:6636  0 */\n      0x00\n        /* \"WandInstruments.sol\":6630:6631  b */\n      dup4\n        /* \"WandInstruments.sol\":6626:6627  a */\n      dup6\n        /* \"WandInstruments.sol\":6626:6631  a ^ b */\n      xor\n        /* \"WandInstruments.sol\":6625:6636  (a ^ b) < 0 */\n      slt\n        /* \"WandInstruments.sol\":6625:6652  (a ^ b) < 0 && (r * b != a) */\n      dup1\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"WandInstruments.sol\":6650:6651  a */\n      dup4\n        /* \"WandInstruments.sol\":6645:6646  b */\n      dup4\n        /* \"WandInstruments.sol\":6641:6642  r */\n      dup3\n        /* \"WandInstruments.sol\":6641:6646  r * b */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"WandInstruments.sol\":6641:6651  r * b != a */\n      eq\n      iszero\n        /* \"WandInstruments.sol\":6625:6652  (a ^ b) < 0 && (r * b != a) */\n    tag_113:\n        /* \"WandInstruments.sol\":6621:6657  if ((a ^ b) < 0 && (r * b != a)) r-- */\n      iszero\n      tag_116\n      jumpi\n        /* \"WandInstruments.sol\":6654:6657  r-- */\n      dup1\n      dup1\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      swap2\n      pop\n      pop\n        /* \"WandInstruments.sol\":6621:6657  if ((a ^ b) < 0 && (r * b != a)) r-- */\n    tag_116:\n        /* \"WandInstruments.sol\":6671:6672  r */\n      dup1\n        /* \"WandInstruments.sol\":6664:6672  return r */\n      swap2\n      pop\n      pop\n        /* \"WandInstruments.sol\":6510:6676  function floorDiv(int256 a, int256 b) public returns (int256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"WandInstruments.sol\":6682:6882  function getBackingPrice() external view returns (uint256){\r... */\n    tag_36:\n        /* \"WandInstruments.sol\":6732:6739  uint256 */\n      0x00\n        /* \"WandInstruments.sol\":6833:6836  tSC */\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":6833:6848  tSC.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"WandInstruments.sol\":6833:6850  tSC.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_123:\n        /* \"WandInstruments.sol\":6820:6832  treasury1bal */\n      sload(0x08)\n        /* \"WandInstruments.sol\":6820:6850  treasury1bal/tSC.totalSupply() */\n      tag_124\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_124:\n        /* \"WandInstruments.sol\":6812:6851  return (treasury1bal/tSC.totalSupply()) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":6682:6882  function getBackingPrice() external view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"WandInstruments.sol\":6395:6502  function mintBaton(uint256 amount) public {\r... */\n    tag_42:\n        /* \"WandInstruments.sol\":6458:6459  b */\n      0x12\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":6458:6464  b.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"WandInstruments.sol\":6465:6475  msg.sender */\n      caller\n        /* \"WandInstruments.sol\":6477:6483  amount */\n      dup4\n        /* \"WandInstruments.sol\":6458:6484  b.mint(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n        /* \"WandInstruments.sol\":6395:6502  function mintBaton(uint256 amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"WandInstruments.sol\":3228:3273  uint256 public treasury1bal = 500000*(10**18) */\n    tag_45:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":7048:7268  function getSellPrice() external view returns (uint256){\r... */\n    tag_49:\n        /* \"WandInstruments.sol\":7095:7102  uint256 */\n      0x00\n        /* \"WandInstruments.sol\":7253:7259  10**18 */\n      0x0de0b6b3a7640000\n        /* \"WandInstruments.sol\":7235:7247  6*(10**18)/5 */\n      0x10a741a462780000\n        /* \"WandInstruments.sol\":7219:7231  growthFactor */\n      sload(0x00)\n        /* \"WandInstruments.sol\":7219:7248  growthFactor + (6*(10**18)/5) */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"WandInstruments.sol\":7193:7197  this */\n      address\n        /* \"WandInstruments.sol\":7193:7213  this.getBackingPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1f564a06\n        /* \"WandInstruments.sol\":7193:7215  this.getBackingPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_137:\n        /* \"WandInstruments.sol\":7193:7249  this.getBackingPrice() * (growthFactor + (6*(10**18)/5)) */\n      tag_138\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_138:\n        /* \"WandInstruments.sol\":7192:7260  (this.getBackingPrice() * (growthFactor + (6*(10**18)/5)))/ (10**18) */\n      tag_139\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_139:\n        /* \"WandInstruments.sol\":7185:7260  return (this.getBackingPrice() * (growthFactor + (6*(10**18)/5)))/ (10**18) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":7048:7268  function getSellPrice() external view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"WandInstruments.sol\":5592:6389  function buyScepter(uint256 amountSCPtoBuy) public payable{\r... */\n    tag_53:\n        /* \"WandInstruments.sol\":5722:5749  uint256 trader_usdc_balance */\n      0x00\n        /* \"WandInstruments.sol\":5752:5760  mockUSDC */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":5752:5770  mockUSDC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"WandInstruments.sol\":5771:5781  msg.sender */\n      caller\n        /* \"WandInstruments.sol\":5752:5782  mockUSDC.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_145:\n        /* \"WandInstruments.sol\":5722:5782  uint256 trader_usdc_balance = mockUSDC.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":5823:5837  amountSCPtoBuy */\n      dup2\n        /* \"WandInstruments.sol\":5801:5820  trader_usdc_balance */\n      dup2\n        /* \"WandInstruments.sol\":5801:5837  trader_usdc_balance > amountSCPtoBuy */\n      gt\n        /* \"WandInstruments.sol\":5793:5868  require(trader_usdc_balance > amountSCPtoBuy, \"You dont have that amount!\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"WandInstruments.sol\":5919:5922  tSC */\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":5919:5931  tSC.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"WandInstruments.sol\":5932:5942  msg.sender */\n      caller\n        /* \"WandInstruments.sol\":5944:5958  amountSCPtoBuy */\n      dup5\n        /* \"WandInstruments.sol\":5919:5959  tSC.transfer(msg.sender, amountSCPtoBuy) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_149:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      pop\n        /* \"WandInstruments.sol\":6093:6163  _safeTransferFrom(mockUSDC, msg.sender, address(this), amountSCPtoBuy) */\n      tag_155\n        /* \"WandInstruments.sol\":6111:6119  mockUSDC */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":6121:6131  msg.sender */\n      caller\n        /* \"WandInstruments.sol\":6141:6145  this */\n      address\n        /* \"WandInstruments.sol\":6148:6162  amountSCPtoBuy */\n      dup6\n        /* \"WandInstruments.sol\":6093:6110  _safeTransferFrom */\n      tag_156\n        /* \"WandInstruments.sol\":6093:6163  _safeTransferFrom(mockUSDC, msg.sender, address(this), amountSCPtoBuy) */\n      jump\t// in\n    tag_155:\n        /* \"WandInstruments.sol\":5650:6389  {\r... */\n      pop\n        /* \"WandInstruments.sol\":5592:6389  function buyScepter(uint256 amountSCPtoBuy) public payable{\r... */\n      pop\n      jump\t// out\n        /* \"WandInstruments.sol\":3710:3727  IERC20 public tSC */\n    tag_56:\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":3488:3505  int128 public res */\n    tag_61:\n      0x0e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x0f\n      signextend\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":2908:2933  uint256 public sellFactor */\n    tag_66:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":4705:5586  function sellScepter(uint256 amountSCPtoSell) public payable{\r... */\n    tag_70:\n        /* \"WandInstruments.sol\":4837:4863  uint256 trader_tsc_balance */\n      0x00\n        /* \"WandInstruments.sol\":4866:4869  tSC */\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":4866:4879  tSC.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"WandInstruments.sol\":4880:4890  msg.sender */\n      caller\n        /* \"WandInstruments.sol\":4866:4891  tSC.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_158:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_162:\n        /* \"WandInstruments.sol\":4837:4891  uint256 trader_tsc_balance = tSC.balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":4931:4946  amountSCPtoSell */\n      dup2\n        /* \"WandInstruments.sol\":4910:4928  trader_tsc_balance */\n      dup2\n        /* \"WandInstruments.sol\":4910:4946  trader_tsc_balance > amountSCPtoSell */\n      gt\n        /* \"WandInstruments.sol\":4902:4977  require(trader_tsc_balance > amountSCPtoSell, \"You dont have that amount!\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_148\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"WandInstruments.sol\":5179:5187  mockUSDC */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":5179:5196  mockUSDC.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"WandInstruments.sol\":5197:5207  msg.sender */\n      caller\n        /* \"WandInstruments.sol\":5228:5238  1*(10**18) */\n      0x0de0b6b3a7640000\n        /* \"WandInstruments.sol\":5209:5224  amountSCPtoSell */\n      dup6\n        /* \"WandInstruments.sol\":5209:5239  amountSCPtoSell + (1*(10**18)) */\n      tag_165\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_165:\n        /* \"WandInstruments.sol\":5179:5240  mockUSDC.transfer(msg.sender, amountSCPtoSell + (1*(10**18))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_166:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_170:\n      pop\n        /* \"WandInstruments.sol\":5296:5362  _safeTransferFrom(tSC, msg.sender, address(this), amountSCPtoSell) */\n      tag_171\n        /* \"WandInstruments.sol\":5314:5317  tSC */\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"WandInstruments.sol\":5319:5329  msg.sender */\n      caller\n        /* \"WandInstruments.sol\":5339:5343  this */\n      address\n        /* \"WandInstruments.sol\":5346:5361  amountSCPtoSell */\n      dup6\n        /* \"WandInstruments.sol\":5296:5313  _safeTransferFrom */\n      tag_156\n        /* \"WandInstruments.sol\":5296:5362  _safeTransferFrom(tSC, msg.sender, address(this), amountSCPtoSell) */\n      jump\t// in\n    tag_171:\n        /* \"WandInstruments.sol\":4765:5586  {\r... */\n      pop\n        /* \"WandInstruments.sol\":4705:5586  function sellScepter(uint256 amountSCPtoSell) public payable{\r... */\n      pop\n      jump\t// out\n        /* \"WandInstruments.sol\":3159:3187  address public treasury2Addr */\n    tag_73:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":3734:3756  IERC20 public mockUSDC */\n    tag_78:\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":4388:4572  function queryERC20Balance(address _tokenAddress, address _addressToQuery) view public returns (uint) {\r... */\n    tag_84:\n        /* \"WandInstruments.sol\":4484:4488  uint */\n      0x00\n        /* \"WandInstruments.sol\":4523:4536  _tokenAddress */\n      dup3\n        /* \"WandInstruments.sol\":4508:4547  ERC20Interface(_tokenAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"WandInstruments.sol\":4548:4563  _addressToQuery */\n      dup4\n        /* \"WandInstruments.sol\":4508:4564  ERC20Interface(_tokenAddress).balanceOf(_addressToQuery) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_177:\n        /* \"WandInstruments.sol\":4501:4564  return ERC20Interface(_tokenAddress).balanceOf(_addressToQuery) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":4388:4572  function queryERC20Balance(address _tokenAddress, address _addressToQuery) view public returns (uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"WandInstruments.sol\":2874:2901  uint256 public growthFactor */\n    tag_88:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":3512:3582  address public testwallet = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n    tag_92:\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":3124:3152  address public treasury1Addr */\n    tag_96:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"WandInstruments.sol\":1502:1773  function div(int256 a, int256 b) internal pure returns (int256) {\r... */\n    tag_112:\n        /* \"WandInstruments.sol\":1558:1564  int256 */\n      0x00\n        /* \"WandInstruments.sol\":1590:1591  0 */\n      dup1\n        /* \"WandInstruments.sol\":1585:1586  b */\n      dup3\n        /* \"WandInstruments.sol\":1585:1591  b != 0 */\n      eq\n      iszero\n        /* \"WandInstruments.sol\":1577:1628  require(b != 0, \"SignedSafeMath: division by zero\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"WandInstruments.sol\":1654:1656  -1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"WandInstruments.sol\":1649:1650  b */\n      dup3\n        /* \"WandInstruments.sol\":1649:1656  b == -1 */\n      eq\n        /* \"WandInstruments.sol\":1649:1676  b == -1 && a == _INT256_MIN */\n      dup1\n      iszero\n      tag_182\n      jumpi\n      pop\n        /* \"WandInstruments.sol\":195:202  -2**255 */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"WandInstruments.sol\":1660:1661  a */\n      dup4\n        /* \"WandInstruments.sol\":1660:1676  a == _INT256_MIN */\n      eq\n        /* \"WandInstruments.sol\":1649:1676  b == -1 && a == _INT256_MIN */\n    tag_182:\n        /* \"WandInstruments.sol\":1647:1677  !(b == -1 && a == _INT256_MIN) */\n      iszero\n        /* \"WandInstruments.sol\":1639:1715  require(!(b == -1 && a == _INT256_MIN), \"SignedSafeMath: division overflow\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"WandInstruments.sol\":1728:1736  int256 c */\n      0x00\n        /* \"WandInstruments.sol\":1743:1744  b */\n      dup3\n        /* \"WandInstruments.sol\":1739:1740  a */\n      dup5\n        /* \"WandInstruments.sol\":1739:1744  a / b */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"WandInstruments.sol\":1728:1744  int256 c = a / b */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":1764:1765  c */\n      dup1\n        /* \"WandInstruments.sol\":1757:1765  return c */\n      swap2\n      pop\n      pop\n        /* \"WandInstruments.sol\":1502:1773  function div(int256 a, int256 b) internal pure returns (int256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"WandInstruments.sol\":7274:7542  function _safeTransferFrom(\r... */\n    tag_156:\n        /* \"WandInstruments.sol\":7428:7437  bool sent */\n      0x00\n        /* \"WandInstruments.sol\":7440:7445  token */\n      dup5\n        /* \"WandInstruments.sol\":7440:7458  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"WandInstruments.sol\":7459:7465  sender */\n      dup6\n        /* \"WandInstruments.sol\":7467:7476  recipient */\n      dup6\n        /* \"WandInstruments.sol\":7478:7484  amount */\n      dup6\n        /* \"WandInstruments.sol\":7440:7485  token.transferFrom(sender, recipient, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_194:\n        /* \"WandInstruments.sol\":7428:7485  bool sent = token.transferFrom(sender, recipient, amount) */\n      swap1\n      pop\n        /* \"WandInstruments.sol\":7504:7508  sent */\n      dup1\n        /* \"WandInstruments.sol\":7496:7534  require(sent, \"Token transfer failed\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"WandInstruments.sol\":7417:7542  {\r... */\n      pop\n        /* \"WandInstruments.sol\":7274:7542  function _safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_199:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_201\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_203:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_205\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:432   */\n    tag_207:\n        /* \"#utility.yul\":340:345   */\n      0x00\n        /* \"#utility.yul\":378:384   */\n      dup2\n        /* \"#utility.yul\":365:385   */\n      calldataload\n        /* \"#utility.yul\":356:385   */\n      swap1\n      pop\n        /* \"#utility.yul\":394:426   */\n      tag_209\n        /* \"#utility.yul\":420:425   */\n      dup2\n        /* \"#utility.yul\":394:426   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":295:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":438:577   */\n    tag_211:\n        /* \"#utility.yul\":484:489   */\n      0x00\n        /* \"#utility.yul\":522:528   */\n      dup2\n        /* \"#utility.yul\":509:529   */\n      calldataload\n        /* \"#utility.yul\":500:529   */\n      swap1\n      pop\n        /* \"#utility.yul\":538:571   */\n      tag_213\n        /* \"#utility.yul\":565:570   */\n      dup2\n        /* \"#utility.yul\":538:571   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":438:577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":583:726   */\n    tag_215:\n        /* \"#utility.yul\":640:645   */\n      0x00\n        /* \"#utility.yul\":671:677   */\n      dup2\n        /* \"#utility.yul\":665:678   */\n      mload\n        /* \"#utility.yul\":656:678   */\n      swap1\n      pop\n        /* \"#utility.yul\":687:720   */\n      tag_217\n        /* \"#utility.yul\":714:719   */\n      dup2\n        /* \"#utility.yul\":687:720   */\n      tag_214\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":583:726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":732:1206   */\n    tag_83:\n        /* \"#utility.yul\":800:806   */\n      0x00\n        /* \"#utility.yul\":808:814   */\n      dup1\n        /* \"#utility.yul\":857:859   */\n      0x40\n        /* \"#utility.yul\":845:854   */\n      dup4\n        /* \"#utility.yul\":836:843   */\n      dup6\n        /* \"#utility.yul\":832:855   */\n      sub\n        /* \"#utility.yul\":828:860   */\n      slt\n        /* \"#utility.yul\":825:944   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":863:942   */\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":825:944   */\n    tag_219:\n        /* \"#utility.yul\":983:984   */\n      0x00\n        /* \"#utility.yul\":1008:1061   */\n      tag_222\n        /* \"#utility.yul\":1053:1060   */\n      dup6\n        /* \"#utility.yul\":1044:1050   */\n      dup3\n        /* \"#utility.yul\":1033:1042   */\n      dup7\n        /* \"#utility.yul\":1029:1051   */\n      add\n        /* \"#utility.yul\":1008:1061   */\n      tag_199\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":998:1061   */\n      swap3\n      pop\n        /* \"#utility.yul\":954:1071   */\n      pop\n        /* \"#utility.yul\":1110:1112   */\n      0x20\n        /* \"#utility.yul\":1136:1189   */\n      tag_223\n        /* \"#utility.yul\":1181:1188   */\n      dup6\n        /* \"#utility.yul\":1172:1178   */\n      dup3\n        /* \"#utility.yul\":1161:1170   */\n      dup7\n        /* \"#utility.yul\":1157:1179   */\n      add\n        /* \"#utility.yul\":1136:1189   */\n      tag_199\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1126:1189   */\n      swap2\n      pop\n        /* \"#utility.yul\":1081:1199   */\n      pop\n        /* \"#utility.yul\":732:1206   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1212:1557   */\n    tag_154:\n        /* \"#utility.yul\":1279:1285   */\n      0x00\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1316:1325   */\n      dup3\n        /* \"#utility.yul\":1307:1314   */\n      dup5\n        /* \"#utility.yul\":1303:1326   */\n      sub\n        /* \"#utility.yul\":1299:1331   */\n      slt\n        /* \"#utility.yul\":1296:1415   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":1334:1413   */\n      tag_226\n      tag_221\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1296:1415   */\n    tag_225:\n        /* \"#utility.yul\":1454:1455   */\n      0x00\n        /* \"#utility.yul\":1479:1540   */\n      tag_227\n        /* \"#utility.yul\":1532:1539   */\n      dup5\n        /* \"#utility.yul\":1523:1529   */\n      dup3\n        /* \"#utility.yul\":1512:1521   */\n      dup6\n        /* \"#utility.yul\":1508:1530   */\n      add\n        /* \"#utility.yul\":1479:1540   */\n      tag_203\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1469:1540   */\n      swap2\n      pop\n        /* \"#utility.yul\":1425:1550   */\n      pop\n        /* \"#utility.yul\":1212:1557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:2033   */\n    tag_30:\n        /* \"#utility.yul\":1629:1635   */\n      0x00\n        /* \"#utility.yul\":1637:1643   */\n      dup1\n        /* \"#utility.yul\":1686:1688   */\n      0x40\n        /* \"#utility.yul\":1674:1683   */\n      dup4\n        /* \"#utility.yul\":1665:1672   */\n      dup6\n        /* \"#utility.yul\":1661:1684   */\n      sub\n        /* \"#utility.yul\":1657:1689   */\n      slt\n        /* \"#utility.yul\":1654:1773   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1692:1771   */\n      tag_230\n      tag_221\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1654:1773   */\n    tag_229:\n        /* \"#utility.yul\":1812:1813   */\n      0x00\n        /* \"#utility.yul\":1837:1889   */\n      tag_231\n        /* \"#utility.yul\":1881:1888   */\n      dup6\n        /* \"#utility.yul\":1872:1878   */\n      dup3\n        /* \"#utility.yul\":1861:1870   */\n      dup7\n        /* \"#utility.yul\":1857:1879   */\n      add\n        /* \"#utility.yul\":1837:1889   */\n      tag_207\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1827:1889   */\n      swap3\n      pop\n        /* \"#utility.yul\":1783:1899   */\n      pop\n        /* \"#utility.yul\":1938:1940   */\n      0x20\n        /* \"#utility.yul\":1964:2016   */\n      tag_232\n        /* \"#utility.yul\":2008:2015   */\n      dup6\n        /* \"#utility.yul\":1999:2005   */\n      dup3\n        /* \"#utility.yul\":1988:1997   */\n      dup7\n        /* \"#utility.yul\":1984:2006   */\n      add\n        /* \"#utility.yul\":1964:2016   */\n      tag_207\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1954:2016   */\n      swap2\n      pop\n        /* \"#utility.yul\":1909:2026   */\n      pop\n        /* \"#utility.yul\":1563:2033   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2039:2368   */\n    tag_41:\n        /* \"#utility.yul\":2098:2104   */\n      0x00\n        /* \"#utility.yul\":2147:2149   */\n      0x20\n        /* \"#utility.yul\":2135:2144   */\n      dup3\n        /* \"#utility.yul\":2126:2133   */\n      dup5\n        /* \"#utility.yul\":2122:2145   */\n      sub\n        /* \"#utility.yul\":2118:2150   */\n      slt\n        /* \"#utility.yul\":2115:2234   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":2153:2232   */\n      tag_235\n      tag_221\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2115:2234   */\n    tag_234:\n        /* \"#utility.yul\":2273:2274   */\n      0x00\n        /* \"#utility.yul\":2298:2351   */\n      tag_236\n        /* \"#utility.yul\":2343:2350   */\n      dup5\n        /* \"#utility.yul\":2334:2340   */\n      dup3\n        /* \"#utility.yul\":2323:2332   */\n      dup6\n        /* \"#utility.yul\":2319:2341   */\n      add\n        /* \"#utility.yul\":2298:2351   */\n      tag_211\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2288:2351   */\n      swap2\n      pop\n        /* \"#utility.yul\":2244:2361   */\n      pop\n        /* \"#utility.yul\":2039:2368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2374:2725   */\n    tag_105:\n        /* \"#utility.yul\":2444:2450   */\n      0x00\n        /* \"#utility.yul\":2493:2495   */\n      0x20\n        /* \"#utility.yul\":2481:2490   */\n      dup3\n        /* \"#utility.yul\":2472:2479   */\n      dup5\n        /* \"#utility.yul\":2468:2491   */\n      sub\n        /* \"#utility.yul\":2464:2496   */\n      slt\n        /* \"#utility.yul\":2461:2580   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2499:2578   */\n      tag_239\n      tag_221\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2461:2580   */\n    tag_238:\n        /* \"#utility.yul\":2619:2620   */\n      0x00\n        /* \"#utility.yul\":2644:2708   */\n      tag_240\n        /* \"#utility.yul\":2700:2707   */\n      dup5\n        /* \"#utility.yul\":2691:2697   */\n      dup3\n        /* \"#utility.yul\":2680:2689   */\n      dup6\n        /* \"#utility.yul\":2676:2698   */\n      add\n        /* \"#utility.yul\":2644:2708   */\n      tag_215\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2634:2708   */\n      swap2\n      pop\n        /* \"#utility.yul\":2590:2718   */\n      pop\n        /* \"#utility.yul\":2374:2725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2731:2849   */\n    tag_241:\n        /* \"#utility.yul\":2818:2842   */\n      tag_243\n        /* \"#utility.yul\":2836:2841   */\n      dup2\n        /* \"#utility.yul\":2818:2842   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2813:2816   */\n      dup3\n        /* \"#utility.yul\":2806:2843   */\n      mstore\n        /* \"#utility.yul\":2731:2849   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2855:3016   */\n    tag_245:\n        /* \"#utility.yul\":2957:3009   */\n      tag_247\n        /* \"#utility.yul\":3003:3008   */\n      dup2\n        /* \"#utility.yul\":2957:3009   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2952:2955   */\n      dup3\n        /* \"#utility.yul\":2945:3010   */\n      mstore\n        /* \"#utility.yul\":2855:3016   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3022:3137   */\n    tag_249:\n        /* \"#utility.yul\":3107:3130   */\n      tag_251\n        /* \"#utility.yul\":3124:3129   */\n      dup2\n        /* \"#utility.yul\":3107:3130   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3102:3105   */\n      dup3\n        /* \"#utility.yul\":3095:3131   */\n      mstore\n        /* \"#utility.yul\":3022:3137   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3258   */\n    tag_253:\n        /* \"#utility.yul\":3228:3251   */\n      tag_255\n        /* \"#utility.yul\":3245:3250   */\n      dup2\n        /* \"#utility.yul\":3228:3251   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3223:3226   */\n      dup3\n        /* \"#utility.yul\":3216:3252   */\n      mstore\n        /* \"#utility.yul\":3143:3258   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3630   */\n    tag_257:\n        /* \"#utility.yul\":3406:3409   */\n      0x00\n        /* \"#utility.yul\":3427:3494   */\n      tag_259\n        /* \"#utility.yul\":3491:3493   */\n      0x15\n        /* \"#utility.yul\":3486:3489   */\n      dup4\n        /* \"#utility.yul\":3427:3494   */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":3420:3494   */\n      swap2\n      pop\n        /* \"#utility.yul\":3503:3596   */\n      tag_261\n        /* \"#utility.yul\":3592:3595   */\n      dup3\n        /* \"#utility.yul\":3503:3596   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3621:3623   */\n      0x20\n        /* \"#utility.yul\":3616:3619   */\n      dup3\n        /* \"#utility.yul\":3612:3624   */\n      add\n        /* \"#utility.yul\":3605:3624   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3630   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3636:4002   */\n    tag_263:\n        /* \"#utility.yul\":3778:3781   */\n      0x00\n        /* \"#utility.yul\":3799:3866   */\n      tag_265\n        /* \"#utility.yul\":3863:3865   */\n      0x21\n        /* \"#utility.yul\":3858:3861   */\n      dup4\n        /* \"#utility.yul\":3799:3866   */\n      tag_260\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3792:3866   */\n      swap2\n      pop\n        /* \"#utility.yul\":3875:3968   */\n      tag_266\n        /* \"#utility.yul\":3964:3967   */\n      dup3\n        /* \"#utility.yul\":3875:3968   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3993:3995   */\n      0x40\n        /* \"#utility.yul\":3988:3991   */\n      dup3\n        /* \"#utility.yul\":3984:3996   */\n      add\n        /* \"#utility.yul\":3977:3996   */\n      swap1\n      pop\n        /* \"#utility.yul\":3636:4002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4008:4374   */\n    tag_268:\n        /* \"#utility.yul\":4150:4153   */\n      0x00\n        /* \"#utility.yul\":4171:4238   */\n      tag_270\n        /* \"#utility.yul\":4235:4237   */\n      0x1a\n        /* \"#utility.yul\":4230:4233   */\n      dup4\n        /* \"#utility.yul\":4171:4238   */\n      tag_260\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4164:4238   */\n      swap2\n      pop\n        /* \"#utility.yul\":4247:4340   */\n      tag_271\n        /* \"#utility.yul\":4336:4339   */\n      dup3\n        /* \"#utility.yul\":4247:4340   */\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4365:4367   */\n      0x20\n        /* \"#utility.yul\":4360:4363   */\n      dup3\n        /* \"#utility.yul\":4356:4368   */\n      add\n        /* \"#utility.yul\":4349:4368   */\n      swap1\n      pop\n        /* \"#utility.yul\":4008:4374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4380:4746   */\n    tag_273:\n        /* \"#utility.yul\":4522:4525   */\n      0x00\n        /* \"#utility.yul\":4543:4610   */\n      tag_275\n        /* \"#utility.yul\":4607:4609   */\n      0x20\n        /* \"#utility.yul\":4602:4605   */\n      dup4\n        /* \"#utility.yul\":4543:4610   */\n      tag_260\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4536:4610   */\n      swap2\n      pop\n        /* \"#utility.yul\":4619:4712   */\n      tag_276\n        /* \"#utility.yul\":4708:4711   */\n      dup3\n        /* \"#utility.yul\":4619:4712   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4737:4739   */\n      0x20\n        /* \"#utility.yul\":4732:4735   */\n      dup3\n        /* \"#utility.yul\":4728:4740   */\n      add\n        /* \"#utility.yul\":4721:4740   */\n      swap1\n      pop\n        /* \"#utility.yul\":4380:4746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4870   */\n    tag_278:\n        /* \"#utility.yul\":4839:4863   */\n      tag_280\n        /* \"#utility.yul\":4857:4862   */\n      dup2\n        /* \"#utility.yul\":4839:4863   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4834:4837   */\n      dup3\n        /* \"#utility.yul\":4827:4864   */\n      mstore\n        /* \"#utility.yul\":4752:4870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4876:5098   */\n    tag_75:\n        /* \"#utility.yul\":4969:4973   */\n      0x00\n        /* \"#utility.yul\":5007:5009   */\n      0x20\n        /* \"#utility.yul\":4996:5005   */\n      dup3\n        /* \"#utility.yul\":4992:5010   */\n      add\n        /* \"#utility.yul\":4984:5010   */\n      swap1\n      pop\n        /* \"#utility.yul\":5020:5091   */\n      tag_283\n        /* \"#utility.yul\":5088:5089   */\n      0x00\n        /* \"#utility.yul\":5077:5086   */\n      dup4\n        /* \"#utility.yul\":5073:5090   */\n      add\n        /* \"#utility.yul\":5064:5070   */\n      dup5\n        /* \"#utility.yul\":5020:5091   */\n      tag_241\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4876:5098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5104:5546   */\n    tag_190:\n        /* \"#utility.yul\":5253:5257   */\n      0x00\n        /* \"#utility.yul\":5291:5293   */\n      0x60\n        /* \"#utility.yul\":5280:5289   */\n      dup3\n        /* \"#utility.yul\":5276:5294   */\n      add\n        /* \"#utility.yul\":5268:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":5304:5375   */\n      tag_285\n        /* \"#utility.yul\":5372:5373   */\n      0x00\n        /* \"#utility.yul\":5361:5370   */\n      dup4\n        /* \"#utility.yul\":5357:5374   */\n      add\n        /* \"#utility.yul\":5348:5354   */\n      dup7\n        /* \"#utility.yul\":5304:5375   */\n      tag_241\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5385:5457   */\n      tag_286\n        /* \"#utility.yul\":5453:5455   */\n      0x20\n        /* \"#utility.yul\":5442:5451   */\n      dup4\n        /* \"#utility.yul\":5438:5456   */\n      add\n        /* \"#utility.yul\":5429:5435   */\n      dup6\n        /* \"#utility.yul\":5385:5457   */\n      tag_241\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5467:5539   */\n      tag_287\n        /* \"#utility.yul\":5535:5537   */\n      0x40\n        /* \"#utility.yul\":5524:5533   */\n      dup4\n        /* \"#utility.yul\":5520:5538   */\n      add\n        /* \"#utility.yul\":5511:5517   */\n      dup5\n        /* \"#utility.yul\":5467:5539   */\n      tag_278\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5104:5546   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5552:5884   */\n    tag_127:\n        /* \"#utility.yul\":5673:5677   */\n      0x00\n        /* \"#utility.yul\":5711:5713   */\n      0x40\n        /* \"#utility.yul\":5700:5709   */\n      dup3\n        /* \"#utility.yul\":5696:5714   */\n      add\n        /* \"#utility.yul\":5688:5714   */\n      swap1\n      pop\n        /* \"#utility.yul\":5724:5795   */\n      tag_289\n        /* \"#utility.yul\":5792:5793   */\n      0x00\n        /* \"#utility.yul\":5781:5790   */\n      dup4\n        /* \"#utility.yul\":5777:5794   */\n      add\n        /* \"#utility.yul\":5768:5774   */\n      dup6\n        /* \"#utility.yul\":5724:5795   */\n      tag_241\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5805:5877   */\n      tag_290\n        /* \"#utility.yul\":5873:5875   */\n      0x20\n        /* \"#utility.yul\":5862:5871   */\n      dup4\n        /* \"#utility.yul\":5858:5876   */\n      add\n        /* \"#utility.yul\":5849:5855   */\n      dup5\n        /* \"#utility.yul\":5805:5877   */\n      tag_278\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5552:5884   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5890:6142   */\n    tag_58:\n        /* \"#utility.yul\":5998:6002   */\n      0x00\n        /* \"#utility.yul\":6036:6038   */\n      0x20\n        /* \"#utility.yul\":6025:6034   */\n      dup3\n        /* \"#utility.yul\":6021:6039   */\n      add\n        /* \"#utility.yul\":6013:6039   */\n      swap1\n      pop\n        /* \"#utility.yul\":6049:6135   */\n      tag_292\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6121:6130   */\n      dup4\n        /* \"#utility.yul\":6117:6134   */\n      add\n        /* \"#utility.yul\":6108:6114   */\n      dup5\n        /* \"#utility.yul\":6049:6135   */\n      tag_245\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5890:6142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6148:6366   */\n    tag_63:\n        /* \"#utility.yul\":6239:6243   */\n      0x00\n        /* \"#utility.yul\":6277:6279   */\n      0x20\n        /* \"#utility.yul\":6266:6275   */\n      dup3\n        /* \"#utility.yul\":6262:6280   */\n      add\n        /* \"#utility.yul\":6254:6280   */\n      swap1\n      pop\n        /* \"#utility.yul\":6290:6359   */\n      tag_294\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6345:6354   */\n      dup4\n        /* \"#utility.yul\":6341:6358   */\n      add\n        /* \"#utility.yul\":6332:6338   */\n      dup5\n        /* \"#utility.yul\":6290:6359   */\n      tag_249\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":6148:6366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6590   */\n    tag_33:\n        /* \"#utility.yul\":6463:6467   */\n      0x00\n        /* \"#utility.yul\":6501:6503   */\n      0x20\n        /* \"#utility.yul\":6490:6499   */\n      dup3\n        /* \"#utility.yul\":6486:6504   */\n      add\n        /* \"#utility.yul\":6478:6504   */\n      swap1\n      pop\n        /* \"#utility.yul\":6514:6583   */\n      tag_296\n        /* \"#utility.yul\":6580:6581   */\n      0x00\n        /* \"#utility.yul\":6569:6578   */\n      dup4\n        /* \"#utility.yul\":6565:6582   */\n      add\n        /* \"#utility.yul\":6556:6562   */\n      dup5\n        /* \"#utility.yul\":6514:6583   */\n      tag_253\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6372:6590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:7015   */\n    tag_197:\n        /* \"#utility.yul\":6762:6766   */\n      0x00\n        /* \"#utility.yul\":6800:6802   */\n      0x20\n        /* \"#utility.yul\":6789:6798   */\n      dup3\n        /* \"#utility.yul\":6785:6803   */\n      add\n        /* \"#utility.yul\":6777:6803   */\n      swap1\n      pop\n        /* \"#utility.yul\":6849:6858   */\n      dup2\n        /* \"#utility.yul\":6843:6847   */\n      dup2\n        /* \"#utility.yul\":6839:6859   */\n      sub\n        /* \"#utility.yul\":6835:6836   */\n      0x00\n        /* \"#utility.yul\":6824:6833   */\n      dup4\n        /* \"#utility.yul\":6820:6837   */\n      add\n        /* \"#utility.yul\":6813:6860   */\n      mstore\n        /* \"#utility.yul\":6877:7008   */\n      tag_298\n        /* \"#utility.yul\":7003:7007   */\n      dup2\n        /* \"#utility.yul\":6877:7008   */\n      tag_257\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6869:7008   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:7015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7021:7440   */\n    tag_185:\n        /* \"#utility.yul\":7187:7191   */\n      0x00\n        /* \"#utility.yul\":7225:7227   */\n      0x20\n        /* \"#utility.yul\":7214:7223   */\n      dup3\n        /* \"#utility.yul\":7210:7228   */\n      add\n        /* \"#utility.yul\":7202:7228   */\n      swap1\n      pop\n        /* \"#utility.yul\":7274:7283   */\n      dup2\n        /* \"#utility.yul\":7268:7272   */\n      dup2\n        /* \"#utility.yul\":7264:7284   */\n      sub\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7249:7258   */\n      dup4\n        /* \"#utility.yul\":7245:7262   */\n      add\n        /* \"#utility.yul\":7238:7285   */\n      mstore\n        /* \"#utility.yul\":7302:7433   */\n      tag_300\n        /* \"#utility.yul\":7428:7432   */\n      dup2\n        /* \"#utility.yul\":7302:7433   */\n      tag_263\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7294:7433   */\n      swap1\n      pop\n        /* \"#utility.yul\":7021:7440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7446:7865   */\n    tag_148:\n        /* \"#utility.yul\":7612:7616   */\n      0x00\n        /* \"#utility.yul\":7650:7652   */\n      0x20\n        /* \"#utility.yul\":7639:7648   */\n      dup3\n        /* \"#utility.yul\":7635:7653   */\n      add\n        /* \"#utility.yul\":7627:7653   */\n      swap1\n      pop\n        /* \"#utility.yul\":7699:7708   */\n      dup2\n        /* \"#utility.yul\":7693:7697   */\n      dup2\n        /* \"#utility.yul\":7689:7709   */\n      sub\n        /* \"#utility.yul\":7685:7686   */\n      0x00\n        /* \"#utility.yul\":7674:7683   */\n      dup4\n        /* \"#utility.yul\":7670:7687   */\n      add\n        /* \"#utility.yul\":7663:7710   */\n      mstore\n        /* \"#utility.yul\":7727:7858   */\n      tag_302\n        /* \"#utility.yul\":7853:7857   */\n      dup2\n        /* \"#utility.yul\":7727:7858   */\n      tag_268\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7719:7858   */\n      swap1\n      pop\n        /* \"#utility.yul\":7446:7865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7871:8290   */\n    tag_181:\n        /* \"#utility.yul\":8037:8041   */\n      0x00\n        /* \"#utility.yul\":8075:8077   */\n      0x20\n        /* \"#utility.yul\":8064:8073   */\n      dup3\n        /* \"#utility.yul\":8060:8078   */\n      add\n        /* \"#utility.yul\":8052:8078   */\n      swap1\n      pop\n        /* \"#utility.yul\":8124:8133   */\n      dup2\n        /* \"#utility.yul\":8118:8122   */\n      dup2\n        /* \"#utility.yul\":8114:8134   */\n      sub\n        /* \"#utility.yul\":8110:8111   */\n      0x00\n        /* \"#utility.yul\":8099:8108   */\n      dup4\n        /* \"#utility.yul\":8095:8112   */\n      add\n        /* \"#utility.yul\":8088:8135   */\n      mstore\n        /* \"#utility.yul\":8152:8283   */\n      tag_304\n        /* \"#utility.yul\":8278:8282   */\n      dup2\n        /* \"#utility.yul\":8152:8283   */\n      tag_273\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":8144:8283   */\n      swap1\n      pop\n        /* \"#utility.yul\":7871:8290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8296:8518   */\n    tag_26:\n        /* \"#utility.yul\":8389:8393   */\n      0x00\n        /* \"#utility.yul\":8427:8429   */\n      0x20\n        /* \"#utility.yul\":8416:8425   */\n      dup3\n        /* \"#utility.yul\":8412:8430   */\n      add\n        /* \"#utility.yul\":8404:8430   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8511   */\n      tag_306\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8497:8506   */\n      dup4\n        /* \"#utility.yul\":8493:8510   */\n      add\n        /* \"#utility.yul\":8484:8490   */\n      dup5\n        /* \"#utility.yul\":8440:8511   */\n      tag_278\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":8296:8518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8605:8774   */\n    tag_260:\n        /* \"#utility.yul\":8689:8700   */\n      0x00\n        /* \"#utility.yul\":8723:8729   */\n      dup3\n        /* \"#utility.yul\":8718:8721   */\n      dup3\n        /* \"#utility.yul\":8711:8730   */\n      mstore\n        /* \"#utility.yul\":8763:8767   */\n      0x20\n        /* \"#utility.yul\":8758:8761   */\n      dup3\n        /* \"#utility.yul\":8754:8768   */\n      add\n        /* \"#utility.yul\":8739:8768   */\n      swap1\n      pop\n        /* \"#utility.yul\":8605:8774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8780:9085   */\n    tag_133:\n        /* \"#utility.yul\":8820:8823   */\n      0x00\n        /* \"#utility.yul\":8839:8859   */\n      tag_311\n        /* \"#utility.yul\":8857:8858   */\n      dup3\n        /* \"#utility.yul\":8839:8859   */\n      tag_281\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8834:8859   */\n      swap2\n      pop\n        /* \"#utility.yul\":8873:8893   */\n      tag_312\n        /* \"#utility.yul\":8891:8892   */\n      dup4\n        /* \"#utility.yul\":8873:8893   */\n      tag_281\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":8868:8893   */\n      swap3\n      pop\n        /* \"#utility.yul\":9027:9028   */\n      dup3\n        /* \"#utility.yul\":8959:9025   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8955:9029   */\n      sub\n        /* \"#utility.yul\":8952:8953   */\n      dup3\n        /* \"#utility.yul\":8949:9030   */\n      gt\n        /* \"#utility.yul\":8946:9053   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":9033:9051   */\n      tag_314\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8946:9053   */\n    tag_313:\n        /* \"#utility.yul\":9077:9078   */\n      dup3\n        /* \"#utility.yul\":9074:9075   */\n      dup3\n        /* \"#utility.yul\":9070:9079   */\n      add\n        /* \"#utility.yul\":9063:9079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8780:9085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9091:9476   */\n    tag_187:\n        /* \"#utility.yul\":9130:9131   */\n      0x00\n        /* \"#utility.yul\":9147:9166   */\n      tag_317\n        /* \"#utility.yul\":9164:9165   */\n      dup3\n        /* \"#utility.yul\":9147:9166   */\n      tag_256\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9142:9166   */\n      swap2\n      pop\n        /* \"#utility.yul\":9180:9199   */\n      tag_318\n        /* \"#utility.yul\":9197:9198   */\n      dup4\n        /* \"#utility.yul\":9180:9199   */\n      tag_256\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9175:9199   */\n      swap3\n      pop\n        /* \"#utility.yul\":9218:9219   */\n      dup3\n        /* \"#utility.yul\":9208:9243   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":9223:9241   */\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9208:9243   */\n    tag_319:\n        /* \"#utility.yul\":9409:9410   */\n      0x01\n        /* \"#utility.yul\":9406:9407   */\n      0x00\n        /* \"#utility.yul\":9402:9411   */\n      sub\n        /* \"#utility.yul\":9399:9400   */\n      dup4\n        /* \"#utility.yul\":9396:9412   */\n      eq\n        /* \"#utility.yul\":9315:9381   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9312:9313   */\n      dup4\n        /* \"#utility.yul\":9309:9382   */\n      eq\n        /* \"#utility.yul\":9292:9422   */\n      and\n        /* \"#utility.yul\":9289:9445   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":9425:9443   */\n      tag_323\n      tag_315\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9289:9445   */\n    tag_322:\n        /* \"#utility.yul\":9468:9469   */\n      dup3\n        /* \"#utility.yul\":9465:9466   */\n      dup3\n        /* \"#utility.yul\":9460:9470   */\n      sdiv\n        /* \"#utility.yul\":9455:9470   */\n      swap1\n      pop\n        /* \"#utility.yul\":9091:9476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9482:9667   */\n    tag_109:\n        /* \"#utility.yul\":9522:9523   */\n      0x00\n        /* \"#utility.yul\":9539:9559   */\n      tag_325\n        /* \"#utility.yul\":9557:9558   */\n      dup3\n        /* \"#utility.yul\":9539:9559   */\n      tag_281\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":9534:9559   */\n      swap2\n      pop\n        /* \"#utility.yul\":9573:9593   */\n      tag_326\n        /* \"#utility.yul\":9591:9592   */\n      dup4\n        /* \"#utility.yul\":9573:9593   */\n      tag_281\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9568:9593   */\n      swap3\n      pop\n        /* \"#utility.yul\":9612:9613   */\n      dup3\n        /* \"#utility.yul\":9602:9637   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":9617:9635   */\n      tag_328\n      tag_321\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":9602:9637   */\n    tag_327:\n        /* \"#utility.yul\":9659:9660   */\n      dup3\n        /* \"#utility.yul\":9656:9657   */\n      dup3\n        /* \"#utility.yul\":9652:9661   */\n      div\n        /* \"#utility.yul\":9647:9661   */\n      swap1\n      pop\n        /* \"#utility.yul\":9482:9667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9673:10664   */\n    tag_115:\n        /* \"#utility.yul\":9712:9719   */\n      0x00\n        /* \"#utility.yul\":9735:9754   */\n      tag_330\n        /* \"#utility.yul\":9752:9753   */\n      dup3\n        /* \"#utility.yul\":9735:9754   */\n      tag_256\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9730:9754   */\n      swap2\n      pop\n        /* \"#utility.yul\":9768:9787   */\n      tag_331\n        /* \"#utility.yul\":9785:9786   */\n      dup4\n        /* \"#utility.yul\":9768:9787   */\n      tag_256\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":9763:9787   */\n      swap3\n      pop\n        /* \"#utility.yul\":9969:9970   */\n      dup3\n        /* \"#utility.yul\":9901:9967   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9897:9971   */\n      div\n        /* \"#utility.yul\":9894:9895   */\n      dup3\n        /* \"#utility.yul\":9891:9972   */\n      gt\n        /* \"#utility.yul\":9886:9887   */\n      0x00\n        /* \"#utility.yul\":9883:9884   */\n      dup5\n        /* \"#utility.yul\":9879:9888   */\n      sgt\n        /* \"#utility.yul\":9875:9876   */\n      0x00\n        /* \"#utility.yul\":9872:9873   */\n      dup5\n        /* \"#utility.yul\":9868:9877   */\n      sgt\n        /* \"#utility.yul\":9864:9889   */\n      and\n        /* \"#utility.yul\":9860:9973   */\n      and\n        /* \"#utility.yul\":9857:9996   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":9976:9994   */\n      tag_333\n      tag_315\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9857:9996   */\n    tag_332:\n        /* \"#utility.yul\":10180:10181   */\n      dup2\n        /* \"#utility.yul\":10112:10178   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10107:10182   */\n      sdiv\n        /* \"#utility.yul\":10104:10105   */\n      dup4\n        /* \"#utility.yul\":10100:10183   */\n      slt\n        /* \"#utility.yul\":10095:10096   */\n      0x00\n        /* \"#utility.yul\":10092:10093   */\n      dup5\n        /* \"#utility.yul\":10088:10097   */\n      slt\n        /* \"#utility.yul\":10084:10085   */\n      0x00\n        /* \"#utility.yul\":10081:10082   */\n      dup5\n        /* \"#utility.yul\":10077:10086   */\n      sgt\n        /* \"#utility.yul\":10073:10098   */\n      and\n        /* \"#utility.yul\":10069:10184   */\n      and\n        /* \"#utility.yul\":10066:10207   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":10187:10205   */\n      tag_335\n      tag_315\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10066:10207   */\n    tag_334:\n        /* \"#utility.yul\":10391:10392   */\n      dup3\n        /* \"#utility.yul\":10323:10389   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10318:10393   */\n      sdiv\n        /* \"#utility.yul\":10315:10316   */\n      dup3\n        /* \"#utility.yul\":10311:10394   */\n      slt\n        /* \"#utility.yul\":10306:10307   */\n      0x00\n        /* \"#utility.yul\":10303:10304   */\n      dup5\n        /* \"#utility.yul\":10299:10308   */\n      sgt\n        /* \"#utility.yul\":10295:10296   */\n      0x00\n        /* \"#utility.yul\":10292:10293   */\n      dup5\n        /* \"#utility.yul\":10288:10297   */\n      slt\n        /* \"#utility.yul\":10284:10309   */\n      and\n        /* \"#utility.yul\":10280:10395   */\n      and\n        /* \"#utility.yul\":10277:10418   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":10398:10416   */\n      tag_337\n      tag_315\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10277:10418   */\n    tag_336:\n        /* \"#utility.yul\":10601:10602   */\n      dup3\n        /* \"#utility.yul\":10533:10599   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10528:10603   */\n      sdiv\n        /* \"#utility.yul\":10525:10526   */\n      dup3\n        /* \"#utility.yul\":10521:10604   */\n      slt\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10513:10514   */\n      dup5\n        /* \"#utility.yul\":10509:10518   */\n      slt\n        /* \"#utility.yul\":10505:10506   */\n      0x00\n        /* \"#utility.yul\":10502:10503   */\n      dup5\n        /* \"#utility.yul\":10498:10507   */\n      slt\n        /* \"#utility.yul\":10494:10519   */\n      and\n        /* \"#utility.yul\":10490:10605   */\n      and\n        /* \"#utility.yul\":10487:10628   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":10608:10626   */\n      tag_339\n      tag_315\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10487:10628   */\n    tag_338:\n        /* \"#utility.yul\":10656:10657   */\n      dup3\n        /* \"#utility.yul\":10653:10654   */\n      dup3\n        /* \"#utility.yul\":10649:10658   */\n      mul\n        /* \"#utility.yul\":10638:10658   */\n      swap1\n      pop\n        /* \"#utility.yul\":9673:10664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10670:11018   */\n    tag_107:\n        /* \"#utility.yul\":10710:10717   */\n      0x00\n        /* \"#utility.yul\":10733:10753   */\n      tag_341\n        /* \"#utility.yul\":10751:10752   */\n      dup3\n        /* \"#utility.yul\":10733:10753   */\n      tag_281\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":10728:10753   */\n      swap2\n      pop\n        /* \"#utility.yul\":10767:10787   */\n      tag_342\n        /* \"#utility.yul\":10785:10786   */\n      dup4\n        /* \"#utility.yul\":10767:10787   */\n      tag_281\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10762:10787   */\n      swap3\n      pop\n        /* \"#utility.yul\":10955:10956   */\n      dup2\n        /* \"#utility.yul\":10887:10953   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10883:10957   */\n      div\n        /* \"#utility.yul\":10880:10881   */\n      dup4\n        /* \"#utility.yul\":10877:10958   */\n      gt\n        /* \"#utility.yul\":10872:10873   */\n      dup3\n        /* \"#utility.yul\":10865:10874   */\n      iszero\n        /* \"#utility.yul\":10858:10875   */\n      iszero\n        /* \"#utility.yul\":10854:10959   */\n      and\n        /* \"#utility.yul\":10851:10982   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":10962:10980   */\n      tag_344\n      tag_315\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10851:10982   */\n    tag_343:\n        /* \"#utility.yul\":11010:11011   */\n      dup3\n        /* \"#utility.yul\":11007:11008   */\n      dup3\n        /* \"#utility.yul\":11003:11012   */\n      mul\n        /* \"#utility.yul\":10992:11012   */\n      swap1\n      pop\n        /* \"#utility.yul\":10670:11018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11024:11215   */\n    tag_100:\n        /* \"#utility.yul\":11064:11068   */\n      0x00\n        /* \"#utility.yul\":11084:11104   */\n      tag_346\n        /* \"#utility.yul\":11102:11103   */\n      dup3\n        /* \"#utility.yul\":11084:11104   */\n      tag_281\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":11079:11104   */\n      swap2\n      pop\n        /* \"#utility.yul\":11118:11138   */\n      tag_347\n        /* \"#utility.yul\":11136:11137   */\n      dup4\n        /* \"#utility.yul\":11118:11138   */\n      tag_281\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11113:11138   */\n      swap3\n      pop\n        /* \"#utility.yul\":11157:11158   */\n      dup3\n        /* \"#utility.yul\":11154:11155   */\n      dup3\n        /* \"#utility.yul\":11151:11159   */\n      lt\n        /* \"#utility.yul\":11148:11182   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":11162:11180   */\n      tag_349\n      tag_315\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":11148:11182   */\n    tag_348:\n        /* \"#utility.yul\":11207:11208   */\n      dup3\n        /* \"#utility.yul\":11204:11205   */\n      dup3\n        /* \"#utility.yul\":11200:11209   */\n      sub\n        /* \"#utility.yul\":11192:11209   */\n      swap1\n      pop\n        /* \"#utility.yul\":11024:11215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11221:11317   */\n    tag_244:\n        /* \"#utility.yul\":11258:11265   */\n      0x00\n        /* \"#utility.yul\":11287:11311   */\n      tag_351\n        /* \"#utility.yul\":11305:11310   */\n      dup3\n        /* \"#utility.yul\":11287:11311   */\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":11276:11311   */\n      swap1\n      pop\n        /* \"#utility.yul\":11221:11317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11323:11413   */\n    tag_353:\n        /* \"#utility.yul\":11357:11364   */\n      0x00\n        /* \"#utility.yul\":11400:11405   */\n      dup2\n        /* \"#utility.yul\":11393:11406   */\n      iszero\n        /* \"#utility.yul\":11386:11407   */\n      iszero\n        /* \"#utility.yul\":11375:11407   */\n      swap1\n      pop\n        /* \"#utility.yul\":11323:11413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11419:11511   */\n    tag_252:\n        /* \"#utility.yul\":11455:11462   */\n      0x00\n        /* \"#utility.yul\":11499:11504   */\n      dup2\n        /* \"#utility.yul\":11495:11497   */\n      0x0f\n        /* \"#utility.yul\":11484:11505   */\n      signextend\n        /* \"#utility.yul\":11473:11505   */\n      swap1\n      pop\n        /* \"#utility.yul\":11419:11511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11517:11593   */\n    tag_256:\n        /* \"#utility.yul\":11553:11560   */\n      0x00\n        /* \"#utility.yul\":11582:11587   */\n      dup2\n        /* \"#utility.yul\":11571:11587   */\n      swap1\n      pop\n        /* \"#utility.yul\":11517:11593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11599:11725   */\n    tag_352:\n        /* \"#utility.yul\":11636:11643   */\n      0x00\n        /* \"#utility.yul\":11676:11718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11669:11674   */\n      dup3\n        /* \"#utility.yul\":11665:11719   */\n      and\n        /* \"#utility.yul\":11654:11719   */\n      swap1\n      pop\n        /* \"#utility.yul\":11599:11725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11731:11808   */\n    tag_281:\n        /* \"#utility.yul\":11768:11775   */\n      0x00\n        /* \"#utility.yul\":11797:11802   */\n      dup2\n        /* \"#utility.yul\":11786:11802   */\n      swap1\n      pop\n        /* \"#utility.yul\":11731:11808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11814:11955   */\n    tag_248:\n        /* \"#utility.yul\":11879:11888   */\n      0x00\n        /* \"#utility.yul\":11912:11949   */\n      tag_360\n        /* \"#utility.yul\":11943:11948   */\n      dup3\n        /* \"#utility.yul\":11912:11949   */\n      tag_361\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11899:11949   */\n      swap1\n      pop\n        /* \"#utility.yul\":11814:11955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11961:12087   */\n    tag_361:\n        /* \"#utility.yul\":12011:12020   */\n      0x00\n        /* \"#utility.yul\":12044:12081   */\n      tag_363\n        /* \"#utility.yul\":12075:12080   */\n      dup3\n        /* \"#utility.yul\":12044:12081   */\n      tag_364\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":12031:12081   */\n      swap1\n      pop\n        /* \"#utility.yul\":11961:12087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12093:12206   */\n    tag_364:\n        /* \"#utility.yul\":12143:12152   */\n      0x00\n        /* \"#utility.yul\":12176:12200   */\n      tag_366\n        /* \"#utility.yul\":12194:12199   */\n      dup3\n        /* \"#utility.yul\":12176:12200   */\n      tag_352\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":12163:12200   */\n      swap1\n      pop\n        /* \"#utility.yul\":12093:12206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12212:12443   */\n    tag_118:\n        /* \"#utility.yul\":12250:12253   */\n      0x00\n        /* \"#utility.yul\":12273:12296   */\n      tag_368\n        /* \"#utility.yul\":12290:12295   */\n      dup3\n        /* \"#utility.yul\":12273:12296   */\n      tag_256\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12264:12296   */\n      swap2\n      pop\n        /* \"#utility.yul\":12318:12384   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12311:12316   */\n      dup3\n        /* \"#utility.yul\":12308:12385   */\n      eq\n        /* \"#utility.yul\":12305:12408   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":12388:12406   */\n      tag_370\n      tag_315\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":12305:12408   */\n    tag_369:\n        /* \"#utility.yul\":12435:12436   */\n      0x01\n        /* \"#utility.yul\":12428:12433   */\n      dup3\n        /* \"#utility.yul\":12424:12437   */\n      sub\n        /* \"#utility.yul\":12417:12437   */\n      swap1\n      pop\n        /* \"#utility.yul\":12212:12443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12449:12629   */\n    tag_315:\n        /* \"#utility.yul\":12497:12574   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12494:12495   */\n      0x00\n        /* \"#utility.yul\":12487:12575   */\n      mstore\n        /* \"#utility.yul\":12594:12598   */\n      0x11\n        /* \"#utility.yul\":12591:12592   */\n      0x04\n        /* \"#utility.yul\":12584:12599   */\n      mstore\n        /* \"#utility.yul\":12618:12622   */\n      0x24\n        /* \"#utility.yul\":12615:12616   */\n      0x00\n        /* \"#utility.yul\":12608:12623   */\n      revert\n        /* \"#utility.yul\":12635:12815   */\n    tag_321:\n        /* \"#utility.yul\":12683:12760   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12680:12681   */\n      0x00\n        /* \"#utility.yul\":12673:12761   */\n      mstore\n        /* \"#utility.yul\":12780:12784   */\n      0x12\n        /* \"#utility.yul\":12777:12778   */\n      0x04\n        /* \"#utility.yul\":12770:12785   */\n      mstore\n        /* \"#utility.yul\":12804:12808   */\n      0x24\n        /* \"#utility.yul\":12801:12802   */\n      0x00\n        /* \"#utility.yul\":12794:12809   */\n      revert\n        /* \"#utility.yul\":12944:13061   */\n    tag_221:\n        /* \"#utility.yul\":13053:13054   */\n      0x00\n        /* \"#utility.yul\":13050:13051   */\n      dup1\n        /* \"#utility.yul\":13043:13055   */\n      revert\n        /* \"#utility.yul\":13067:13238   */\n    tag_262:\n        /* \"#utility.yul\":13207:13230   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":13203:13204   */\n      0x00\n        /* \"#utility.yul\":13195:13201   */\n      dup3\n        /* \"#utility.yul\":13191:13205   */\n      add\n        /* \"#utility.yul\":13184:13231   */\n      mstore\n        /* \"#utility.yul\":13067:13238   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13244:13464   */\n    tag_267:\n        /* \"#utility.yul\":13384:13418   */\n      0x5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f\n        /* \"#utility.yul\":13380:13381   */\n      0x00\n        /* \"#utility.yul\":13372:13378   */\n      dup3\n        /* \"#utility.yul\":13368:13382   */\n      add\n        /* \"#utility.yul\":13361:13419   */\n      mstore\n        /* \"#utility.yul\":13453:13456   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13448:13450   */\n      0x20\n        /* \"#utility.yul\":13440:13446   */\n      dup3\n        /* \"#utility.yul\":13436:13451   */\n      add\n        /* \"#utility.yul\":13429:13457   */\n      mstore\n        /* \"#utility.yul\":13244:13464   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13470:13646   */\n    tag_272:\n        /* \"#utility.yul\":13610:13638   */\n      0x596f7520646f6e742068617665207468617420616d6f756e7421000000000000\n        /* \"#utility.yul\":13606:13607   */\n      0x00\n        /* \"#utility.yul\":13598:13604   */\n      dup3\n        /* \"#utility.yul\":13594:13608   */\n      add\n        /* \"#utility.yul\":13587:13639   */\n      mstore\n        /* \"#utility.yul\":13470:13646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13652:13834   */\n    tag_277:\n        /* \"#utility.yul\":13792:13826   */\n      0x5369676e6564536166654d6174683a206469766973696f6e206279207a65726f\n        /* \"#utility.yul\":13788:13789   */\n      0x00\n        /* \"#utility.yul\":13780:13786   */\n      dup3\n        /* \"#utility.yul\":13776:13790   */\n      add\n        /* \"#utility.yul\":13769:13827   */\n      mstore\n        /* \"#utility.yul\":13652:13834   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13840:13962   */\n    tag_202:\n        /* \"#utility.yul\":13913:13937   */\n      tag_381\n        /* \"#utility.yul\":13931:13936   */\n      dup2\n        /* \"#utility.yul\":13913:13937   */\n      tag_244\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":13906:13911   */\n      dup2\n        /* \"#utility.yul\":13903:13938   */\n      eq\n        /* \"#utility.yul\":13893:13956   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":13952:13953   */\n      0x00\n        /* \"#utility.yul\":13949:13950   */\n      dup1\n        /* \"#utility.yul\":13942:13954   */\n      revert\n        /* \"#utility.yul\":13893:13956   */\n    tag_382:\n        /* \"#utility.yul\":13840:13962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13968:14084   */\n    tag_206:\n        /* \"#utility.yul\":14038:14059   */\n      tag_384\n        /* \"#utility.yul\":14053:14058   */\n      dup2\n        /* \"#utility.yul\":14038:14059   */\n      tag_353\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":14031:14036   */\n      dup2\n        /* \"#utility.yul\":14028:14060   */\n      eq\n        /* \"#utility.yul\":14018:14078   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":14074:14075   */\n      0x00\n        /* \"#utility.yul\":14071:14072   */\n      dup1\n        /* \"#utility.yul\":14064:14076   */\n      revert\n        /* \"#utility.yul\":14018:14078   */\n    tag_385:\n        /* \"#utility.yul\":13968:14084   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14090:14210   */\n    tag_210:\n        /* \"#utility.yul\":14162:14185   */\n      tag_387\n        /* \"#utility.yul\":14179:14184   */\n      dup2\n        /* \"#utility.yul\":14162:14185   */\n      tag_256\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":14155:14160   */\n      dup2\n        /* \"#utility.yul\":14152:14186   */\n      eq\n        /* \"#utility.yul\":14142:14204   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":14200:14201   */\n      0x00\n        /* \"#utility.yul\":14197:14198   */\n      dup1\n        /* \"#utility.yul\":14190:14202   */\n      revert\n        /* \"#utility.yul\":14142:14204   */\n    tag_388:\n        /* \"#utility.yul\":14090:14210   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14216:14338   */\n    tag_214:\n        /* \"#utility.yul\":14289:14313   */\n      tag_390\n        /* \"#utility.yul\":14307:14312   */\n      dup2\n        /* \"#utility.yul\":14289:14313   */\n      tag_281\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":14282:14287   */\n      dup2\n        /* \"#utility.yul\":14279:14314   */\n      eq\n        /* \"#utility.yul\":14269:14332   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":14328:14329   */\n      0x00\n        /* \"#utility.yul\":14325:14326   */\n      dup1\n        /* \"#utility.yul\":14318:14330   */\n      revert\n        /* \"#utility.yul\":14269:14332   */\n    tag_391:\n        /* \"#utility.yul\":14216:14338   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122001e7fdadd516f9528184746996e8277c1afaa51d29312c61eacdfdb42c79936864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3177": {
									"entryPoint": null,
									"id": 3177,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2355:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:3"
															},
															"nodeType": "YulIf",
															"src": "260:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:3",
														"type": ""
													}
												],
												"src": "156:507:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:3",
														"type": ""
													}
												],
												"src": "669:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "792:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "802:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "825:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "807:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "802:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "836:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "859:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "841:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "841:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "836:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "883:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "885:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "885:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "885:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "880:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:9:3"
															},
															"nodeType": "YulIf",
															"src": "870:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "915:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "924:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "915:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "781:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "784:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "790:1:3",
														"type": ""
													}
												],
												"src": "750:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "989:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "999:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1022:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1004:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "999:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1033:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1056:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1038:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1038:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1033:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1233:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1143:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1136:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1136:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1129:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1151:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1158:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1226:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1154:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1154:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1148:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1148:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1125:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:105:3"
															},
															"nodeType": "YulIf",
															"src": "1122:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1263:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1278:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1281:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1263:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "972:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "975:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "981:7:3",
														"type": ""
													}
												],
												"src": "941:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1350:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1379:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1361:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1361:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1350:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1322:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1332:7:3",
														"type": ""
													}
												],
												"src": "1295:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1442:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1452:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1467:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1474:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1463:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1452:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1424:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1434:7:3",
														"type": ""
													}
												],
												"src": "1397:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1574:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1584:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1595:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1584:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1556:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1566:7:3",
														"type": ""
													}
												],
												"src": "1529:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1640:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1657:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1650:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1754:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1757:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1747:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1747:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1778:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1771:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1771:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1771:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1612:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1826:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1843:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1846:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1940:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1933:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1967:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1957:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1957:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1957:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1798:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1984:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2206:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2107:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2273:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2339:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2342:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2332:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2296:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2321:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2303:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2303:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2293:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2293:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:43:3"
															},
															"nodeType": "YulIf",
															"src": "2283:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2266:5:3",
														"type": ""
													}
												],
												"src": "2230:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0x69E10DE76676D0800000 PUSH1 0x8 SSTORE PUSH3 0x186A0 PUSH1 0x9 SSTORE PUSH3 0x15F90 PUSH1 0xA SSTORE PUSH3 0x927C0 PUSH1 0xB SSTORE PUSH1 0x9 PUSH1 0xC SSTORE PUSH1 0xA PUSH1 0xD SSTORE PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH1 0xF PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1AD3 CODESIZE SUB DUP1 PUSH3 0x1AD3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xB9 SWAP2 SWAP1 PUSH3 0x25E JUMP JUMPDEST DUP1 PUSH1 0x12 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x10 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B PUSH1 0x11 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH3 0x200 SWAP2 SWAP1 PUSH3 0x2A5 JUMP JUMPDEST PUSH3 0x20C SWAP2 SWAP1 PUSH3 0x2DD JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH3 0x22D SWAP2 SWAP1 PUSH3 0x2A5 JUMP JUMPDEST PUSH3 0x239 SWAP2 SWAP1 PUSH3 0x2DD JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x258 DUP2 PUSH3 0x3DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x278 JUMPI PUSH3 0x277 PUSH3 0x3DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x288 DUP6 DUP3 DUP7 ADD PUSH3 0x247 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x29B DUP6 DUP3 DUP7 ADD PUSH3 0x247 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2B2 DUP3 PUSH3 0x372 JUMP JUMPDEST SWAP2 POP PUSH3 0x2BF DUP4 PUSH3 0x372 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x2D2 JUMPI PUSH3 0x2D1 PUSH3 0x3AB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2EA DUP3 PUSH3 0x372 JUMP JUMPDEST SWAP2 POP PUSH3 0x2F7 DUP4 PUSH3 0x372 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x333 JUMPI PUSH3 0x332 PUSH3 0x37C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34B DUP3 PUSH3 0x352 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3EA DUP2 PUSH3 0x33E JUMP JUMPDEST DUP2 EQ PUSH3 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x16CA DUP1 PUSH3 0x409 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F10E285 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xEE467678 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEE467678 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xEE546A51 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xEE620868 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xEEE05F5E EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xFBBB4589 EQ PUSH2 0x3B7 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6F10E285 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xCBFF4617 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xDAA3A4A4 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDD9B1D97 EQ PUSH2 0x2CE JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x35453307 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x35453307 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x43D32E9C EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x65819F7E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x6E05C1B9 EQ PUSH2 0x231 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18A25E8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE8A0F89 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x1F564A06 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x2934B237 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FF PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH8 0xC7D713B49DA0000 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F564A06 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A7 DUP5 DUP5 PUSH2 0xC11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP6 XOR SLT DUP1 ISZERO PUSH2 0x4C6 JUMPI POP DUP4 DUP4 DUP3 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x4DA JUMPI DUP1 DUP1 PUSH2 0x4D6 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH8 0x10A741A462780000 PUSH1 0x0 SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F564A06 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x7D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP1 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x836 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST POP PUSH2 0x8B7 PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP6 PUSH2 0xCFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST POP PUSH2 0xADC PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP6 PUSH2 0xCFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4D SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ DUP1 ISZERO PUSH2 0xCA4 JUMPI POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ JUMPDEST ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC8 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE7 DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDFC DUP2 PUSH2 0x164F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE11 DUP2 PUSH2 0x1666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE26 DUP2 PUSH2 0x167D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE3B DUP2 PUSH2 0x167D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE66 DUP6 DUP3 DUP7 ADD PUSH2 0xDD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE77 DUP6 DUP3 DUP7 ADD PUSH2 0xDD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH2 0xE96 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA5 DUP5 DUP3 DUP6 ADD PUSH2 0xDED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED3 DUP6 DUP3 DUP7 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE4 DUP6 DUP3 DUP7 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF04 JUMPI PUSH2 0xF03 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF12 DUP5 DUP3 DUP6 ADD PUSH2 0xE17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3F DUP5 DUP3 DUP6 ADD PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF51 DUP2 PUSH2 0x142D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF60 DUP2 PUSH2 0x148C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0x144B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0x1458 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF91 PUSH1 0x15 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9C DUP3 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB4 PUSH1 0x21 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBF DUP3 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD7 PUSH1 0x1A DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFA PUSH1 0x20 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1005 DUP3 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1019 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1034 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x104F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x105C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x1069 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1010 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1086 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x1093 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1010 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1104 DUP2 PUSH2 0xF84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1124 DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1144 DUP2 PUSH2 0xFCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0xFED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1180 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1010 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AD DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E1 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F8 DUP3 PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP PUSH2 0x1203 DUP4 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1213 JUMPI PUSH2 0x1212 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1262 DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x126D DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x153A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1293 DUP3 PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP PUSH2 0x129E DUP4 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x12DD JUMPI PUSH2 0x12DC PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x131A JUMPI PUSH2 0x1319 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1356 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1394 JUMPI PUSH2 0x1393 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AA DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x13B5 DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1404 DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x140F DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1422 JUMPI PUSH2 0x1421 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1438 DUP3 PUSH2 0x1462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1497 DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP3 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP3 PUSH2 0x1462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CD DUP3 PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x150B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5369676E6564536166654D6174683A206469766973696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E742068617665207468617420616D6F756E7421000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5369676E6564536166654D6174683A206469766973696F6E206279207A65726F PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x142D JUMP JUMPDEST DUP2 EQ PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1658 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP2 EQ PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x166F DUP2 PUSH2 0x1458 JUMP JUMPDEST DUP2 EQ PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1686 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP2 EQ PUSH2 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xE7 REVERT 0xAD 0xD5 AND 0xF9 MSTORE DUP2 DUP5 PUSH21 0x6996E8277C1AFAA51D29312C61EACDFDB42C799368 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "2709:4838:2:-:0;;;3258:15;3228:45;;3328:6;3297:37;;3370:5;3341:34;;3417:6;3382:41;;3450:1;3430:21;;3479:2;3458:23;;3540:42;3512:70;;;;;;;;;;;;;;;;;;;;3813:567;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3928:9;3918:1;;:20;;;;;;;;;;;;;;;;;;3965:11;3952:3;;:25;;;;;;;;;;;;;;;;;;4007:42;3989:8;;:61;;;;;;;;;;;;;;;;;;4077:42;4061:13;;:58;;;;;;;;;;;;;;;;;;4227:6;4206:16;;4193:12;;:29;;;;:::i;:::-;4192:42;;;;:::i;:::-;4179:12;:55;;;;4349:6;4330:16;;4319:10;;:27;;;;:::i;:::-;:37;;;;:::i;:::-;4308:10;:48;;;;3813:567;;2709:4838;;7:143:3;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:185::-;790:1;807:20;825:1;807:20;:::i;:::-;802:25;;841:20;859:1;841:20;:::i;:::-;836:25;;880:1;870:35;;885:18;;:::i;:::-;870:35;927:1;924;920:9;915:14;;750:185;;;;:::o;941:348::-;981:7;1004:20;1022:1;1004:20;:::i;:::-;999:25;;1038:20;1056:1;1038:20;:::i;:::-;1033:25;;1226:1;1158:66;1154:74;1151:1;1148:81;1143:1;1136:9;1129:17;1125:105;1122:131;;;1233:18;;:::i;:::-;1122:131;1281:1;1278;1274:9;1263:20;;941:348;;;;:::o;1295:96::-;1332:7;1361:24;1379:5;1361:24;:::i;:::-;1350:35;;1295:96;;;:::o;1397:126::-;1434:7;1474:42;1467:5;1463:54;1452:65;;1397:126;;;:::o;1529:77::-;1566:7;1595:5;1584:16;;1529:77;;;:::o;1612:180::-;1660:77;1657:1;1650:88;1757:4;1754:1;1747:15;1781:4;1778:1;1771:15;1798:180;1846:77;1843:1;1836:88;1943:4;1940:1;1933:15;1967:4;1964:1;1957:15;2107:117;2216:1;2213;2206:12;2230:122;2303:24;2321:5;2303:24;:::i;:::-;2296:5;2293:35;2283:63;;2342:1;2339;2332:12;2283:63;2230:122;:::o;2709:4838:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_safeTransferFrom_3431": {
									"entryPoint": 3326,
									"id": 3431,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyScepter_3282": {
									"entryPoint": 1768,
									"id": 3282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_2990": {
									"entryPoint": 3089,
									"id": 2990,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@floorDiv_3333": {
									"entryPoint": 1178,
									"id": 3333,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getBackingPrice_3346": {
									"entryPoint": 1252,
									"id": 3346,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBuyPrice_3375": {
									"entryPoint": 994,
									"id": 3375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSellPrice_3404": {
									"entryPoint": 1584,
									"id": 3404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@growthFactor_3073": {
									"entryPoint": 3007,
									"id": 3073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintBaton_3296": {
									"entryPoint": 1432,
									"id": 3296,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@mockUSDC_3121": {
									"entryPoint": 2822,
									"id": 3121,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@queryERC20Balance_3194": {
									"entryPoint": 2860,
									"id": 3194,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@res_3112": {
									"entryPoint": 2273,
									"id": 3112,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellFactor_3075": {
									"entryPoint": 2292,
									"id": 3075,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellScepter_3242": {
									"entryPoint": 2298,
									"id": 3242,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tSC_3118": {
									"entryPoint": 2235,
									"id": 3118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@testwallet_3115": {
									"entryPoint": 3013,
									"id": 3115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@treasury1Addr_3085": {
									"entryPoint": 3051,
									"id": 3085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@treasury1bal_3095": {
									"entryPoint": 1578,
									"id": 3095,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@treasury2Addr_3087": {
									"entryPoint": 2784,
									"id": 3087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_int256": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$2891_to_t_address_fromStack": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int128_to_t_int128_fromStack": {
									"entryPoint": 3942,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$2891__to_t_address__fromStack_reversed": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed": {
									"entryPoint": 4277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 4304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int128": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 5208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$2891_to_t_address": {
									"entryPoint": 5260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_int256": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd": {
									"entryPoint": 5647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14341:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "346:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "356:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "378:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "365:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "356:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "420:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "394:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "394:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "394:32:3"
														}
													]
												},
												"name": "abi_decode_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "324:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "332:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "340:5:3",
														"type": ""
													}
												],
												"src": "295:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "490:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "500:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "522:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "509:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "500:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "565:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "538:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "538:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "468:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "476:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "484:5:3",
														"type": ""
													}
												],
												"src": "438:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "656:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "671:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "665:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "656:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "714:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "687:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "687:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "687:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "624:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "632:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "640:5:3",
														"type": ""
													}
												],
												"src": "583:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "815:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "861:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "863:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "863:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "863:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "836:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "845:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "828:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "828:32:3"
															},
															"nodeType": "YulIf",
															"src": "825:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "954:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "969:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "983:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "973:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "998:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1033:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1044:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1029:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1029:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1053:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1008:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1008:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "998:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1081:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1096:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1110:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1100:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1126:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1161:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1172:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1157:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1157:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1181:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1136:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1136:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1126:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "777:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "788:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "808:6:3",
														"type": ""
													}
												],
												"src": "732:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1332:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1334:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1307:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1316:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1303:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1303:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1328:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1299:32:3"
															},
															"nodeType": "YulIf",
															"src": "1296:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1425:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1440:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1444:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1469:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1512:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1523:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1508:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1532:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1479:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1479:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1469:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1256:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1267:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1279:6:3",
														"type": ""
													}
												],
												"src": "1212:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:389:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1690:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1692:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1692:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1692:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1665:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1674:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1661:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1657:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:32:3"
															},
															"nodeType": "YulIf",
															"src": "1654:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1783:116:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1798:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1812:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1802:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1827:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1861:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1872:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1857:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1857:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "1837:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1827:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1909:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1924:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1938:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1928:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1954:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1988:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1999:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1984:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1984:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2008:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "1964:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1964:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1954:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1606:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1617:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1629:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1637:6:3",
														"type": ""
													}
												],
												"src": "1563:470:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2105:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2151:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2153:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2153:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2153:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2135:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:32:3"
															},
															"nodeType": "YulIf",
															"src": "2115:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2244:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2259:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2263:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2288:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2323:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2334:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2343:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2298:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2288:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2075:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2086:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2098:6:3",
														"type": ""
													}
												],
												"src": "2039:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2451:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2497:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2499:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2499:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2499:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2472:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2481:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2468:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2493:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2464:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:32:3"
															},
															"nodeType": "YulIf",
															"src": "2461:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2590:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2605:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2619:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2609:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2634:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2680:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2691:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2676:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2676:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2700:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2644:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2634:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2421:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2432:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2444:6:3",
														"type": ""
													}
												],
												"src": "2374:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2796:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2813:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2836:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2818:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2818:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2806:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2784:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2791:3:3",
														"type": ""
													}
												],
												"src": "2731:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2935:81:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2952:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3003:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$2891_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2957:45:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:52:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:65:3"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$2891_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2923:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2930:3:3",
														"type": ""
													}
												],
												"src": "2855:161:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3085:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3102:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3124:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int128",
																			"nodeType": "YulIdentifier",
																			"src": "3107:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3107:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3095:36:3"
														}
													]
												},
												"name": "abi_encode_t_int128_to_t_int128_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3073:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3080:3:3",
														"type": ""
													}
												],
												"src": "3022:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3206:52:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3223:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3245:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "3228:16:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:23:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3216:36:3"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3194:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3201:3:3",
														"type": ""
													}
												],
												"src": "3143:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3410:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3420:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3486:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3491:2:3",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3427:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3420:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3592:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nodeType": "YulIdentifier",
																	"src": "3503:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3503:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3605:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3616:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3621:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3612:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3605:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3398:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3406:3:3",
														"type": ""
													}
												],
												"src": "3264:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3782:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3792:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3858:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3863:2:3",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3799:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3799:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3792:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3964:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81",
																	"nodeType": "YulIdentifier",
																	"src": "3875:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3875:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3977:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3988:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3993:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3984:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3770:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3778:3:3",
														"type": ""
													}
												],
												"src": "3636:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4154:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4164:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4230:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4235:2:3",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4171:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4164:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4336:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c",
																	"nodeType": "YulIdentifier",
																	"src": "4247:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4247:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4247:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4349:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4360:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4365:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4356:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4349:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4142:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4150:3:3",
														"type": ""
													}
												],
												"src": "4008:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4526:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4536:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4602:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4543:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4543:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4536:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4708:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd",
																	"nodeType": "YulIdentifier",
																	"src": "4619:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4619:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4619:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4721:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4732:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4737:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4728:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4721:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4514:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4522:3:3",
														"type": ""
													}
												],
												"src": "4380:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4817:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4834:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4857:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4839:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4805:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4812:3:3",
														"type": ""
													}
												],
												"src": "4752:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4974:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4984:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4996:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5007:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4992:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4984:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5064:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5077:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5088:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5073:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5073:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5020:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5020:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4946:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4958:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4969:4:3",
														"type": ""
													}
												],
												"src": "4876:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5258:288:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5268:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5280:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5276:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5276:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5268:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5348:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5361:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5372:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5357:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5304:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5304:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5429:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5442:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5453:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5438:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5385:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5385:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5385:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5511:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5524:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5535:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5520:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5467:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5467:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5467:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5214:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5226:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5234:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5242:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5253:4:3",
														"type": ""
													}
												],
												"src": "5104:442:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5678:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5688:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5700:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5711:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5696:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5688:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5768:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5781:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5792:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5777:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5777:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5724:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5724:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5849:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5862:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5873:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5858:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5858:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5805:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5642:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5654:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5662:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5673:4:3",
														"type": ""
													}
												],
												"src": "5552:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6003:139:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6013:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6025:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6036:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6021:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6013:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6108:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6121:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6132:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6117:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$2891_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6049:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6049:86:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6049:86:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$2891__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5975:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5987:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5998:4:3",
														"type": ""
													}
												],
												"src": "5890:252:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6244:122:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6254:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6266:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6277:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6254:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6332:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6345:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6356:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6341:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6341:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int128_to_t_int128_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6290:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:69:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6290:69:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6216:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6228:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6239:4:3",
														"type": ""
													}
												],
												"src": "6148:218:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6468:122:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6478:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6490:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6486:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6478:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6556:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6569:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6580:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6565:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6514:41:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:69:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:69:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6440:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6452:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6463:4:3",
														"type": ""
													}
												],
												"src": "6372:218:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6767:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6777:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6789:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6800:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6785:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6785:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6777:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6824:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6835:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6820:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6843:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6849:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6839:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6839:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6813:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6813:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6813:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6869:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7003:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6877:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6869:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6747:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6762:4:3",
														"type": ""
													}
												],
												"src": "6596:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7192:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7202:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7214:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7225:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7210:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7202:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7249:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7260:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7245:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7245:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7268:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7274:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7264:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7264:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7238:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7238:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7238:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7294:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7428:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7302:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7294:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7172:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7187:4:3",
														"type": ""
													}
												],
												"src": "7021:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7617:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7627:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7639:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7650:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7635:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7674:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7685:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7670:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7670:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7693:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7699:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7689:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7663:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7663:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7719:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7853:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7727:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7719:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7597:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7612:4:3",
														"type": ""
													}
												],
												"src": "7446:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8042:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8052:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8064:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8075:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8060:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8060:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8052:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8099:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8110:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8095:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8095:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8118:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8124:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8114:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8114:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8088:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8088:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8144:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8278:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8152:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8152:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8144:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8022:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8037:4:3",
														"type": ""
													}
												],
												"src": "7871:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8394:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8404:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8416:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8412:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8404:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8484:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8497:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8508:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8493:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8493:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8440:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8440:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8440:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8366:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8378:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8389:4:3",
														"type": ""
													}
												],
												"src": "8296:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8564:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8574:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8590:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8584:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8574:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8557:6:3",
														"type": ""
													}
												],
												"src": "8524:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8701:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8718:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8723:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8711:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8711:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8711:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8739:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8758:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8754:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8739:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8673:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8678:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8689:11:3",
														"type": ""
													}
												],
												"src": "8605:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8824:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8834:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8857:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8839:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8834:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8868:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8891:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8873:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8873:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8868:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9031:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9033:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9033:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9033:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8952:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8959:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9027:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8955:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8955:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8949:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8949:81:3"
															},
															"nodeType": "YulIf",
															"src": "8946:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9063:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9074:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9077:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9070:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9070:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9063:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8811:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8814:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8820:3:3",
														"type": ""
													}
												],
												"src": "8780:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9132:344:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9142:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9164:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9147:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9147:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9142:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9175:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9197:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9180:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9180:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9175:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9221:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9223:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9223:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9223:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9218:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9211:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9211:9:3"
															},
															"nodeType": "YulIf",
															"src": "9208:35:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9423:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9425:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9425:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9425:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9312:1:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9315:66:3",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9309:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9309:73:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9399:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9406:1:3",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9409:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9402:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9402:9:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9396:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9396:16:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9292:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9292:130:3"
															},
															"nodeType": "YulIf",
															"src": "9289:156:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9455:15:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9465:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:3"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "9460:4:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9460:10:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9455:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9121:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9124:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9130:1:3",
														"type": ""
													}
												],
												"src": "9091:385:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9524:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9534:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9557:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9539:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9539:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9534:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9568:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9591:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9573:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9573:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9568:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9615:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "9617:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9617:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9617:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9612:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9605:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:9:3"
															},
															"nodeType": "YulIf",
															"src": "9602:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9647:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9656:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9659:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9647:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9513:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9516:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9522:1:3",
														"type": ""
													}
												],
												"src": "9482:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9720:944:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9730:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9752:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9735:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9735:19:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9730:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9763:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9785:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "9768:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9768:19:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9763:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9974:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9976:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9976:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9976:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9872:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9875:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "9868:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9868:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9883:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9886:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "9879:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9879:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9864:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9864:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "9894:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9901:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9969:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9897:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9897:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9891:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9891:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9860:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9860:113:3"
															},
															"nodeType": "YulIf",
															"src": "9857:139:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10185:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10187:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10187:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10187:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10081:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10084:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "10077:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10077:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10092:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10095:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10088:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10088:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10073:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10073:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10104:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10112:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10180:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "10107:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10107:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10100:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10100:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10069:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10069:115:3"
															},
															"nodeType": "YulIf",
															"src": "10066:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10396:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10398:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10398:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10398:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10292:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10295:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10303:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10306:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "10299:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10299:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10284:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10284:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "10315:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10323:66:3",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10391:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "10318:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10318:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10311:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10311:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:115:3"
															},
															"nodeType": "YulIf",
															"src": "10277:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10606:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10608:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10608:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10608:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10502:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10505:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10498:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10498:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10513:1:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10516:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "10509:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10509:9:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10494:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10494:25:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "10525:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10533:66:3",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10601:1:3"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "10528:4:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10528:75:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10521:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10521:83:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10490:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10490:115:3"
															},
															"nodeType": "YulIf",
															"src": "10487:141:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10638:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10653:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10656:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10649:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10638:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9703:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9706:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9712:7:3",
														"type": ""
													}
												],
												"src": "9673:991:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10718:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10728:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10751:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10733:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10733:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10728:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10762:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10785:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10767:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10762:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10960:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10962:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10962:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10962:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10872:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10865:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10865:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10858:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10858:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10880:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10887:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10955:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10883:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10883:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10877:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10877:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10854:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10854:105:3"
															},
															"nodeType": "YulIf",
															"src": "10851:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10992:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11007:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11010:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11003:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11003:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10992:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10701:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10704:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10710:7:3",
														"type": ""
													}
												],
												"src": "10670:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11069:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11079:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11102:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11084:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11084:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11079:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11113:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11136:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11118:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11118:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11113:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11160:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11162:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11162:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11162:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11154:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11157:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11151:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11151:8:3"
															},
															"nodeType": "YulIf",
															"src": "11148:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11192:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11204:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11207:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11200:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11200:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11192:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11055:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11058:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11064:4:3",
														"type": ""
													}
												],
												"src": "11024:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11266:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11276:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11305:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11287:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11287:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11276:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11248:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11258:7:3",
														"type": ""
													}
												],
												"src": "11221:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11365:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11375:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11400:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11393:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11393:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11386:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11386:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11375:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11347:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11357:7:3",
														"type": ""
													}
												],
												"src": "11323:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11463:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11473:32:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11495:2:3",
																		"type": "",
																		"value": "15"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11499:5:3"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "11484:10:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11484:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11473:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int128",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11445:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11455:7:3",
														"type": ""
													}
												],
												"src": "11419:92:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11561:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11571:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11582:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11571:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11543:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11553:7:3",
														"type": ""
													}
												],
												"src": "11517:76:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11644:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11654:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11669:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11676:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11665:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11665:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11654:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11626:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11636:7:3",
														"type": ""
													}
												],
												"src": "11599:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11776:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11786:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11797:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11786:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11758:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11768:7:3",
														"type": ""
													}
												],
												"src": "11731:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11889:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11899:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11943:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11912:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11912:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11899:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$2891_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11869:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11879:9:3",
														"type": ""
													}
												],
												"src": "11814:141:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12021:66:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12031:50:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12075:5:3"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12044:30:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12044:37:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12031:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12001:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12011:9:3",
														"type": ""
													}
												],
												"src": "11961:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12153:53:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12163:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12194:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12176:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12176:24:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12163:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12133:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12143:9:3",
														"type": ""
													}
												],
												"src": "12093:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12254:189:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12264:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12290:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12273:16:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12273:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12264:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12386:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12388:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12388:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12388:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12311:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12318:66:3",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12308:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12308:77:3"
															},
															"nodeType": "YulIf",
															"src": "12305:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12417:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12428:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12435:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12424:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12417:3:3"
																}
															]
														}
													]
												},
												"name": "decrement_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12240:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12250:3:3",
														"type": ""
													}
												],
												"src": "12212:231:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12477:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12494:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12497:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12487:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12487:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12487:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12591:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12594:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12584:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12584:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12584:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12615:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12618:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12608:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12608:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12449:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12663:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12680:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12683:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12673:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12673:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12777:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12780:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12770:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12770:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12770:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12801:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12804:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12794:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12794:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12794:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12635:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12910:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12927:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12930:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12920:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12920:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12920:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12821:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13033:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13050:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13053:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13043:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13043:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13043:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12944:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13173:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13195:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13203:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13191:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13191:14:3"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13207:23:3",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13184:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13184:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13184:47:3"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13165:6:3",
														"type": ""
													}
												],
												"src": "13067:171:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13350:114:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13372:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13380:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13368:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13368:14:3"
																	},
																	{
																		"hexValue": "5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13384:34:3",
																		"type": "",
																		"value": "SignedSafeMath: division overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13361:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13361:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13361:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13440:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13448:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13436:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13436:15:3"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13453:3:3",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13429:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13429:28:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13429:28:3"
														}
													]
												},
												"name": "store_literal_in_memory_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13342:6:3",
														"type": ""
													}
												],
												"src": "13244:220:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13576:70:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13598:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13606:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13594:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13594:14:3"
																	},
																	{
																		"hexValue": "596f7520646f6e742068617665207468617420616d6f756e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13610:28:3",
																		"type": "",
																		"value": "You dont have that amount!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13587:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13587:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13587:52:3"
														}
													]
												},
												"name": "store_literal_in_memory_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13568:6:3",
														"type": ""
													}
												],
												"src": "13470:176:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13758:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13780:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13788:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13776:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13776:14:3"
																	},
																	{
																		"hexValue": "5369676e6564536166654d6174683a206469766973696f6e206279207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13792:34:3",
																		"type": "",
																		"value": "SignedSafeMath: division by zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13769:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13769:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13769:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13750:6:3",
														"type": ""
													}
												],
												"src": "13652:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13883:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13940:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13949:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13952:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13942:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13942:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13942:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13906:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13931:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13913:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13913:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13903:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13903:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13896:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13896:43:3"
															},
															"nodeType": "YulIf",
															"src": "13893:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13876:5:3",
														"type": ""
													}
												],
												"src": "13840:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14008:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14062:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14071:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14074:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14064:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14064:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14064:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14031:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14053:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14038:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14038:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14028:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14028:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14021:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14021:40:3"
															},
															"nodeType": "YulIf",
															"src": "14018:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14001:5:3",
														"type": ""
													}
												],
												"src": "13968:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14132:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14188:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14197:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14200:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14190:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14190:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14190:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14155:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14179:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "14162:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14162:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14152:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14152:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14145:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:42:3"
															},
															"nodeType": "YulIf",
															"src": "14142:62:3"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14125:5:3",
														"type": ""
													}
												],
												"src": "14090:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14259:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14316:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14325:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14328:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14318:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14318:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14318:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14282:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14307:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14289:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14289:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14279:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14279:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14272:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "14272:43:3"
															},
															"nodeType": "YulIf",
															"src": "14269:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14252:5:3",
														"type": ""
													}
												],
												"src": "14216:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_int256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$2891_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$2891_to_t_address(value))\n    }\n\n    function abi_encode_t_int128_to_t_int128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int128(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$2891__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$2891_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int128_to_t_int128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_int128(value) -> cleaned {\n        cleaned := signextend(15, value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$2891_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function decrement_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function store_literal_in_memory_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81(memPtr) {\n\n        mstore(add(memPtr, 0), \"SignedSafeMath: division overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function store_literal_in_memory_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You dont have that amount!\")\n\n    }\n\n    function store_literal_in_memory_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SignedSafeMath: division by zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100fe5760003560e01c80636f10e28511610095578063ee46767811610064578063ee467678146102f9578063ee546a5114610324578063ee62086814610361578063eee05f5e1461038c578063fbbb4589146103b7576100fe565b80636f10e2851461025c578063cbff461714610287578063daa3a4a4146102b2578063dd9b1d97146102ce576100fe565b806335453307116100d157806335453307146101bf57806343d32e9c146101ea57806365819f7e146102155780636e05c1b914610231576100fe565b8063018a25e8146101035780630e8a0f891461012e5780631f564a061461016b5780632934b23714610196575b600080fd5b34801561010f57600080fd5b506101186103e2565b604051610125919061116b565b60405180910390f35b34801561013a57600080fd5b5061015560048036038101906101509190610eae565b61049a565b60405161016291906110d0565b60405180910390f35b34801561017757600080fd5b506101806104e4565b60405161018d919061116b565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190610eee565b610598565b005b3480156101cb57600080fd5b506101d461062a565b6040516101e1919061116b565b60405180910390f35b3480156101f657600080fd5b506101ff610630565b60405161020c919061116b565b60405180910390f35b61022f600480360381019061022a9190610eee565b6106e8565b005b34801561023d57600080fd5b506102466108bb565b604051610253919061109a565b60405180910390f35b34801561026857600080fd5b506102716108e1565b60405161027e91906110b5565b60405180910390f35b34801561029357600080fd5b5061029c6108f4565b6040516102a9919061116b565b60405180910390f35b6102cc60048036038101906102c79190610eee565b6108fa565b005b3480156102da57600080fd5b506102e3610ae0565b6040516102f0919061101f565b60405180910390f35b34801561030557600080fd5b5061030e610b06565b60405161031b919061109a565b60405180910390f35b34801561033057600080fd5b5061034b60048036038101906103469190610e41565b610b2c565b604051610358919061116b565b60405180910390f35b34801561036d57600080fd5b50610376610bbf565b604051610383919061116b565b60405180910390f35b34801561039857600080fd5b506103a1610bc5565b6040516103ae919061101f565b60405180910390f35b3480156103c357600080fd5b506103cc610beb565b6040516103d9919061101f565b60405180910390f35b6000670de0b6b3a7640000600154670c7d713b49da000061040391906113f9565b3073ffffffffffffffffffffffffffffffffffffffff16631f564a066040518163ffffffff1660e01b815260040160206040518083038186803b15801561044957600080fd5b505afa15801561045d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104819190610f1b565b61048b919061139f565b6104959190611257565b905090565b6000806104a78484610c11565b905060008385181280156104c657508383826104c39190611288565b14155b156104da5780806104d6906114c2565b9150505b8091505092915050565b6000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561054e57600080fd5b505afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190610f1b565b6008546105939190611257565b905090565b601260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016105f5929190611071565b600060405180830381600087803b15801561060f57600080fd5b505af1158015610623573d6000803e3d6000fd5b5050505050565b60085481565b6000670de0b6b3a76400006710a741a4627800006000546106519190611197565b3073ffffffffffffffffffffffffffffffffffffffff16631f564a066040518163ffffffff1660e01b815260040160206040518083038186803b15801561069757600080fd5b505afa1580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190610f1b565b6106d9919061139f565b6106e39190611257565b905090565b6000601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610745919061101f565b60206040518083038186803b15801561075d57600080fd5b505afa158015610771573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190610f1b565b90508181116107d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d09061112b565b60405180910390fd5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610836929190611071565b602060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108889190610e81565b506108b7601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333085610cfe565b5050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e60009054906101000a9004600f0b81565b60015481565b6000601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610957919061101f565b60206040518083038186803b15801561096f57600080fd5b505afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190610f1b565b90508181116109eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e29061112b565b60405180910390fd5b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a764000085610a3e9190611197565b6040518363ffffffff1660e01b8152600401610a5b929190611071565b602060405180830381600087803b158015610a7557600080fd5b505af1158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad9190610e81565b50610adc601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16333085610cfe565b5050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401610b67919061101f565b60206040518083038186803b158015610b7f57600080fd5b505afa158015610b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb79190610f1b565b905092915050565b60005481565b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080821415610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d9061114b565b60405180910390fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82148015610ca457507f800000000000000000000000000000000000000000000000000000000000000083145b15610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb9061110b565b60405180910390fd5b60008284610cf291906111ed565b90508091505092915050565b60008473ffffffffffffffffffffffffffffffffffffffff166323b872dd8585856040518463ffffffff1660e01b8152600401610d3d9392919061103a565b602060405180830381600087803b158015610d5757600080fd5b505af1158015610d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8f9190610e81565b905080610dd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc8906110eb565b60405180910390fd5b5050505050565b600081359050610de781611638565b92915050565b600081519050610dfc8161164f565b92915050565b600081359050610e1181611666565b92915050565b600081359050610e268161167d565b92915050565b600081519050610e3b8161167d565b92915050565b60008060408385031215610e5857610e57611569565b5b6000610e6685828601610dd8565b9250506020610e7785828601610dd8565b9150509250929050565b600060208284031215610e9757610e96611569565b5b6000610ea584828501610ded565b91505092915050565b60008060408385031215610ec557610ec4611569565b5b6000610ed385828601610e02565b9250506020610ee485828601610e02565b9150509250929050565b600060208284031215610f0457610f03611569565b5b6000610f1284828501610e17565b91505092915050565b600060208284031215610f3157610f30611569565b5b6000610f3f84828501610e2c565b91505092915050565b610f518161142d565b82525050565b610f608161148c565b82525050565b610f6f8161144b565b82525050565b610f7e81611458565b82525050565b6000610f91601583611186565b9150610f9c8261156e565b602082019050919050565b6000610fb4602183611186565b9150610fbf82611597565b604082019050919050565b6000610fd7601a83611186565b9150610fe2826115e6565b602082019050919050565b6000610ffa602083611186565b91506110058261160f565b602082019050919050565b61101981611482565b82525050565b60006020820190506110346000830184610f48565b92915050565b600060608201905061104f6000830186610f48565b61105c6020830185610f48565b6110696040830184611010565b949350505050565b60006040820190506110866000830185610f48565b6110936020830184611010565b9392505050565b60006020820190506110af6000830184610f57565b92915050565b60006020820190506110ca6000830184610f66565b92915050565b60006020820190506110e56000830184610f75565b92915050565b6000602082019050818103600083015261110481610f84565b9050919050565b6000602082019050818103600083015261112481610fa7565b9050919050565b6000602082019050818103600083015261114481610fca565b9050919050565b6000602082019050818103600083015261116481610fed565b9050919050565b60006020820190506111806000830184611010565b92915050565b600082825260208201905092915050565b60006111a282611482565b91506111ad83611482565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111e2576111e161150b565b5b828201905092915050565b60006111f882611458565b915061120383611458565b9250826112135761121261153a565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561124c5761124b61150b565b5b828205905092915050565b600061126282611482565b915061126d83611482565b92508261127d5761127c61153a565b5b828204905092915050565b600061129382611458565b915061129e83611458565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156112dd576112dc61150b565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561131a5761131961150b565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156113575761135661150b565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156113945761139361150b565b5b828202905092915050565b60006113aa82611482565b91506113b583611482565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113ee576113ed61150b565b5b828202905092915050565b600061140482611482565b915061140f83611482565b9250828210156114225761142161150b565b5b828203905092915050565b600061143882611462565b9050919050565b60008115159050919050565b600081600f0b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006114978261149e565b9050919050565b60006114a9826114b0565b9050919050565b60006114bb82611462565b9050919050565b60006114cd82611458565b91507f8000000000000000000000000000000000000000000000000000000000000000821415611500576114ff61150b565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f596f7520646f6e742068617665207468617420616d6f756e7421000000000000600082015250565b7f5369676e6564536166654d6174683a206469766973696f6e206279207a65726f600082015250565b6116418161142d565b811461164c57600080fd5b50565b6116588161143f565b811461166357600080fd5b50565b61166f81611458565b811461167a57600080fd5b50565b61168681611482565b811461169157600080fd5b5056fea264697066735822122001e7fdadd516f9528184746996e8277c1afaa51d29312c61eacdfdb42c79936864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F10E285 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xEE467678 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xEE467678 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xEE546A51 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xEE620868 EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xEEE05F5E EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xFBBB4589 EQ PUSH2 0x3B7 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6F10E285 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xCBFF4617 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xDAA3A4A4 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDD9B1D97 EQ PUSH2 0x2CE JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x35453307 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x35453307 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x43D32E9C EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x65819F7E EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x6E05C1B9 EQ PUSH2 0x231 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x18A25E8 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE8A0F89 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x1F564A06 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x2934B237 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FF PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x8E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29C PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x376 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xBC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 SLOAD PUSH8 0xC7D713B49DA0000 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F564A06 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x449 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x481 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A7 DUP5 DUP5 PUSH2 0xC11 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP6 XOR SLT DUP1 ISZERO PUSH2 0x4C6 JUMPI POP DUP4 DUP4 DUP3 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x1288 JUMP JUMPDEST EQ ISZERO JUMPDEST ISZERO PUSH2 0x4DA JUMPI DUP1 DUP1 PUSH2 0x4D6 SWAP1 PUSH2 0x14C2 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F5 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x623 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH8 0x10A741A462780000 PUSH1 0x0 SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1F564A06 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST PUSH2 0x6D9 SWAP2 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x1257 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x795 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x7D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D0 SWAP1 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x836 SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x888 SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST POP PUSH2 0x8B7 PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP6 PUSH2 0xCFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A7 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E2 SWAP1 PUSH2 0x112B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5B SWAP3 SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAD SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST POP PUSH2 0xADC PUSH1 0x10 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP6 PUSH2 0xCFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB67 SWAP2 SWAP1 PUSH2 0x101F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0xF1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4D SWAP1 PUSH2 0x114B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ DUP1 ISZERO PUSH2 0xCA4 JUMPI POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ JUMPDEST ISZERO PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xCF2 SWAP2 SWAP1 PUSH2 0x11ED JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC8 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE7 DUP2 PUSH2 0x1638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xDFC DUP2 PUSH2 0x164F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE11 DUP2 PUSH2 0x1666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE26 DUP2 PUSH2 0x167D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xE3B DUP2 PUSH2 0x167D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE58 JUMPI PUSH2 0xE57 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE66 DUP6 DUP3 DUP7 ADD PUSH2 0xDD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE77 DUP6 DUP3 DUP7 ADD PUSH2 0xDD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE97 JUMPI PUSH2 0xE96 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA5 DUP5 DUP3 DUP6 ADD PUSH2 0xDED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xED3 DUP6 DUP3 DUP7 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEE4 DUP6 DUP3 DUP7 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF04 JUMPI PUSH2 0xF03 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF12 DUP5 DUP3 DUP6 ADD PUSH2 0xE17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0x1569 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3F DUP5 DUP3 DUP6 ADD PUSH2 0xE2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF51 DUP2 PUSH2 0x142D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF60 DUP2 PUSH2 0x148C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0x144B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF7E DUP2 PUSH2 0x1458 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF91 PUSH1 0x15 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9C DUP3 PUSH2 0x156E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB4 PUSH1 0x21 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0xFBF DUP3 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD7 PUSH1 0x1A DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE2 DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFA PUSH1 0x20 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1005 DUP3 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1019 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1034 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x104F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x105C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x1069 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1010 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1086 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x1093 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1010 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1104 DUP2 PUSH2 0xF84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1124 DUP2 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1144 DUP2 PUSH2 0xFCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 PUSH2 0xFED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1180 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1010 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A2 DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AD DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11E2 JUMPI PUSH2 0x11E1 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F8 DUP3 PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP PUSH2 0x1203 DUP4 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1213 JUMPI PUSH2 0x1212 PUSH2 0x153A JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1262 DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x126D DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x127D JUMPI PUSH2 0x127C PUSH2 0x153A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1293 DUP3 PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP PUSH2 0x129E DUP4 PUSH2 0x1458 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x12DD JUMPI PUSH2 0x12DC PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x131A JUMPI PUSH2 0x1319 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1357 JUMPI PUSH2 0x1356 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x1394 JUMPI PUSH2 0x1393 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AA DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x13B5 DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1404 DUP3 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0x140F DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1422 JUMPI PUSH2 0x1421 PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1438 DUP3 PUSH2 0x1462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1497 DUP3 PUSH2 0x149E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 DUP3 PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14BB DUP3 PUSH2 0x1462 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CD DUP3 PUSH2 0x1458 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x1500 JUMPI PUSH2 0x14FF PUSH2 0x150B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5369676E6564536166654D6174683A206469766973696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520646F6E742068617665207468617420616D6F756E7421000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5369676E6564536166654D6174683A206469766973696F6E206279207A65726F PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1641 DUP2 PUSH2 0x142D JUMP JUMPDEST DUP2 EQ PUSH2 0x164C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1658 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP2 EQ PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x166F DUP2 PUSH2 0x1458 JUMP JUMPDEST DUP2 EQ PUSH2 0x167A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1686 DUP2 PUSH2 0x1482 JUMP JUMPDEST DUP2 EQ PUSH2 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xE7 REVERT 0xAD 0xD5 AND 0xF9 MSTORE DUP2 DUP5 PUSH21 0x6996E8277C1AFAA51D29312C61EACDFDB42C799368 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "2709:4838:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6888:154;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6510:166;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6682:200;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6395:107;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3228:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7048:220;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5592:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3710:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3488;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2908:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4705:881;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3159:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3734:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:184;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2874:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3512:70;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3124:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6888:154;6934:7;7026:6;7011:10;;6992:16;:29;;;;:::i;:::-;6966:4;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;:67;;;;:::i;:::-;6958:76;;6888:154;:::o;6510:166::-;6564:6;6579:8;6590:24;6609:1;6612;6590:18;:24::i;:::-;6579:35;;6635:1;6630;6626;:5;6625:11;:27;;;;;6650:1;6645;6641;:5;;;;:::i;:::-;:10;;6625:27;6621:36;;;6654:3;;;;;:::i;:::-;;;;6621:36;6671:1;6664:8;;;6510:166;;;;:::o;6682:200::-;6732:7;6833:3;;;;;;;;;;;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6820:12;;:30;;;;:::i;:::-;6812:39;;6682:200;:::o;6395:107::-;6458:1;;;;;;;;;;;:6;;;6465:10;6477:6;6458:26;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6395:107;:::o;3228:45::-;;;;:::o;7048:220::-;7095:7;7253:6;7235:12;7219;;:29;;;;:::i;:::-;7193:4;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;;;:::i;:::-;7192:68;;;;:::i;:::-;7185:75;;7048:220;:::o;5592:797::-;5722:27;5752:8;;;;;;;;;;;:18;;;5771:10;5752:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5722:60;;5823:14;5801:19;:36;5793:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5919:3;;;;;;;;;;;:12;;;5932:10;5944:14;5919:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6093:70;6111:8;;;;;;;;;;;6121:10;6141:4;6148:14;6093:17;:70::i;:::-;5650:739;5592:797;:::o;3710:17::-;;;;;;;;;;;;;:::o;3488:::-;;;;;;;;;;;;;:::o;2908:25::-;;;;:::o;4705:881::-;4837:26;4866:3;;;;;;;;;;;:13;;;4880:10;4866:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4837:54;;4931:15;4910:18;:36;4902:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5179:8;;;;;;;;;;;:17;;;5197:10;5228;5209:15;:30;;;;:::i;:::-;5179:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5296:66;5314:3;;;;;;;;;;;5319:10;5339:4;5346:15;5296:17;:66::i;:::-;4765:821;4705:881;:::o;3159:28::-;;;;;;;;;;;;;:::o;3734:22::-;;;;;;;;;;;;;:::o;4388:184::-;4484:4;4523:13;4508:39;;;4548:15;4508:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4501:63;;4388:184;;;;:::o;2874:27::-;;;;:::o;3512:70::-;;;;;;;;;;;;;:::o;3124:28::-;;;;;;;;;;;;;:::o;1502:271::-;1558:6;1590:1;1585;:6;;1577:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1654:2;1649:1;:7;:27;;;;;195:7;1660:1;:16;1649:27;1647:30;1639:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1728:8;1743:1;1739;:5;;;;:::i;:::-;1728:16;;1764:1;1757:8;;;1502:271;;;;:::o;7274:268::-;7428:9;7440:5;:18;;;7459:6;7467:9;7478:6;7440:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7428:57;;7504:4;7496:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;7417:125;7274:268;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:::-;340:5;378:6;365:20;356:29;;394:32;420:5;394:32;:::i;:::-;295:137;;;;:::o;438:139::-;484:5;522:6;509:20;500:29;;538:33;565:5;538:33;:::i;:::-;438:139;;;;:::o;583:143::-;640:5;671:6;665:13;656:22;;687:33;714:5;687:33;:::i;:::-;583:143;;;;:::o;732:474::-;800:6;808;857:2;845:9;836:7;832:23;828:32;825:119;;;863:79;;:::i;:::-;825:119;983:1;1008:53;1053:7;1044:6;1033:9;1029:22;1008:53;:::i;:::-;998:63;;954:117;1110:2;1136:53;1181:7;1172:6;1161:9;1157:22;1136:53;:::i;:::-;1126:63;;1081:118;732:474;;;;;:::o;1212:345::-;1279:6;1328:2;1316:9;1307:7;1303:23;1299:32;1296:119;;;1334:79;;:::i;:::-;1296:119;1454:1;1479:61;1532:7;1523:6;1512:9;1508:22;1479:61;:::i;:::-;1469:71;;1425:125;1212:345;;;;:::o;1563:470::-;1629:6;1637;1686:2;1674:9;1665:7;1661:23;1657:32;1654:119;;;1692:79;;:::i;:::-;1654:119;1812:1;1837:52;1881:7;1872:6;1861:9;1857:22;1837:52;:::i;:::-;1827:62;;1783:116;1938:2;1964:52;2008:7;1999:6;1988:9;1984:22;1964:52;:::i;:::-;1954:62;;1909:117;1563:470;;;;;:::o;2039:329::-;2098:6;2147:2;2135:9;2126:7;2122:23;2118:32;2115:119;;;2153:79;;:::i;:::-;2115:119;2273:1;2298:53;2343:7;2334:6;2323:9;2319:22;2298:53;:::i;:::-;2288:63;;2244:117;2039:329;;;;:::o;2374:351::-;2444:6;2493:2;2481:9;2472:7;2468:23;2464:32;2461:119;;;2499:79;;:::i;:::-;2461:119;2619:1;2644:64;2700:7;2691:6;2680:9;2676:22;2644:64;:::i;:::-;2634:74;;2590:128;2374:351;;;;:::o;2731:118::-;2818:24;2836:5;2818:24;:::i;:::-;2813:3;2806:37;2731:118;;:::o;2855:161::-;2957:52;3003:5;2957:52;:::i;:::-;2952:3;2945:65;2855:161;;:::o;3022:115::-;3107:23;3124:5;3107:23;:::i;:::-;3102:3;3095:36;3022:115;;:::o;3143:::-;3228:23;3245:5;3228:23;:::i;:::-;3223:3;3216:36;3143:115;;:::o;3264:366::-;3406:3;3427:67;3491:2;3486:3;3427:67;:::i;:::-;3420:74;;3503:93;3592:3;3503:93;:::i;:::-;3621:2;3616:3;3612:12;3605:19;;3264:366;;;:::o;3636:::-;3778:3;3799:67;3863:2;3858:3;3799:67;:::i;:::-;3792:74;;3875:93;3964:3;3875:93;:::i;:::-;3993:2;3988:3;3984:12;3977:19;;3636:366;;;:::o;4008:::-;4150:3;4171:67;4235:2;4230:3;4171:67;:::i;:::-;4164:74;;4247:93;4336:3;4247:93;:::i;:::-;4365:2;4360:3;4356:12;4349:19;;4008:366;;;:::o;4380:::-;4522:3;4543:67;4607:2;4602:3;4543:67;:::i;:::-;4536:74;;4619:93;4708:3;4619:93;:::i;:::-;4737:2;4732:3;4728:12;4721:19;;4380:366;;;:::o;4752:118::-;4839:24;4857:5;4839:24;:::i;:::-;4834:3;4827:37;4752:118;;:::o;4876:222::-;4969:4;5007:2;4996:9;4992:18;4984:26;;5020:71;5088:1;5077:9;5073:17;5064:6;5020:71;:::i;:::-;4876:222;;;;:::o;5104:442::-;5253:4;5291:2;5280:9;5276:18;5268:26;;5304:71;5372:1;5361:9;5357:17;5348:6;5304:71;:::i;:::-;5385:72;5453:2;5442:9;5438:18;5429:6;5385:72;:::i;:::-;5467;5535:2;5524:9;5520:18;5511:6;5467:72;:::i;:::-;5104:442;;;;;;:::o;5552:332::-;5673:4;5711:2;5700:9;5696:18;5688:26;;5724:71;5792:1;5781:9;5777:17;5768:6;5724:71;:::i;:::-;5805:72;5873:2;5862:9;5858:18;5849:6;5805:72;:::i;:::-;5552:332;;;;;:::o;5890:252::-;5998:4;6036:2;6025:9;6021:18;6013:26;;6049:86;6132:1;6121:9;6117:17;6108:6;6049:86;:::i;:::-;5890:252;;;;:::o;6148:218::-;6239:4;6277:2;6266:9;6262:18;6254:26;;6290:69;6356:1;6345:9;6341:17;6332:6;6290:69;:::i;:::-;6148:218;;;;:::o;6372:::-;6463:4;6501:2;6490:9;6486:18;6478:26;;6514:69;6580:1;6569:9;6565:17;6556:6;6514:69;:::i;:::-;6372:218;;;;:::o;6596:419::-;6762:4;6800:2;6789:9;6785:18;6777:26;;6849:9;6843:4;6839:20;6835:1;6824:9;6820:17;6813:47;6877:131;7003:4;6877:131;:::i;:::-;6869:139;;6596:419;;;:::o;7021:::-;7187:4;7225:2;7214:9;7210:18;7202:26;;7274:9;7268:4;7264:20;7260:1;7249:9;7245:17;7238:47;7302:131;7428:4;7302:131;:::i;:::-;7294:139;;7021:419;;;:::o;7446:::-;7612:4;7650:2;7639:9;7635:18;7627:26;;7699:9;7693:4;7689:20;7685:1;7674:9;7670:17;7663:47;7727:131;7853:4;7727:131;:::i;:::-;7719:139;;7446:419;;;:::o;7871:::-;8037:4;8075:2;8064:9;8060:18;8052:26;;8124:9;8118:4;8114:20;8110:1;8099:9;8095:17;8088:47;8152:131;8278:4;8152:131;:::i;:::-;8144:139;;7871:419;;;:::o;8296:222::-;8389:4;8427:2;8416:9;8412:18;8404:26;;8440:71;8508:1;8497:9;8493:17;8484:6;8440:71;:::i;:::-;8296:222;;;;:::o;8605:169::-;8689:11;8723:6;8718:3;8711:19;8763:4;8758:3;8754:14;8739:29;;8605:169;;;;:::o;8780:305::-;8820:3;8839:20;8857:1;8839:20;:::i;:::-;8834:25;;8873:20;8891:1;8873:20;:::i;:::-;8868:25;;9027:1;8959:66;8955:74;8952:1;8949:81;8946:107;;;9033:18;;:::i;:::-;8946:107;9077:1;9074;9070:9;9063:16;;8780:305;;;;:::o;9091:385::-;9130:1;9147:19;9164:1;9147:19;:::i;:::-;9142:24;;9180:19;9197:1;9180:19;:::i;:::-;9175:24;;9218:1;9208:35;;9223:18;;:::i;:::-;9208:35;9409:1;9406;9402:9;9399:1;9396:16;9315:66;9312:1;9309:73;9292:130;9289:156;;;9425:18;;:::i;:::-;9289:156;9468:1;9465;9460:10;9455:15;;9091:385;;;;:::o;9482:185::-;9522:1;9539:20;9557:1;9539:20;:::i;:::-;9534:25;;9573:20;9591:1;9573:20;:::i;:::-;9568:25;;9612:1;9602:35;;9617:18;;:::i;:::-;9602:35;9659:1;9656;9652:9;9647:14;;9482:185;;;;:::o;9673:991::-;9712:7;9735:19;9752:1;9735:19;:::i;:::-;9730:24;;9768:19;9785:1;9768:19;:::i;:::-;9763:24;;9969:1;9901:66;9897:74;9894:1;9891:81;9886:1;9883;9879:9;9875:1;9872;9868:9;9864:25;9860:113;9857:139;;;9976:18;;:::i;:::-;9857:139;10180:1;10112:66;10107:75;10104:1;10100:83;10095:1;10092;10088:9;10084:1;10081;10077:9;10073:25;10069:115;10066:141;;;10187:18;;:::i;:::-;10066:141;10391:1;10323:66;10318:75;10315:1;10311:83;10306:1;10303;10299:9;10295:1;10292;10288:9;10284:25;10280:115;10277:141;;;10398:18;;:::i;:::-;10277:141;10601:1;10533:66;10528:75;10525:1;10521:83;10516:1;10513;10509:9;10505:1;10502;10498:9;10494:25;10490:115;10487:141;;;10608:18;;:::i;:::-;10487:141;10656:1;10653;10649:9;10638:20;;9673:991;;;;:::o;10670:348::-;10710:7;10733:20;10751:1;10733:20;:::i;:::-;10728:25;;10767:20;10785:1;10767:20;:::i;:::-;10762:25;;10955:1;10887:66;10883:74;10880:1;10877:81;10872:1;10865:9;10858:17;10854:105;10851:131;;;10962:18;;:::i;:::-;10851:131;11010:1;11007;11003:9;10992:20;;10670:348;;;;:::o;11024:191::-;11064:4;11084:20;11102:1;11084:20;:::i;:::-;11079:25;;11118:20;11136:1;11118:20;:::i;:::-;11113:25;;11157:1;11154;11151:8;11148:34;;;11162:18;;:::i;:::-;11148:34;11207:1;11204;11200:9;11192:17;;11024:191;;;;:::o;11221:96::-;11258:7;11287:24;11305:5;11287:24;:::i;:::-;11276:35;;11221:96;;;:::o;11323:90::-;11357:7;11400:5;11393:13;11386:21;11375:32;;11323:90;;;:::o;11419:92::-;11455:7;11499:5;11495:2;11484:21;11473:32;;11419:92;;;:::o;11517:76::-;11553:7;11582:5;11571:16;;11517:76;;;:::o;11599:126::-;11636:7;11676:42;11669:5;11665:54;11654:65;;11599:126;;;:::o;11731:77::-;11768:7;11797:5;11786:16;;11731:77;;;:::o;11814:141::-;11879:9;11912:37;11943:5;11912:37;:::i;:::-;11899:50;;11814:141;;;:::o;11961:126::-;12011:9;12044:37;12075:5;12044:37;:::i;:::-;12031:50;;11961:126;;;:::o;12093:113::-;12143:9;12176:24;12194:5;12176:24;:::i;:::-;12163:37;;12093:113;;;:::o;12212:231::-;12250:3;12273:23;12290:5;12273:23;:::i;:::-;12264:32;;12318:66;12311:5;12308:77;12305:103;;;12388:18;;:::i;:::-;12305:103;12435:1;12428:5;12424:13;12417:20;;12212:231;;;:::o;12449:180::-;12497:77;12494:1;12487:88;12594:4;12591:1;12584:15;12618:4;12615:1;12608:15;12635:180;12683:77;12680:1;12673:88;12780:4;12777:1;12770:15;12804:4;12801:1;12794:15;12944:117;13053:1;13050;13043:12;13067:171;13207:23;13203:1;13195:6;13191:14;13184:47;13067:171;:::o;13244:220::-;13384:34;13380:1;13372:6;13368:14;13361:58;13453:3;13448:2;13440:6;13436:15;13429:28;13244:220;:::o;13470:176::-;13610:28;13606:1;13598:6;13594:14;13587:52;13470:176;:::o;13652:182::-;13792:34;13788:1;13780:6;13776:14;13769:58;13652:182;:::o;13840:122::-;13913:24;13931:5;13913:24;:::i;:::-;13906:5;13903:35;13893:63;;13952:1;13949;13942:12;13893:63;13840:122;:::o;13968:116::-;14038:21;14053:5;14038:21;:::i;:::-;14031:5;14028:32;14018:60;;14074:1;14071;14064:12;14018:60;13968:116;:::o;14090:120::-;14162:23;14179:5;14162:23;:::i;:::-;14155:5;14152:34;14142:62;;14200:1;14197;14190:12;14142:62;14090:120;:::o;14216:122::-;14289:24;14307:5;14289:24;:::i;:::-;14282:5;14279:35;14269:63;;14328:1;14325;14318:12;14269:63;14216:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1166800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyScepter(uint256)": "infinite",
								"floorDiv(int256,int256)": "infinite",
								"getBackingPrice()": "infinite",
								"getBuyPrice()": "infinite",
								"getSellPrice()": "infinite",
								"growthFactor()": "2495",
								"mintBaton(uint256)": "infinite",
								"mockUSDC()": "2622",
								"queryERC20Balance(address,address)": "infinite",
								"res()": "2498",
								"sellFactor()": "2474",
								"sellScepter(uint256)": "infinite",
								"tSC()": "2689",
								"testwallet()": "2602",
								"treasury1Addr()": "2624",
								"treasury1bal()": "2452",
								"treasury2Addr()": "2603"
							},
							"internal": {
								"_safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2709,
									"end": 7547,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3258,
									"end": 3273,
									"name": "PUSH",
									"source": 2,
									"value": "69E10DE76676D0800000"
								},
								{
									"begin": 3228,
									"end": 3273,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 3228,
									"end": 3273,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3328,
									"end": 3334,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 3297,
									"end": 3334,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 3297,
									"end": 3334,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3370,
									"end": 3375,
									"name": "PUSH",
									"source": 2,
									"value": "15F90"
								},
								{
									"begin": 3341,
									"end": 3375,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 3341,
									"end": 3375,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3417,
									"end": 3423,
									"name": "PUSH",
									"source": 2,
									"value": "927C0"
								},
								{
									"begin": 3382,
									"end": 3423,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 3382,
									"end": 3423,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3450,
									"end": 3451,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 3430,
									"end": 3451,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 3430,
									"end": 3451,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3479,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 3458,
									"end": 3481,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 3458,
									"end": 3481,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3540,
									"end": 3582,
									"name": "PUSH",
									"source": 2,
									"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "PUSH",
									"source": 2,
									"value": "F"
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3512,
									"end": 3582,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3928,
									"end": 3937,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3919,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 3918,
									"end": 3919,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3918,
									"end": 3938,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3965,
									"end": 3976,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3955,
									"name": "PUSH",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 3952,
									"end": 3955,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3952,
									"end": 3977,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4007,
									"end": 4049,
									"name": "PUSH",
									"source": 2,
									"value": "D7ACD2A9FD159E69BB102A1CA21C9A3E3A5F771B"
								},
								{
									"begin": 3989,
									"end": 3997,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 3989,
									"end": 3997,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3989,
									"end": 4050,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4077,
									"end": 4119,
									"name": "PUSH",
									"source": 2,
									"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
								},
								{
									"begin": 4061,
									"end": 4074,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 4061,
									"end": 4074,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4061,
									"end": 4119,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4227,
									"end": 4233,
									"name": "PUSH",
									"source": 2,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 4206,
									"end": 4222,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 4206,
									"end": 4222,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4193,
									"end": 4205,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 4193,
									"end": 4205,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4193,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 4193,
									"end": 4222,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4193,
									"end": 4222,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4193,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 4193,
									"end": 4222,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4193,
									"end": 4222,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 4193,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4234,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4192,
									"end": 4234,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4234,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4192,
									"end": 4234,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 4192,
									"end": 4234,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4192,
									"end": 4234,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 4192,
									"end": 4234,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4179,
									"end": 4191,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 4179,
									"end": 4234,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4179,
									"end": 4234,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4179,
									"end": 4234,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4179,
									"end": 4234,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4349,
									"end": 4355,
									"name": "PUSH",
									"source": 2,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 4330,
									"end": 4346,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 4330,
									"end": 4346,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 4319,
									"end": 4329,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4346,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4319,
									"end": 4346,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4346,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4346,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 4319,
									"end": 4346,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4319,
									"end": 4346,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 4319,
									"end": 4346,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4356,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 4319,
									"end": 4356,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4356,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4319,
									"end": 4356,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 4319,
									"end": 4356,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 4319,
									"end": 4356,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 4319,
									"end": 4356,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4318,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 4308,
									"end": 4356,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4356,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4356,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 4308,
									"end": 4356,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3813,
									"end": 4380,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 935,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 750,
									"end": 935,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 790,
									"end": 791,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 825,
									"end": 826,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 807,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 807,
									"end": 827,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 807,
									"end": 827,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 807,
									"end": 827,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 802,
									"end": 827,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 802,
									"end": 827,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 859,
									"end": 860,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 836,
									"end": 861,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 836,
									"end": 861,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 880,
									"end": 881,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 870,
									"end": 905,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 870,
									"end": 905,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 885,
									"end": 903,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 885,
									"end": 903,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 885,
									"end": 903,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 885,
									"end": 903,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 885,
									"end": 903,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 870,
									"end": 905,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 870,
									"end": 905,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 924,
									"end": 925,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 920,
									"end": 929,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 915,
									"end": 929,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 915,
									"end": 929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 935,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 750,
									"end": 935,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 750,
									"end": 935,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 935,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 750,
									"end": 935,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 941,
									"end": 1289,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 941,
									"end": 1289,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1022,
									"end": 1023,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1004,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1004,
									"end": 1024,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1004,
									"end": 1024,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1004,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 999,
									"end": 1024,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 999,
									"end": 1024,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1038,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1056,
									"end": 1057,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1038,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1038,
									"end": 1058,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1038,
									"end": 1058,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1038,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1058,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1033,
									"end": 1058,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1226,
									"end": 1227,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1158,
									"end": 1224,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1154,
									"end": 1228,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1148,
									"end": 1229,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1143,
									"end": 1144,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1136,
									"end": 1145,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1129,
									"end": 1146,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1125,
									"end": 1230,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1253,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1122,
									"end": 1253,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 1233,
									"end": 1251,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1253,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1122,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1281,
									"end": 1282,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1278,
									"end": 1279,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1274,
									"end": 1283,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 1283,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1263,
									"end": 1283,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 941,
									"end": 1289,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 941,
									"end": 1289,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 941,
									"end": 1289,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 941,
									"end": 1289,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 941,
									"end": 1289,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1295,
									"end": 1391,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1295,
									"end": 1391,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1332,
									"end": 1339,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1379,
									"end": 1384,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1361,
									"end": 1385,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1361,
									"end": 1385,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1361,
									"end": 1385,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 1361,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1385,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1385,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1295,
									"end": 1391,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1295,
									"end": 1391,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1295,
									"end": 1391,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1295,
									"end": 1391,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1397,
									"end": 1523,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 1397,
									"end": 1523,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1434,
									"end": 1441,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1474,
									"end": 1516,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1467,
									"end": 1472,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1463,
									"end": 1517,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1452,
									"end": 1517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1452,
									"end": 1517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1397,
									"end": 1523,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1397,
									"end": 1523,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1397,
									"end": 1523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1397,
									"end": 1523,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1529,
									"end": 1606,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1529,
									"end": 1606,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1566,
									"end": 1573,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1584,
									"end": 1600,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1584,
									"end": 1600,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1606,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1606,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1606,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1529,
									"end": 1606,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 1612,
									"end": 1792,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1612,
									"end": 1792,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1660,
									"end": 1737,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1657,
									"end": 1658,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1650,
									"end": 1738,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1757,
									"end": 1761,
									"name": "PUSH",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1754,
									"end": 1755,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1747,
									"end": 1762,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1781,
									"end": 1785,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1778,
									"end": 1779,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1771,
									"end": 1786,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1798,
									"end": 1978,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1798,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1846,
									"end": 1923,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1843,
									"end": 1844,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1836,
									"end": 1924,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1943,
									"end": 1947,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1940,
									"end": 1941,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1933,
									"end": 1948,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1967,
									"end": 1971,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1964,
									"end": 1965,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1957,
									"end": 1972,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2107,
									"end": 2224,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2107,
									"end": 2224,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2216,
									"end": 2217,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2213,
									"end": 2214,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2206,
									"end": 2218,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2230,
									"end": 2352,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2230,
									"end": 2352,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2303,
									"end": 2327,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 2321,
									"end": 2326,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2303,
									"end": 2327,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 2303,
									"end": 2327,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 2303,
									"end": 2327,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 2303,
									"end": 2327,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2296,
									"end": 2301,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2293,
									"end": 2328,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 2283,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 2283,
									"end": 2346,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2342,
									"end": 2343,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2339,
									"end": 2340,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2332,
									"end": 2344,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2283,
									"end": 2346,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 2283,
									"end": 2346,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2230,
									"end": 2352,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2230,
									"end": 2352,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2709,
									"end": 7547,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001e7fdadd516f9528184746996e8277c1afaa51d29312c61eacdfdb42c79936864736f6c63430008070033",
									".code": [
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "6F10E285"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "EE467678"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "EE467678"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "EE546A51"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "EE620868"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "EEE05F5E"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "FBBB4589"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "6F10E285"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "CBFF4617"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "DAA3A4A4"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "DD9B1D97"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "35453307"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "35453307"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "43D32E9C"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "65819F7E"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "6E05C1B9"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "18A25E8"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "E8A0F89"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "1F564A06"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "2934B237"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2709,
											"end": 7547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7011,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7011,
											"end": 7021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6992,
											"end": 7008,
											"name": "PUSH",
											"source": 2,
											"value": "C7D713B49DA0000"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6992,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6970,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6966,
											"end": 6986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6986,
											"name": "PUSH",
											"source": 2,
											"value": "1F564A06"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 6966,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6966,
											"end": 7022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 7022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 6966,
											"end": 7022,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6966,
											"end": 7022,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6966,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6966,
											"end": 7033,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 7033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6966,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 6966,
											"end": 7033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6966,
											"end": 7033,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6966,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6958,
											"end": 7034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6888,
											"end": 7042,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6564,
											"end": 6570,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6587,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6612,
											"end": 6613,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6590,
											"end": 6614,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6590,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6590,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6579,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6635,
											"end": 6636,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6627,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6631,
											"name": "XOR",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6636,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6652,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6625,
											"end": 6652,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6650,
											"end": 6651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6645,
											"end": 6646,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6651,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6651,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6652,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 6625,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6621,
											"end": 6657,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6621,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6621,
											"end": 6657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6654,
											"end": 6657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6621,
											"end": 6657,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6621,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6664,
											"end": 6672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6664,
											"end": 6672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6664,
											"end": 6672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6510,
											"end": 6676,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6739,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6848,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6833,
											"end": 6848,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6848,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6833,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6820,
											"end": 6832,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6820,
											"end": 6832,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6851,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6682,
											"end": 6882,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6458,
											"end": 6459,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6464,
											"name": "PUSH",
											"source": 2,
											"value": "40C10F19"
										},
										{
											"begin": 6465,
											"end": 6475,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6483,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6458,
											"end": 6484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6395,
											"end": 6502,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3228,
											"end": 3273,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7095,
											"end": 7102,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7259,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7235,
											"end": 7247,
											"name": "PUSH",
											"source": 2,
											"value": "10A741A462780000"
										},
										{
											"begin": 7219,
											"end": 7231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7231,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7219,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7197,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7213,
											"name": "PUSH",
											"source": 2,
											"value": "1F564A06"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7193,
											"end": 7249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 7193,
											"end": 7249,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7193,
											"end": 7249,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 7193,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7192,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7192,
											"end": 7260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7192,
											"end": 7260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7192,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7192,
											"end": 7260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7192,
											"end": 7260,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 7192,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7185,
											"end": 7260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7185,
											"end": 7260,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7048,
											"end": 7268,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5722,
											"end": 5749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5752,
											"end": 5760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 5771,
											"end": 5781,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 5752,
											"end": 5782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5722,
											"end": 5782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5722,
											"end": 5782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5823,
											"end": 5837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5801,
											"end": 5837,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5793,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5919,
											"end": 5922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5919,
											"end": 5931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5931,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 5932,
											"end": 5942,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5944,
											"end": 5958,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5919,
											"end": 5959,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6119,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6121,
											"end": 6131,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 6141,
											"end": 6145,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 6148,
											"end": 6162,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6093,
											"end": 6163,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6093,
											"end": 6163,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6093,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 6389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5592,
											"end": 6389,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3710,
											"end": 3727,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3488,
											"end": 3505,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2933,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4863,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 4880,
											"end": 4890,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 4866,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4946,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4902,
											"end": 4977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5179,
											"end": 5187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5179,
											"end": 5196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5196,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 5197,
											"end": 5207,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5228,
											"end": 5238,
											"name": "PUSH",
											"source": 2,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5209,
											"end": 5224,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5209,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5296,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5329,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5339,
											"end": 5343,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5361,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5296,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5296,
											"end": 5362,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5296,
											"end": 5362,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5296,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4765,
											"end": 5586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4705,
											"end": 5586,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3187,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4484,
											"end": 4488,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4547,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4547,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4547,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 4548,
											"end": 4563,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 4508,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4501,
											"end": 4564,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4388,
											"end": 4572,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2901,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3582,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3152,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1502,
											"end": 1773,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1502,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 1577,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1650,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1676,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1676,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1649,
											"end": 1676,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1676,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 195,
											"end": 202,
											"name": "PUSH",
											"source": 2,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1660,
											"end": 1661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1649,
											"end": 1676,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 1649,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1677,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 1639,
											"end": 1715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1740,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1765,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1765,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1773,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1773,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1502,
											"end": 1773,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7274,
											"end": 7542,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7274,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7445,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 7459,
											"end": 7465,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7467,
											"end": 7476,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7440,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7428,
											"end": 7485,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7504,
											"end": 7508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7496,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7417,
											"end": 7542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7542,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 432,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 295,
											"end": 432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 340,
											"end": 345,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 365,
											"end": 385,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 356,
											"end": 385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 356,
											"end": 385,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 394,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 420,
											"end": 425,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 394,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 394,
											"end": 426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 432,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 432,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 432,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 432,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 438,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 438,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 484,
											"end": 489,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 500,
											"end": 529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 565,
											"end": 570,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 538,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 538,
											"end": 571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 438,
											"end": 577,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 438,
											"end": 577,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 438,
											"end": 577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 438,
											"end": 577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 438,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 726,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 583,
											"end": 726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 665,
											"end": 678,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 656,
											"end": 678,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 687,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 714,
											"end": 719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 687,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 687,
											"end": 720,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 720,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 687,
											"end": 720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 583,
											"end": 726,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 583,
											"end": 726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 583,
											"end": 726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 583,
											"end": 726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 583,
											"end": 726,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 800,
											"end": 806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 814,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 857,
											"end": 859,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 836,
											"end": 843,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 832,
											"end": 855,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 828,
											"end": 860,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 825,
											"end": 944,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 825,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 825,
											"end": 944,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 863,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 863,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 863,
											"end": 942,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 942,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 863,
											"end": 942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 825,
											"end": 944,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 825,
											"end": 944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 983,
											"end": 984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1053,
											"end": 1060,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1029,
											"end": 1051,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1008,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1008,
											"end": 1061,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1008,
											"end": 1061,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1008,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1061,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 998,
											"end": 1061,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 954,
											"end": 1071,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1112,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1181,
											"end": 1188,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 1136,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1189,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1081,
											"end": 1199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 732,
											"end": 1206,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1212,
											"end": 1557,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1212,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1279,
											"end": 1285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1316,
											"end": 1325,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1326,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1299,
											"end": 1331,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1415,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1296,
											"end": 1415,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1334,
											"end": 1413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1334,
											"end": 1413,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1413,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1334,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1415,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 1296,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1532,
											"end": 1539,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1530,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1479,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1479,
											"end": 1540,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1479,
											"end": 1540,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 1479,
											"end": 1540,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1540,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1469,
											"end": 1540,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1557,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1557,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1557,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1688,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1674,
											"end": 1683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1672,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1684,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1657,
											"end": 1689,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1773,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1654,
											"end": 1773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1692,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1692,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 1692,
											"end": 1771,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1692,
											"end": 1771,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 1692,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1773,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 1654,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1870,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1837,
											"end": 1889,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1837,
											"end": 1889,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 1837,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1889,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1783,
											"end": 1899,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1999,
											"end": 2005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2006,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 1964,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1954,
											"end": 2016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 2033,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2122,
											"end": 2145,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2150,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2115,
											"end": 2234,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2115,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2115,
											"end": 2234,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2153,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2153,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2153,
											"end": 2232,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2153,
											"end": 2232,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2153,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2115,
											"end": 2234,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2115,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2343,
											"end": 2350,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2332,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2319,
											"end": 2341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2298,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2298,
											"end": 2351,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2351,
											"name": "tag",
											"source": 3,
											"value": "236"
										},
										{
											"begin": 2298,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2351,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2361,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2368,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2374,
											"end": 2725,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2374,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2444,
											"end": 2450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2495,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2479,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2491,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2464,
											"end": 2496,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2580,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2461,
											"end": 2580,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2499,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2499,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 2499,
											"end": 2578,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2499,
											"end": 2578,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 2499,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2580,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 2461,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2700,
											"end": 2707,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2680,
											"end": 2689,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2676,
											"end": 2698,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2644,
											"end": 2708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2708,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 2644,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2708,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2634,
											"end": 2708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2590,
											"end": 2718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2725,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2725,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2725,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2731,
											"end": 2849,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 2731,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2818,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 2818,
											"end": 2842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 2842,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 2818,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2816,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2806,
											"end": 2843,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2849,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2849,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2855,
											"end": 3016,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 2855,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 3003,
											"end": 3008,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2957,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2955,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 3010,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2855,
											"end": 3016,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3022,
											"end": 3137,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 3022,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3124,
											"end": 3129,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3102,
											"end": 3105,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3131,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3022,
											"end": 3137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3022,
											"end": 3137,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3022,
											"end": 3137,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3143,
											"end": 3258,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 3143,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3228,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 3228,
											"end": 3251,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3228,
											"end": 3251,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3228,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3223,
											"end": 3226,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3252,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3258,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3264,
											"end": 3630,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 3264,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3406,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 3491,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3486,
											"end": 3489,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3427,
											"end": 3494,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3427,
											"end": 3494,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 3427,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3494,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3420,
											"end": 3494,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3592,
											"end": 3595,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3503,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3503,
											"end": 3596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3503,
											"end": 3596,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3503,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3623,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3605,
											"end": 3624,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3630,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3630,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3636,
											"end": 4002,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 3636,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3863,
											"end": 3865,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3858,
											"end": 3861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3799,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3799,
											"end": 3866,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3799,
											"end": 3866,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 3799,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3866,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 3964,
											"end": 3967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 3875,
											"end": 3968,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3875,
											"end": 3968,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 3875,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 3995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3984,
											"end": 3996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3977,
											"end": 3996,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 4002,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 4002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 4002,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 4002,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4374,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 4008,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4235,
											"end": 4237,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 4230,
											"end": 4233,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4171,
											"end": 4238,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4238,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 4171,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4164,
											"end": 4238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4336,
											"end": 4339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 4247,
											"end": 4340,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4247,
											"end": 4340,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 4247,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4367,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4356,
											"end": 4368,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4374,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4374,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4380,
											"end": 4746,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 4380,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4525,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4607,
											"end": 4609,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4605,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 4610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4543,
											"end": 4610,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4610,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 4543,
											"end": 4610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4610,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4610,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4619,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4708,
											"end": 4711,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4619,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4619,
											"end": 4712,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4619,
											"end": 4712,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 4619,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4732,
											"end": 4735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4728,
											"end": 4740,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4380,
											"end": 4746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4380,
											"end": 4746,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4380,
											"end": 4746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4380,
											"end": 4746,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4857,
											"end": 4862,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 4839,
											"end": 4863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4839,
											"end": 4863,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4839,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4827,
											"end": 4864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4752,
											"end": 4870,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4876,
											"end": 5098,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4876,
											"end": 5098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5009,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5010,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 5010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 5010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 5088,
											"end": 5089,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5064,
											"end": 5070,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 5020,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 5098,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 5098,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 5098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 5098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 5098,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5253,
											"end": 5257,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5280,
											"end": 5289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5294,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5268,
											"end": 5294,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5304,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5361,
											"end": 5370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5357,
											"end": 5374,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5304,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5304,
											"end": 5375,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5304,
											"end": 5375,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 5304,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 5453,
											"end": 5455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5429,
											"end": 5435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5385,
											"end": 5457,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5385,
											"end": 5457,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 5385,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5535,
											"end": 5537,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5520,
											"end": 5538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5511,
											"end": 5517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5467,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 5467,
											"end": 5539,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5467,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 5467,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5104,
											"end": 5546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5713,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5714,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5714,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5724,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5790,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5777,
											"end": 5794,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5768,
											"end": 5774,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5724,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 5724,
											"end": 5795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5724,
											"end": 5795,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 5724,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 5873,
											"end": 5875,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5849,
											"end": 5855,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 5805,
											"end": 5877,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5805,
											"end": 5877,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 5805,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5884,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5890,
											"end": 6142,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5890,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5998,
											"end": 6002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6038,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6021,
											"end": 6039,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6013,
											"end": 6039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6013,
											"end": 6039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6049,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6049,
											"end": 6135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6049,
											"end": 6135,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 6049,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 6142,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 6142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 6142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 6142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5890,
											"end": 6142,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6148,
											"end": 6366,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 6148,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6243,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6275,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6254,
											"end": 6280,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6254,
											"end": 6280,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6345,
											"end": 6354,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6341,
											"end": 6358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6290,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 6290,
											"end": 6359,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6290,
											"end": 6359,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 6290,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6366,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6366,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6366,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6372,
											"end": 6590,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 6372,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6467,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6503,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6486,
											"end": 6504,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6478,
											"end": 6504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6478,
											"end": 6504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 6580,
											"end": 6581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6578,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6565,
											"end": 6582,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6514,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 6514,
											"end": 6583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6514,
											"end": 6583,
											"name": "tag",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 6514,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6590,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6590,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6372,
											"end": 6590,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6596,
											"end": 7015,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6596,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6762,
											"end": 6766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6777,
											"end": 6803,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6849,
											"end": 6858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6843,
											"end": 6847,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6839,
											"end": 6859,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6835,
											"end": 6836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6820,
											"end": 6837,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6860,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 7003,
											"end": 7007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6877,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 6877,
											"end": 7008,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6877,
											"end": 7008,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 6877,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 7008,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6869,
											"end": 7008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 7015,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 7015,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 7015,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7021,
											"end": 7440,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7021,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7187,
											"end": 7191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7214,
											"end": 7223,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7210,
											"end": 7228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7228,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7202,
											"end": 7228,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7274,
											"end": 7283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7268,
											"end": 7272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7264,
											"end": 7284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7258,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7245,
											"end": 7262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7238,
											"end": 7285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 7428,
											"end": 7432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7302,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 7302,
											"end": 7433,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7302,
											"end": 7433,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 7302,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7433,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7433,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7440,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7440,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7440,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7446,
											"end": 7865,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 7446,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7612,
											"end": 7616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7650,
											"end": 7652,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7639,
											"end": 7648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7635,
											"end": 7653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7627,
											"end": 7653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7689,
											"end": 7709,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7686,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7674,
											"end": 7683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7670,
											"end": 7687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7663,
											"end": 7710,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7727,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 7853,
											"end": 7857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7727,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7727,
											"end": 7858,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7727,
											"end": 7858,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 7727,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7446,
											"end": 7865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7446,
											"end": 7865,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7446,
											"end": 7865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7446,
											"end": 7865,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7871,
											"end": 8290,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7871,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8037,
											"end": 8041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8075,
											"end": 8077,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8064,
											"end": 8073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8124,
											"end": 8133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8118,
											"end": 8122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8134,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8110,
											"end": 8111,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8095,
											"end": 8112,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8088,
											"end": 8135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 8278,
											"end": 8282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8152,
											"end": 8283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8152,
											"end": 8283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8152,
											"end": 8283,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 8152,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8144,
											"end": 8283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8144,
											"end": 8283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 8290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 8290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 8290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7871,
											"end": 8290,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8389,
											"end": 8393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8416,
											"end": 8425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8412,
											"end": 8430,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8497,
											"end": 8506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8493,
											"end": 8510,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8484,
											"end": 8490,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 8440,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8296,
											"end": 8518,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8605,
											"end": 8774,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 8605,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8689,
											"end": 8700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8723,
											"end": 8729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8718,
											"end": 8721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8711,
											"end": 8730,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8763,
											"end": 8767,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8761,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8754,
											"end": 8768,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8739,
											"end": 8768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8605,
											"end": 8774,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8605,
											"end": 8774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8605,
											"end": 8774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8605,
											"end": 8774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8605,
											"end": 8774,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8780,
											"end": 9085,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 8780,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8820,
											"end": 8823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 8857,
											"end": 8858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8839,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 8839,
											"end": 8859,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8839,
											"end": 8859,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 8839,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8834,
											"end": 8859,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 8891,
											"end": 8892,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8868,
											"end": 8893,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8868,
											"end": 8893,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9027,
											"end": 9028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8959,
											"end": 9025,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8955,
											"end": 9029,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8949,
											"end": 9030,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 9053,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 8946,
											"end": 9053,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8946,
											"end": 9053,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 8946,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9077,
											"end": 9078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9074,
											"end": 9075,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9070,
											"end": 9079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 9085,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 9085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 9085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 9085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8780,
											"end": 9085,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9091,
											"end": 9476,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9091,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9130,
											"end": 9131,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 9164,
											"end": 9165,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9147,
											"end": 9166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9147,
											"end": 9166,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9147,
											"end": 9166,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 9147,
											"end": 9166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9142,
											"end": 9166,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9142,
											"end": 9166,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9180,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 9197,
											"end": 9198,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9180,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9180,
											"end": 9199,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9180,
											"end": 9199,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 9180,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9175,
											"end": 9199,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9175,
											"end": 9199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9218,
											"end": 9219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 9208,
											"end": 9243,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9223,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 9223,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 9223,
											"end": 9241,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9223,
											"end": 9241,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 9223,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9208,
											"end": 9243,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 9208,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9409,
											"end": 9410,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9406,
											"end": 9407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9396,
											"end": 9412,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9315,
											"end": 9381,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9312,
											"end": 9313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9309,
											"end": 9382,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9292,
											"end": 9422,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9289,
											"end": 9445,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9289,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 9289,
											"end": 9445,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 9425,
											"end": 9443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9289,
											"end": 9445,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 9289,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9468,
											"end": 9469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9465,
											"end": 9466,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9460,
											"end": 9470,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 9455,
											"end": 9470,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9455,
											"end": 9470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9091,
											"end": 9476,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9091,
											"end": 9476,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9091,
											"end": 9476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9091,
											"end": 9476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9091,
											"end": 9476,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9482,
											"end": 9667,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 9482,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9522,
											"end": 9523,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 9539,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9534,
											"end": 9559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9573,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 9591,
											"end": 9592,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9573,
											"end": 9593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 9573,
											"end": 9593,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9573,
											"end": 9593,
											"name": "tag",
											"source": 3,
											"value": "326"
										},
										{
											"begin": 9573,
											"end": 9593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9568,
											"end": 9593,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9568,
											"end": 9593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9612,
											"end": 9613,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9602,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 9602,
											"end": 9637,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9602,
											"end": 9637,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 9602,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9659,
											"end": 9660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9656,
											"end": 9657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9652,
											"end": 9661,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9647,
											"end": 9661,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9647,
											"end": 9661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9482,
											"end": 9667,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9482,
											"end": 9667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9482,
											"end": 9667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9482,
											"end": 9667,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9482,
											"end": 9667,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9673,
											"end": 10664,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 9673,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9712,
											"end": 9719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 9752,
											"end": 9753,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9735,
											"end": 9754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9735,
											"end": 9754,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9735,
											"end": 9754,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 9735,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9730,
											"end": 9754,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9730,
											"end": 9754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9768,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 9785,
											"end": 9786,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9768,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 9768,
											"end": 9787,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9768,
											"end": 9787,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 9768,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9787,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9763,
											"end": 9787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9901,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9897,
											"end": 9971,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9894,
											"end": 9895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9891,
											"end": 9972,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9886,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9884,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9879,
											"end": 9888,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 9875,
											"end": 9876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9873,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9868,
											"end": 9877,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 9864,
											"end": 9889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9860,
											"end": 9973,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9857,
											"end": 9996,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9857,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 9857,
											"end": 9996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9857,
											"end": 9996,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 9857,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10180,
											"end": 10181,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10112,
											"end": 10178,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10107,
											"end": 10182,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 10104,
											"end": 10105,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10100,
											"end": 10183,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10084,
											"end": 10085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10081,
											"end": 10082,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10077,
											"end": 10086,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 10073,
											"end": 10098,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10069,
											"end": 10184,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10066,
											"end": 10207,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10207,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 10066,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10391,
											"end": 10392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10323,
											"end": 10389,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10318,
											"end": 10393,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 10315,
											"end": 10316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10311,
											"end": 10394,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10306,
											"end": 10307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10304,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10308,
											"name": "SGT",
											"source": 3
										},
										{
											"begin": 10295,
											"end": 10296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10288,
											"end": 10297,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10280,
											"end": 10395,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10277,
											"end": 10418,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10277,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 10277,
											"end": 10418,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 10398,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10277,
											"end": 10418,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 10277,
											"end": 10418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10599,
											"name": "PUSH",
											"source": 3,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10528,
											"end": 10603,
											"name": "SDIV",
											"source": 3
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10521,
											"end": 10604,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10505,
											"end": 10506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10502,
											"end": 10503,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10498,
											"end": 10507,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 10494,
											"end": 10519,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10490,
											"end": 10605,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10487,
											"end": 10628,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10487,
											"end": 10628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 10487,
											"end": 10628,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10487,
											"end": 10628,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 10487,
											"end": 10628,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10653,
											"end": 10654,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10649,
											"end": 10658,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10638,
											"end": 10658,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10638,
											"end": 10658,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10664,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9673,
											"end": 10664,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10670,
											"end": 11018,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 10670,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10710,
											"end": 10717,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 10751,
											"end": 10752,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 10733,
											"end": 10753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10728,
											"end": 10753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10728,
											"end": 10753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10767,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10767,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 10767,
											"end": 10787,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10767,
											"end": 10787,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 10767,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10787,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10955,
											"end": 10956,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10887,
											"end": 10953,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10883,
											"end": 10957,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10880,
											"end": 10881,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10877,
											"end": 10958,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10865,
											"end": 10874,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10858,
											"end": 10875,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10959,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10851,
											"end": 10982,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10851,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 10851,
											"end": 10982,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10851,
											"end": 10982,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 10851,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11010,
											"end": 11011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11007,
											"end": 11008,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11003,
											"end": 11012,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 10992,
											"end": 11012,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10992,
											"end": 11012,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11018,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11018,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11018,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 11018,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11024,
											"end": 11215,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11024,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11064,
											"end": 11068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 11102,
											"end": 11103,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11079,
											"end": 11104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 11136,
											"end": 11137,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 11118,
											"end": 11138,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11113,
											"end": 11138,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11113,
											"end": 11138,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11157,
											"end": 11158,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11154,
											"end": 11155,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11151,
											"end": 11159,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11148,
											"end": 11182,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11148,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 11148,
											"end": 11182,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 11162,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11148,
											"end": 11182,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 11148,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11207,
											"end": 11208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11204,
											"end": 11205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11200,
											"end": 11209,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11192,
											"end": 11209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11192,
											"end": 11209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11215,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11215,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11024,
											"end": 11215,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11221,
											"end": 11317,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 11221,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11258,
											"end": 11265,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 11305,
											"end": 11310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11287,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 11287,
											"end": 11311,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11311,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 11287,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11276,
											"end": 11311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11276,
											"end": 11311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11221,
											"end": 11317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11221,
											"end": 11317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11221,
											"end": 11317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11221,
											"end": 11317,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11323,
											"end": 11413,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 11323,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11357,
											"end": 11364,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11400,
											"end": 11405,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11393,
											"end": 11406,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11386,
											"end": 11407,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11375,
											"end": 11407,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11375,
											"end": 11407,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11413,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11413,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11413,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11323,
											"end": 11413,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11419,
											"end": 11511,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 11419,
											"end": 11511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11455,
											"end": 11462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11495,
											"end": 11497,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 11484,
											"end": 11505,
											"name": "SIGNEXTEND",
											"source": 3
										},
										{
											"begin": 11473,
											"end": 11505,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11473,
											"end": 11505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11419,
											"end": 11511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11419,
											"end": 11511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11419,
											"end": 11511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11419,
											"end": 11511,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11517,
											"end": 11593,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 11517,
											"end": 11593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11553,
											"end": 11560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11587,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11571,
											"end": 11587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11571,
											"end": 11587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11517,
											"end": 11593,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11517,
											"end": 11593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11517,
											"end": 11593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11517,
											"end": 11593,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11599,
											"end": 11725,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 11599,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11636,
											"end": 11643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11718,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11669,
											"end": 11674,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11665,
											"end": 11719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11654,
											"end": 11719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11654,
											"end": 11719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11599,
											"end": 11725,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11599,
											"end": 11725,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11599,
											"end": 11725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11599,
											"end": 11725,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11731,
											"end": 11808,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 11731,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11768,
											"end": 11775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11786,
											"end": 11802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11786,
											"end": 11802,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11731,
											"end": 11808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11731,
											"end": 11808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11731,
											"end": 11808,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11731,
											"end": 11808,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11814,
											"end": 11955,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 11814,
											"end": 11955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11879,
											"end": 11888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 11943,
											"end": 11948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11912,
											"end": 11949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 11912,
											"end": 11949,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 11912,
											"end": 11949,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 11912,
											"end": 11949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11899,
											"end": 11949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11899,
											"end": 11949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11814,
											"end": 11955,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11814,
											"end": 11955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11814,
											"end": 11955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11814,
											"end": 11955,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11961,
											"end": 12087,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 11961,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12011,
											"end": 12020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12044,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 12075,
											"end": 12080,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12044,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 12044,
											"end": 12081,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12044,
											"end": 12081,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 12044,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12031,
											"end": 12081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12031,
											"end": 12081,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12087,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11961,
											"end": 12087,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12093,
											"end": 12206,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 12093,
											"end": 12206,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12143,
											"end": 12152,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 12194,
											"end": 12199,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12176,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 12176,
											"end": 12200,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12176,
											"end": 12200,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 12176,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12200,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12163,
											"end": 12200,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12093,
											"end": 12206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12093,
											"end": 12206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12093,
											"end": 12206,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12093,
											"end": 12206,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12212,
											"end": 12443,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 12212,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12250,
											"end": 12253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12273,
											"end": 12296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 12290,
											"end": 12295,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12273,
											"end": 12296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 12273,
											"end": 12296,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12273,
											"end": 12296,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 12273,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12264,
											"end": 12296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12264,
											"end": 12296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12318,
											"end": 12384,
											"name": "PUSH",
											"source": 3,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12311,
											"end": 12316,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12308,
											"end": 12385,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12305,
											"end": 12408,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12305,
											"end": 12408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 12305,
											"end": 12408,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 12388,
											"end": 12406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12305,
											"end": 12408,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 12305,
											"end": 12408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12435,
											"end": 12436,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 12428,
											"end": 12433,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12424,
											"end": 12437,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12417,
											"end": 12437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12417,
											"end": 12437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12212,
											"end": 12443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12212,
											"end": 12443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12212,
											"end": 12443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12212,
											"end": 12443,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12449,
											"end": 12629,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 12449,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12497,
											"end": 12574,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12494,
											"end": 12495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12487,
											"end": 12575,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12594,
											"end": 12598,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 12591,
											"end": 12592,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12584,
											"end": 12599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12618,
											"end": 12622,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12615,
											"end": 12616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12608,
											"end": 12623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12635,
											"end": 12815,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 12635,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12683,
											"end": 12760,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12680,
											"end": 12681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12761,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12780,
											"end": 12784,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 12777,
											"end": 12778,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12770,
											"end": 12785,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12804,
											"end": 12808,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12801,
											"end": 12802,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12809,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12944,
											"end": 13061,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 12944,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13053,
											"end": 13054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13051,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13043,
											"end": 13055,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13067,
											"end": 13238,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 13067,
											"end": 13238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13207,
											"end": 13230,
											"name": "PUSH",
											"source": 3,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13195,
											"end": 13201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13191,
											"end": 13205,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13184,
											"end": 13231,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13067,
											"end": 13238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13067,
											"end": 13238,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13244,
											"end": 13464,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 13244,
											"end": 13464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13384,
											"end": 13418,
											"name": "PUSH",
											"source": 3,
											"value": "5369676E6564536166654D6174683A206469766973696F6E206F766572666C6F"
										},
										{
											"begin": 13380,
											"end": 13381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13372,
											"end": 13378,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13368,
											"end": 13382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13361,
											"end": 13419,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13453,
											"end": 13456,
											"name": "PUSH",
											"source": 3,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13448,
											"end": 13450,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13440,
											"end": 13446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13436,
											"end": 13451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13429,
											"end": 13457,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13244,
											"end": 13464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13244,
											"end": 13464,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13470,
											"end": 13646,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 13470,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13610,
											"end": 13638,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520646F6E742068617665207468617420616D6F756E7421000000000000"
										},
										{
											"begin": 13606,
											"end": 13607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13598,
											"end": 13604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13594,
											"end": 13608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13587,
											"end": 13639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13646,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13470,
											"end": 13646,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13652,
											"end": 13834,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 13652,
											"end": 13834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13792,
											"end": 13826,
											"name": "PUSH",
											"source": 3,
											"value": "5369676E6564536166654D6174683A206469766973696F6E206279207A65726F"
										},
										{
											"begin": 13788,
											"end": 13789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13780,
											"end": 13786,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13776,
											"end": 13790,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13769,
											"end": 13827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13652,
											"end": 13834,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13652,
											"end": 13834,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13840,
											"end": 13962,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 13840,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13913,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 13931,
											"end": 13936,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13913,
											"end": 13937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 13913,
											"end": 13937,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13913,
											"end": 13937,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 13913,
											"end": 13937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13906,
											"end": 13911,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13903,
											"end": 13938,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13893,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 13893,
											"end": 13956,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13952,
											"end": 13953,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13949,
											"end": 13950,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13942,
											"end": 13954,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13893,
											"end": 13956,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 13893,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13962,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13840,
											"end": 13962,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13968,
											"end": 14084,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 13968,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14038,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 14053,
											"end": 14058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14038,
											"end": 14059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 14038,
											"end": 14059,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14038,
											"end": 14059,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 14038,
											"end": 14059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14031,
											"end": 14036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14028,
											"end": 14060,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14018,
											"end": 14078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 14018,
											"end": 14078,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14074,
											"end": 14075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14071,
											"end": 14072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14018,
											"end": 14078,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 14018,
											"end": 14078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13968,
											"end": 14084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13968,
											"end": 14084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14090,
											"end": 14210,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 14090,
											"end": 14210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14162,
											"end": 14185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 14179,
											"end": 14184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14162,
											"end": 14185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 14162,
											"end": 14185,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14162,
											"end": 14185,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 14162,
											"end": 14185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14155,
											"end": 14160,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14152,
											"end": 14186,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14142,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 14142,
											"end": 14204,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14200,
											"end": 14201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14190,
											"end": 14202,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14142,
											"end": 14204,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 14142,
											"end": 14204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14090,
											"end": 14210,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14090,
											"end": 14210,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 14216,
											"end": 14338,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 14216,
											"end": 14338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14289,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 14307,
											"end": 14312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14289,
											"end": 14313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 14289,
											"end": 14313,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 14289,
											"end": 14313,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 14289,
											"end": 14313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14282,
											"end": 14287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14279,
											"end": 14314,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14269,
											"end": 14332,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 14269,
											"end": 14332,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14328,
											"end": 14329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14326,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14318,
											"end": 14330,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14269,
											"end": 14332,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 14269,
											"end": 14332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14216,
											"end": 14338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14216,
											"end": 14338,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyScepter(uint256)": "65819f7e",
							"floorDiv(int256,int256)": "0e8a0f89",
							"getBackingPrice()": "1f564a06",
							"getBuyPrice()": "018a25e8",
							"getSellPrice()": "43d32e9c",
							"growthFactor()": "ee620868",
							"mintBaton(uint256)": "2934b237",
							"mockUSDC()": "ee467678",
							"queryERC20Balance(address,address)": "ee546a51",
							"res()": "6f10e285",
							"sellFactor()": "cbff4617",
							"sellScepter(uint256)": "daa3a4a4",
							"tSC()": "6e05c1b9",
							"testwallet()": "eee05f5e",
							"treasury1Addr()": "fbbb4589",
							"treasury1bal()": "35453307",
							"treasury2Addr()": "dd9b1d97"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"scepterAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"batonAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSCPtoBuy\",\"type\":\"uint256\"}],\"name\":\"buyScepter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"a\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"}],\"name\":\"floorDiv\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBackingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"growthFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintBaton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockUSDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_addressToQuery\",\"type\":\"address\"}],\"name\":\"queryERC20Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"res\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSCPtoSell\",\"type\":\"uint256\"}],\"name\":\"sellScepter\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tSC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testwallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury1Addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury1bal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury2Addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"WandInstruments.sol\":\"WandInstruments\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ABDKMath64x64.sol\":{\"keccak256\":\"0xa777b0eb32eff9e6c118bfb10f2b86bf6835a2bd2e835d914fce3b84ae9ec02d\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://b9f8d13b765225dd13e388205934aae0c3715c6942f24b89ce118039fa8ba929\",\"dweb:/ipfs/QmR2LdqeuiWxi2vkS1PhcE1RbrHEkUXu7uK7dXdNtBWfyH\"]},\"IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"WandInstruments.sol\":{\"keccak256\":\"0x65e7736eaa8a96e05be6c945b13f8a6b7af5c4e10bdbfaad40ae7f6ecb44837b\",\"license\":\"MIT LICENSE\",\"urls\":[\"bzz-raw://d87c69d2a8c15d23ea35c5c25841f891ce2925207cd87c874745cccc2db2ae0c\",\"dweb:/ipfs/QmZn83LxutUf4jnFfNTGwBEYZJGjHqFco3yVubcCChbEA1\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> WandInstruments.sol:195:23:\n    |\n195 |     function floorDiv(int256 a, int256 b) public returns (int256) {\n    |                       ^^^^^^^^\nNote: The shadowed declaration is here:\n   --> WandInstruments.sol:118:5:\n    |\n118 |     uint256 private a = 9;\n    |     ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 3451,
						"file": "WandInstruments.sol",
						"message": "The shadowed declaration is here:",
						"start": 3430
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 6536,
					"file": "WandInstruments.sol",
					"start": 6528
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> WandInstruments.sol:195:33:\n    |\n195 |     function floorDiv(int256 a, int256 b) public returns (int256) {\n    |                                 ^^^^^^^^\nNote: The shadowed declaration is here:\n   --> WandInstruments.sol:130:5:\n    |\n130 |     Baton private b;\n    |     ^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 3806,
						"file": "WandInstruments.sol",
						"message": "The shadowed declaration is here:",
						"start": 3791
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 6546,
					"file": "WandInstruments.sol",
					"start": 6538
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> WandInstruments.sol:195:5:\n    |\n195 |     function floorDiv(int256 a, int256 b) public returns (int256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 6676,
					"file": "WandInstruments.sol",
					"start": 6510
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ABDKMath64x64.sol": {
				"ast": {
					"absolutePath": "ABDKMath64x64.sol",
					"exportedSymbols": {
						"ABDKMath64x64": [
							2813
						]
					},
					"id": 2814,
					"license": "BSD-4-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "196:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "223:456:0",
								"text": " Smart contract library of mathematical functions operating with signed\n 64.64-bit fixed point numbers.  Signed 64.64-bit fixed point number is\n basically a simple fraction whose numerator is signed 128-bit integer and\n denominator is 2^64.  As long as denominator is always the same, there is no\n need to store it, thus in Solidity signed 64.64-bit fixed point numbers are\n represented by int128 type holding only the numerator."
							},
							"fullyImplemented": true,
							"id": 2813,
							"linearizedBaseContracts": [
								2813
							],
							"name": "ABDKMath64x64",
							"nameLocation": "689:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 6,
									"mutability": "constant",
									"name": "MIN_64x64",
									"nameLocation": "812:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2813,
									"src": "788:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int128",
										"typeString": "int128"
									},
									"typeName": {
										"id": 3,
										"name": "int128",
										"nodeType": "ElementaryTypeName",
										"src": "788:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										}
									},
									"value": {
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "824:35:0",
										"subExpression": {
											"hexValue": "30783830303030303030303030303030303030303030303030303030303030303030",
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "825:34:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
												"typeString": "int_const 1701...(31 digits omitted)...5728"
											},
											"value": "0x80000000000000000000000000000000"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_170141183460469231731687303715884105728_by_1",
											"typeString": "int_const -170...(32 digits omitted)...5728"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "MAX_64x64",
									"nameLocation": "970:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2813,
									"src": "946:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int128",
										"typeString": "int128"
									},
									"typeName": {
										"id": 7,
										"name": "int128",
										"nodeType": "ElementaryTypeName",
										"src": "946:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										}
									},
									"value": {
										"hexValue": "30783746464646464646464646464646464646464646464646464646464646464646",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "982:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_170141183460469231731687303715884105727_by_1",
											"typeString": "int_const 1701...(31 digits omitted)...5727"
										},
										"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1310:132:0",
										"statements": [
											{
												"id": 35,
												"nodeType": "UncheckedBlock",
												"src": "1317:120:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 25,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 21,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 18,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1345:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 20,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "1350:19:0",
																			"subExpression": {
																				"hexValue": "307838303030303030303030303030303030",
																				"id": 19,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1351:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_9223372036854775808_by_1",
																					"typeString": "int_const 9223372036854775808"
																				},
																				"value": "0x8000000000000000"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_9223372036854775808_by_1",
																				"typeString": "int_const -9223372036854775808"
																			}
																		},
																		"src": "1345:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 22,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1373:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "307837464646464646464646464646464646",
																			"id": 23,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1378:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_9223372036854775807_by_1",
																				"typeString": "int_const 9223372036854775807"
																			},
																			"value": "0x7FFFFFFFFFFFFFFF"
																		},
																		"src": "1373:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1345:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 17,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1336:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1336:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 27,
														"nodeType": "ExpressionStatement",
														"src": "1336:61:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 30,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "1421:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"hexValue": "3634",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1426:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "1421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1413:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 28,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "1413:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1413:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 16,
														"id": 34,
														"nodeType": "Return",
														"src": "1406:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "1023:224:0",
										"text": " Convert signed 256-bit integer number into signed 64.64-bit fixed point\n number.  Revert on overflow.\n @param x signed 256-bit integer number\n @return signed 64.64-bit fixed point number"
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromInt",
									"nameLocation": "1260:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1276:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1269:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 11,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1269:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:10:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1302:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 14,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1301:8:0"
									},
									"scope": 2813,
									"src": "1251:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1719:61:0",
										"statements": [
											{
												"id": 52,
												"nodeType": "UncheckedBlock",
												"src": "1726:49:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 47,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "1759:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "3634",
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1764:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	"src": "1759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																],
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1752:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int64_$",
																	"typeString": "type(int64)"
																},
																"typeName": {
																	"id": 45,
																	"name": "int64",
																	"nodeType": "ElementaryTypeName",
																	"src": "1752:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1752:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int64",
																"typeString": "int64"
															}
														},
														"functionReturnParameters": 44,
														"id": 51,
														"nodeType": "Return",
														"src": "1745:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1448:211:0",
										"text": " Convert signed 64.64 fixed point number into signed 64-bit integer number\n rounding down.\n @param x signed 64.64-bit fixed point number\n @return signed 64-bit integer number"
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt",
									"nameLocation": "1672:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1686:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1679:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 39,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "1679:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1678:10:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1712:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 42,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "1712:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:7:0"
									},
									"scope": 2813,
									"src": "1663:117:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2079:113:0",
										"statements": [
											{
												"id": 78,
												"nodeType": "UncheckedBlock",
												"src": "2086:101:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 63,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "2114:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "307837464646464646464646464646464646",
																		"id": 64,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_9223372036854775807_by_1",
																			"typeString": "int_const 9223372036854775807"
																		},
																		"value": "0x7FFFFFFFFFFFFFFF"
																	},
																	"src": "2114:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 62,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2105:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2105:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 67,
														"nodeType": "ExpressionStatement",
														"src": "2105:33:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 74,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 72,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 57,
																				"src": "2170:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 73,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2175:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "2170:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2162:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 70,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2162:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2162:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 68,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 61,
														"id": 77,
														"nodeType": "Return",
														"src": "2147:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1786:228:0",
										"text": " Convert unsigned 256-bit integer number into signed 64.64-bit fixed point\n number.  Revert on overflow.\n @param x unsigned 256-bit integer number\n @return signed 64.64-bit fixed point number"
									},
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromUInt",
									"nameLocation": "2027:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2045:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2037:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:11:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2071:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 59,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2071:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2070:8:0"
									},
									"scope": 2813,
									"src": "2018:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "2497:97:0",
										"statements": [
											{
												"id": 104,
												"nodeType": "UncheckedBlock",
												"src": "2504:85:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 89,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "2532:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2537:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2532:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 88,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2523:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 93,
														"nodeType": "ExpressionStatement",
														"src": "2523:16:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			},
																			"id": 100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 98,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "2572:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2577:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "2572:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2563:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 96,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2563:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2563:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2555:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint64_$",
																	"typeString": "type(uint64)"
																},
																"typeName": {
																	"id": 94,
																	"name": "uint64",
																	"nodeType": "ElementaryTypeName",
																	"src": "2555:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2555:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"functionReturnParameters": 87,
														"id": 103,
														"nodeType": "Return",
														"src": "2548:33:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2198:237:0",
										"text": " Convert signed 64.64 fixed point number into unsigned 64-bit integer\n number rounding down.  Revert on underflow.\n @param x signed 64.64-bit fixed point number\n @return unsigned 64-bit integer number"
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUInt",
									"nameLocation": "2448:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2463:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2456:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 82,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2456:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2455:10:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2489:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 85,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2489:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:8:0"
									},
									"scope": 2813,
									"src": "2439:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "2917:154:0",
										"statements": [
											{
												"id": 135,
												"nodeType": "UncheckedBlock",
												"src": "2924:142:0",
												"statements": [
													{
														"assignments": [
															115
														],
														"declarations": [
															{
																"constant": false,
																"id": 115,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "2950:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 135,
																"src": "2943:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 114,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2943:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 119,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "3634",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2964:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "2959:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2943:23:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 121,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "2984:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 122,
																			"name": "MIN_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "2994:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "2984:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 115,
																			"src": "3007:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 125,
																			"name": "MAX_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "3017:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "3007:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2984:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 120,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2975:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 129,
														"nodeType": "ExpressionStatement",
														"src": "2975:52:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 132,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "3051:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3043:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 130,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "3043:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3043:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 113,
														"id": 134,
														"nodeType": "Return",
														"src": "3036:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2600:250:0",
										"text": " Convert signed 128.128 fixed point number into signed 64.64-bit fixed point\n number rounding down.  Revert on overflow.\n @param x signed 128.128-bin fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "from128x128",
									"nameLocation": "2863:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2883:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2876:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 108,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:10:0"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2909:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 111,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "2909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2908:8:0"
									},
									"scope": 2813,
									"src": "2854:217:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "3349:62:0",
										"statements": [
											{
												"id": 152,
												"nodeType": "UncheckedBlock",
												"src": "3356:50:0",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 147,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 140,
																		"src": "3390:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	],
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3382:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 145,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3382:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3382:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3634",
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3396:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "3382:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"functionReturnParameters": 144,
														"id": 151,
														"nodeType": "Return",
														"src": "3375:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "3077:207:0",
										"text": " Convert signed 64.64 fixed point number into signed 128.128 fixed point\n number.\n @param x signed 64.64-bit fixed point number\n @return signed 128.128 fixed point number"
									},
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "to128x128",
									"nameLocation": "3297:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3315:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3308:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 139,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "3308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3307:10:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "3341:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 142,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3340:8:0"
									},
									"scope": 2813,
									"src": "3288:123:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3698:160:0",
										"statements": [
											{
												"id": 188,
												"nodeType": "UncheckedBlock",
												"src": "3705:148:0",
												"statements": [
													{
														"assignments": [
															165
														],
														"declarations": [
															{
																"constant": false,
																"id": 165,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "3731:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 188,
																"src": "3724:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 164,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3724:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 172,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 168,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "3747:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	],
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3740:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 166,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3740:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3740:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 170,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "3752:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"src": "3740:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3724:29:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 174,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "3771:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 175,
																			"name": "MIN_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "3781:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "3771:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 177,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "3794:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 178,
																			"name": "MAX_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "3804:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "3794:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3771:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 173,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3762:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3762:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 182,
														"nodeType": "ExpressionStatement",
														"src": "3762:52:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 185,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "3838:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3830:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 183,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "3830:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3830:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 163,
														"id": 187,
														"nodeType": "Return",
														"src": "3823:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "3417:212:0",
										"text": " Calculate x + y.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "3642:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3654:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3647:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 156,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "3647:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3657:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 158,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "3657:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:20:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3690:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 161,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "3690:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3689:8:0"
									},
									"scope": 2813,
									"src": "3633:225:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "4145:160:0",
										"statements": [
											{
												"id": 224,
												"nodeType": "UncheckedBlock",
												"src": "4152:148:0",
												"statements": [
													{
														"assignments": [
															201
														],
														"declarations": [
															{
																"constant": false,
																"id": 201,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "4178:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 224,
																"src": "4171:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 200,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 208,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 204,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "4194:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	],
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4187:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 202,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4187:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4187:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 206,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "4199:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"src": "4187:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:29:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 210,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "4218:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 211,
																			"name": "MIN_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "4228:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "4218:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 213,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "4241:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 214,
																			"name": "MAX_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "4251:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "4241:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4218:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 209,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4209:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4209:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 218,
														"nodeType": "ExpressionStatement",
														"src": "4209:52:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 221,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "4285:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4277:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 219,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "4277:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4277:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 199,
														"id": 223,
														"nodeType": "Return",
														"src": "4270:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3864:212:0",
										"text": " Calculate x - y.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4089:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4101:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4094:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 192,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4094:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4111:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4104:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 194,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:20:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4137:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 197,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4136:8:0"
									},
									"scope": 2813,
									"src": "4080:225:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "4606:166:0",
										"statements": [
											{
												"id": 262,
												"nodeType": "UncheckedBlock",
												"src": "4613:154:0",
												"statements": [
													{
														"assignments": [
															237
														],
														"declarations": [
															{
																"constant": false,
																"id": 237,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "4639:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 262,
																"src": "4632:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 236,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4632:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 246,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 240,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 229,
																			"src": "4655:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		],
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4648:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 238,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4648:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4648:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 242,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "4660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"src": "4648:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "3634",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4665:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "4648:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4632:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 248,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "4685:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 249,
																			"name": "MIN_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "4695:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "4685:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 251,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "4708:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 252,
																			"name": "MAX_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "4718:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "4708:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4685:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4676:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4676:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 256,
														"nodeType": "ExpressionStatement",
														"src": "4676:52:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 259,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "4752:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4744:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 257,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "4744:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4744:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 235,
														"id": 261,
														"nodeType": "Return",
														"src": "4737:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "4311:226:0",
										"text": " Calculate x * y rounding down.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "4550:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4562:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4555:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 228,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4555:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4572:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4565:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 230,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:20:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4598:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 233,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4598:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:8:0"
									},
									"scope": 2813,
									"src": "4541:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "5155:997:0",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "5162:985:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 274,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "5185:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 275,
																"name": "MIN_64x64",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "5190:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"src": "5185:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 364,
															"nodeType": "Block",
															"src": "5391:749:0",
															"statements": [
																{
																	"assignments": [
																		295
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 295,
																			"mutability": "mutable",
																			"name": "negativeResult",
																			"nameLocation": "5407:14:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 364,
																			"src": "5402:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"typeName": {
																				"id": 294,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "5402:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 297,
																	"initialValue": {
																		"hexValue": "66616c7365",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5424:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5402:27:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 298,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 267,
																			"src": "5444:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5448:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5444:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 311,
																	"nodeType": "IfStatement",
																	"src": "5440:76:0",
																	"trueBody": {
																		"id": 310,
																		"nodeType": "Block",
																		"src": "5451:65:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 304,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 301,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 267,
																						"src": "5464:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "-",
																						"prefix": true,
																						"src": "5468:2:0",
																						"subExpression": {
																							"id": 302,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 267,
																							"src": "5469:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					},
																					"src": "5464:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				},
																				"id": 305,
																				"nodeType": "ExpressionStatement",
																				"src": "5464:6:0"
																			},
																			{
																				"expression": {
																					"id": 308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 306,
																						"name": "negativeResult",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 295,
																						"src": "5483:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "74727565",
																						"id": 307,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5500:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					},
																					"src": "5483:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 309,
																				"nodeType": "ExpressionStatement",
																				"src": "5483:21:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 312,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "5530:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5534:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5530:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 326,
																	"nodeType": "IfStatement",
																	"src": "5526:124:0",
																	"trueBody": {
																		"id": 325,
																		"nodeType": "Block",
																		"src": "5537:113:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 318,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 315,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 269,
																						"src": "5550:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 317,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "-",
																						"prefix": true,
																						"src": "5554:2:0",
																						"subExpression": {
																							"id": 316,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 269,
																							"src": "5555:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "5550:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"id": 319,
																				"nodeType": "ExpressionStatement",
																				"src": "5550:6:0"
																			},
																			{
																				"expression": {
																					"id": 323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 320,
																						"name": "negativeResult",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 295,
																						"src": "5606:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "5623:15:0",
																						"subExpression": {
																							"id": 321,
																							"name": "negativeResult",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 295,
																							"src": "5624:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "5606:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 324,
																				"nodeType": "ExpressionStatement",
																				"src": "5606:32:0"
																			}
																		]
																	}
																},
																{
																	"assignments": [
																		328
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 328,
																			"mutability": "mutable",
																			"name": "absoluteResult",
																			"nameLocation": "5668:14:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 364,
																			"src": "5660:22:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 327,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5660:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 336,
																	"initialValue": {
																		"arguments": [
																			{
																				"id": 330,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "5691:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 333,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 269,
																						"src": "5703:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5694:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 331,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "5694:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 334,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5694:11:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 329,
																			"name": "mulu",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "5685:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_int128_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (int128,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5685:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5660:46:0"
																},
																{
																	"condition": {
																		"id": 337,
																		"name": "negativeResult",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "5721:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 362,
																		"nodeType": "Block",
																		"src": "5956:175:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 354,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 352,
																								"name": "absoluteResult",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 328,
																								"src": "5978:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"hexValue": "307837464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
																								"id": 353,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6009:66:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																									"typeString": "int_const 5789...(69 digits omitted)...9967"
																								},
																								"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																							},
																							"src": "5978:97:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 351,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "5969:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5969:107:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 356,
																				"nodeType": "ExpressionStatement",
																				"src": "5969:107:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 359,
																							"name": "absoluteResult",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 328,
																							"src": "6104:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 358,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6096:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						},
																						"typeName": {
																							"id": 357,
																							"name": "int256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6096:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 360,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6096:23:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"functionReturnParameters": 273,
																				"id": 361,
																				"nodeType": "Return",
																				"src": "6089:30:0"
																			}
																		]
																	},
																	"id": 363,
																	"nodeType": "IfStatement",
																	"src": "5717:414:0",
																	"trueBody": {
																		"id": 350,
																		"nodeType": "Block",
																		"src": "5737:213:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 341,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 339,
																								"name": "absoluteResult",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 328,
																								"src": "5759:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"hexValue": "307838303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
																								"id": 340,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5790:66:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																									"typeString": "int_const 5789...(69 digits omitted)...9968"
																								},
																								"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																							},
																							"src": "5759:97:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 338,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "5750:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 342,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5750:107:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 343,
																				"nodeType": "ExpressionStatement",
																				"src": "5750:107:0"
																			},
																			{
																				"expression": {
																					"id": 348,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "-",
																					"prefix": true,
																					"src": "5877:24:0",
																					"subExpression": {
																						"arguments": [
																							{
																								"id": 346,
																								"name": "absoluteResult",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 328,
																								"src": "5886:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 345,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5878:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 344,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "5878:6:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5878:23:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"functionReturnParameters": 273,
																				"id": 349,
																				"nodeType": "Return",
																				"src": "5870:31:0"
																			}
																		]
																	}
																}
															]
														},
														"id": 365,
														"nodeType": "IfStatement",
														"src": "5181:959:0",
														"trueBody": {
															"id": 293,
															"nodeType": "Block",
															"src": "5201:184:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 281,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 278,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 269,
																						"src": "5221:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"id": 280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "-",
																						"prefix": true,
																						"src": "5226:51:0",
																						"subExpression": {
																							"hexValue": "3078464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
																							"id": 279,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5227:50:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
																								"typeString": "int_const 6277...(50 digits omitted)...2895"
																							},
																							"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_minus_6277101735386680763835789423207666416102355444464034512895_by_1",
																							"typeString": "int_const -627...(51 digits omitted)...2895"
																						}
																					},
																					"src": "5221:56:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 284,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 282,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 269,
																						"src": "5292:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"hexValue": "307831303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
																						"id": 283,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5297:51:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																							"typeString": "int_const 6277...(50 digits omitted)...2896"
																						},
																						"value": "0x1000000000000000000000000000000000000000000000000"
																					},
																					"src": "5292:56:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "5221:127:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 277,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "5212:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5212:137:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 287,
																	"nodeType": "ExpressionStatement",
																	"src": "5212:137:0"
																},
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "5367:2:0",
																			"subExpression": {
																				"id": 288,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 269,
																				"src": "5368:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3633",
																			"id": 290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5373:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_63_by_1",
																				"typeString": "int_const 63"
																			},
																			"value": "63"
																		},
																		"src": "5367:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"functionReturnParameters": 273,
																	"id": 292,
																	"nodeType": "Return",
																	"src": "5360:15:0"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "4778:307:0",
										"text": " Calculate x * y rounding towards zero, where x is signed 64.64 fixed point\n number and y is signed 256-bit integer number.  Revert on overflow.\n @param x signed 64.64 fixed point number\n @param y signed 256-bit integer number\n @return signed 256-bit integer number"
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "muli",
									"nameLocation": "5098:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5111:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5104:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 266,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "5104:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5121:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5114:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 268,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5114:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5103:20:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "5147:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 271,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5147:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5146:8:0"
									},
									"scope": 2813,
									"src": "5089:1063:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "6535:461:0",
										"statements": [
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "6542:449:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 378,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "6565:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6570:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 383,
														"nodeType": "IfStatement",
														"src": "6561:20:0",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6580:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 377,
															"id": 382,
															"nodeType": "Return",
															"src": "6573:8:0"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 385,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "6601:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6606:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6601:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 384,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6592:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6592:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 389,
														"nodeType": "ExpressionStatement",
														"src": "6592:16:0"
													},
													{
														"assignments": [
															391
														],
														"declarations": [
															{
																"constant": false,
																"id": 391,
																"mutability": "mutable",
																"name": "lo",
																"nameLocation": "6627:2:0",
																"nodeType": "VariableDeclaration",
																"scope": 445,
																"src": "6619:10:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 390,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6619:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 407,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 396,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 371,
																							"src": "6650:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						],
																						"id": 395,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6642:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						},
																						"typeName": {
																							"id": 394,
																							"name": "int256",
																							"nodeType": "ElementaryTypeName",
																							"src": "6642:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 397,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6642:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6633:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 392,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "6633:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6633:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 401,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 399,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 373,
																						"src": "6657:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"hexValue": "30784646464646464646464646464646464646464646464646464646464646464646",
																						"id": 400,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6661:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1455"
																						},
																						"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																					},
																					"src": "6657:38:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 402,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6656:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6633:63:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 404,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6632:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "3634",
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6701:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "6632:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6619:84:0"
													},
													{
														"assignments": [
															409
														],
														"declarations": [
															{
																"constant": false,
																"id": 409,
																"mutability": "mutable",
																"name": "hi",
																"nameLocation": "6720:2:0",
																"nodeType": "VariableDeclaration",
																"scope": 445,
																"src": "6712:10:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 408,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6712:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 422,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 414,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "6742:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6734:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 412,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6734:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6734:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6725:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 410,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6725:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6725:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 417,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 373,
																			"src": "6749:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6754:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "6749:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 420,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6748:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6725:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6712:46:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 424,
																		"name": "hi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6778:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "3078464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6784:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
																			"typeString": "int_const 6277...(50 digits omitted)...2895"
																		},
																		"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																	},
																	"src": "6778:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 423,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6769:66:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 428,
														"nodeType": "ExpressionStatement",
														"src": "6769:66:0"
													},
													{
														"expression": {
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 429,
																"name": "hi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "6844:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "<<=",
															"rightHandSide": {
																"hexValue": "3634",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6851:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "6844:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 432,
														"nodeType": "ExpressionStatement",
														"src": "6844:9:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 434,
																		"name": "hi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6873:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
																			"id": 435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6888:66:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																				"typeString": "int_const 1157...(70 digits omitted)...9935"
																			},
																			"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 436,
																			"name": "lo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "6957:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6888:71:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6873:86:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 433,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6864:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6864:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 440,
														"nodeType": "ExpressionStatement",
														"src": "6864:96:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 441,
																"name": "hi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "6976:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 442,
																"name": "lo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "6981:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 377,
														"id": 444,
														"nodeType": "Return",
														"src": "6969:14:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "6158:305:0",
										"text": " Calculate x * y rounding down, where x is signed 64.64 fixed point number\n and y is unsigned 256-bit integer number.  Revert on overflow.\n @param x signed 64.64 fixed point number\n @param y unsigned 256-bit integer number\n @return unsigned 256-bit integer number"
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulu",
									"nameLocation": "6476:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6489:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6482:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 370,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "6482:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6500:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6492:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6481:21:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "6526:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6525:9:0"
									},
									"scope": 2813,
									"src": "6467:529:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "7329:194:0",
										"statements": [
											{
												"id": 490,
												"nodeType": "UncheckedBlock",
												"src": "7336:182:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 458,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "7364:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7369:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7364:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 457,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "7355:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7355:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 462,
														"nodeType": "ExpressionStatement",
														"src": "7355:16:0"
													},
													{
														"assignments": [
															464
														],
														"declarations": [
															{
																"constant": false,
																"id": 464,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "7387:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 490,
																"src": "7380:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 463,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7380:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 474,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 467,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 450,
																					"src": "7405:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				],
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7397:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 465,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7397:6:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7397:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7411:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "7397:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 471,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7396:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 472,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "7417:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"src": "7396:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7380:38:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 476,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "7436:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 477,
																			"name": "MIN_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "7446:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "7436:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 479,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 464,
																			"src": "7459:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 480,
																			"name": "MAX_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "7469:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "7459:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "7436:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 475,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "7427:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7427:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 484,
														"nodeType": "ExpressionStatement",
														"src": "7427:52:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 487,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "7503:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7495:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 485,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "7495:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7495:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 456,
														"id": 489,
														"nodeType": "Return",
														"src": "7488:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "7002:258:0",
										"text": " Calculate x / y rounding towards zero.  Revert on overflow or when y is\n zero.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "7273:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7285:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7278:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 449,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "7278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7295:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7288:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 451,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "7288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7277:20:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7321:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 454,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "7321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7320:8:0"
									},
									"scope": 2813,
									"src": "7264:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "7895:757:0",
										"statements": [
											{
												"id": 581,
												"nodeType": "UncheckedBlock",
												"src": "7902:745:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 503,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "7930:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7935:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7930:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 502,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "7921:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7921:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 507,
														"nodeType": "ExpressionStatement",
														"src": "7921:16:0"
													},
													{
														"assignments": [
															509
														],
														"declarations": [
															{
																"constant": false,
																"id": 509,
																"mutability": "mutable",
																"name": "negativeResult",
																"nameLocation": "7953:14:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "7948:19:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 508,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "7948:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 511,
														"initialValue": {
															"hexValue": "66616c7365",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7948:27:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 512,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "7988:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30",
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7992:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7988:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 525,
														"nodeType": "IfStatement",
														"src": "7984:107:0",
														"trueBody": {
															"id": 524,
															"nodeType": "Block",
															"src": "7995:96:0",
															"statements": [
																{
																	"expression": {
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 515,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "8006:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "8010:2:0",
																			"subExpression": {
																				"id": 516,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "8011:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "8006:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 519,
																	"nodeType": "ExpressionStatement",
																	"src": "8006:6:0"
																},
																{
																	"expression": {
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 520,
																			"name": "negativeResult",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "8060:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "74727565",
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8077:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "8060:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 523,
																	"nodeType": "ExpressionStatement",
																	"src": "8060:21:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "8103:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "30",
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8107:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 540,
														"nodeType": "IfStatement",
														"src": "8099:118:0",
														"trueBody": {
															"id": 539,
															"nodeType": "Block",
															"src": "8110:107:0",
															"statements": [
																{
																	"expression": {
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 529,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "8121:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "8125:2:0",
																			"subExpression": {
																				"id": 530,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "8126:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "8121:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 533,
																	"nodeType": "ExpressionStatement",
																	"src": "8121:6:0"
																},
																{
																	"expression": {
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 534,
																			"name": "negativeResult",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 509,
																			"src": "8175:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "8192:15:0",
																			"subExpression": {
																				"id": 535,
																				"name": "negativeResult",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 509,
																				"src": "8193:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "8175:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 538,
																	"nodeType": "ExpressionStatement",
																	"src": "8175:32:0"
																}
															]
														}
													},
													{
														"assignments": [
															542
														],
														"declarations": [
															{
																"constant": false,
																"id": 542,
																"mutability": "mutable",
																"name": "absoluteResult",
																"nameLocation": "8233:14:0",
																"nodeType": "VariableDeclaration",
																"scope": 581,
																"src": "8225:22:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"typeName": {
																	"id": 541,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "8225:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 553,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 546,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "8266:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8257:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 544,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8257:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8257:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 550,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "8279:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8270:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 548,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8270:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8270:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 543,
																"name": "divuu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "8250:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
																	"typeString": "function (uint256,uint256) pure returns (uint128)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8250:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8225:57:0"
													},
													{
														"condition": {
															"id": 554,
															"name": "negativeResult",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "8295:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 579,
															"nodeType": "Block",
															"src": "8479:161:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				"id": 571,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 569,
																					"name": "absoluteResult",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 542,
																					"src": "8499:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "30783746464646464646464646464646464646464646464646464646464646464646",
																					"id": 570,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8517:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_170141183460469231731687303715884105727_by_1",
																						"typeString": "int_const 1701...(31 digits omitted)...5727"
																					},
																					"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																				},
																				"src": "8499:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 568,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "8490:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8490:62:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 573,
																	"nodeType": "ExpressionStatement",
																	"src": "8490:62:0"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 576,
																				"name": "absoluteResult",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 542,
																				"src": "8578:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8570:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int128_$",
																				"typeString": "type(int128)"
																			},
																			"typeName": {
																				"id": 574,
																				"name": "int128",
																				"nodeType": "ElementaryTypeName",
																				"src": "8570:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8570:23:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"functionReturnParameters": 501,
																	"id": 578,
																	"nodeType": "Return",
																	"src": "8563:30:0"
																}
															]
														},
														"id": 580,
														"nodeType": "IfStatement",
														"src": "8291:349:0",
														"trueBody": {
															"id": 567,
															"nodeType": "Block",
															"src": "8311:162:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 556,
																					"name": "absoluteResult",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 542,
																					"src": "8331:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "30783830303030303030303030303030303030303030303030303030303030303030",
																					"id": 557,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8349:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																						"typeString": "int_const 1701...(31 digits omitted)...5728"
																					},
																					"value": "0x80000000000000000000000000000000"
																				},
																				"src": "8331:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 555,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "8322:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8322:62:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 560,
																	"nodeType": "ExpressionStatement",
																	"src": "8322:62:0"
																},
																{
																	"expression": {
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "8402:24:0",
																		"subExpression": {
																			"arguments": [
																				{
																					"id": 563,
																					"name": "absoluteResult",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 542,
																					"src": "8411:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8403:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 561,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "8403:6:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8403:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"functionReturnParameters": 501,
																	"id": 566,
																	"nodeType": "Return",
																	"src": "8395:31:0"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "7529:296:0",
										"text": " Calculate x / y rounding towards zero, where x and y are signed 256-bit\n integer numbers.  Revert on overflow or when y is zero.\n @param x signed 256-bit integer number\n @param y signed 256-bit integer number\n @return signed 64.64-bit fixed point number"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divi",
									"nameLocation": "7838:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7851:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "7844:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 494,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7861:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "7854:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 496,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7854:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7843:20:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "7887:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 499,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "7887:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7886:8:0"
									},
									"scope": 2813,
									"src": "7829:823:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "9032:172:0",
										"statements": [
											{
												"id": 620,
												"nodeType": "UncheckedBlock",
												"src": "9039:160:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "9067:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9072:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9067:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 593,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "9058:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9058:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 598,
														"nodeType": "ExpressionStatement",
														"src": "9058:16:0"
													},
													{
														"assignments": [
															600
														],
														"declarations": [
															{
																"constant": false,
																"id": 600,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9091:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 620,
																"src": "9083:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																"typeName": {
																	"id": 599,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "9083:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 605,
														"initialValue": {
															"arguments": [
																{
																	"id": 602,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "9107:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 603,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "9110:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 601,
																"name": "divuu",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "9100:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint128_$",
																	"typeString": "function (uint256,uint256) pure returns (uint128)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9100:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9083:29:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 607,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "9130:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 610,
																				"name": "MAX_64x64",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "9149:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9140:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 608,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "9140:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9140:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "9130:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 606,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "9121:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9121:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 614,
														"nodeType": "ExpressionStatement",
														"src": "9121:39:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 617,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "9184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																],
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9176:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 615,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "9176:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9176:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 592,
														"id": 619,
														"nodeType": "Return",
														"src": "9169:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "8658:302:0",
										"text": " Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\n integer numbers.  Revert on overflow or when y is zero.\n @param x unsigned 256-bit integer number\n @param y unsigned 256-bit integer number\n @return signed 64.64-bit fixed point number"
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divu",
									"nameLocation": "8973:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8987:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "8979:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8998:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "8990:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8978:22:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "9024:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 590,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9024:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9023:8:0"
									},
									"scope": 2813,
									"src": "8964:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "9427:81:0",
										"statements": [
											{
												"id": 639,
												"nodeType": "UncheckedBlock",
												"src": "9434:69:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 631,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9462:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 632,
																		"name": "MIN_64x64",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "9467:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"src": "9462:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 630,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "9453:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9453:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 635,
														"nodeType": "ExpressionStatement",
														"src": "9453:24:0"
													},
													{
														"expression": {
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "-",
															"prefix": true,
															"src": "9493:2:0",
															"subExpression": {
																"id": 636,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "9494:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 629,
														"id": 638,
														"nodeType": "Return",
														"src": "9486:9:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "9210:158:0",
										"text": " Calculate -x.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "neg",
									"nameLocation": "9381:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9393:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9386:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 624,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9385:10:0"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "9419:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 627,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9419:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9418:8:0"
									},
									"scope": 2813,
									"src": "9372:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "9732:93:0",
										"statements": [
											{
												"id": 663,
												"nodeType": "UncheckedBlock",
												"src": "9739:81:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 650,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 644,
																		"src": "9767:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 651,
																		"name": "MIN_64x64",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "9772:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"src": "9767:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 649,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "9758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9758:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 654,
														"nodeType": "ExpressionStatement",
														"src": "9758:24:0"
													},
													{
														"expression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "9798:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9802:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9798:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 660,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "9811:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "9798:14:0",
															"trueExpression": {
																"id": 659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "9806:2:0",
																"subExpression": {
																	"id": 658,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "9807:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 648,
														"id": 662,
														"nodeType": "Return",
														"src": "9791:21:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "9514:159:0",
										"text": " Calculate |x|.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "9686:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9698:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "9691:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 643,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9691:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9690:10:0"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "9724:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 646,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "9724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9723:8:0"
									},
									"scope": 2813,
									"src": "9677:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "10097:220:0",
										"statements": [
											{
												"id": 703,
												"nodeType": "UncheckedBlock",
												"src": "10104:208:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 674,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "10132:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10137:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10132:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 673,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "10123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10123:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 678,
														"nodeType": "ExpressionStatement",
														"src": "10123:16:0"
													},
													{
														"assignments": [
															680
														],
														"declarations": [
															{
																"constant": false,
																"id": 680,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10155:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 703,
																"src": "10148:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 679,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10148:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 687,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10172:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"value": "0x100000000000000000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	],
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 681,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10164:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10164:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 685,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "10211:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"src": "10164:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10148:64:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "10230:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 690,
																			"name": "MIN_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "10240:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "10230:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 692,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "10253:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 693,
																			"name": "MAX_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "10263:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "10253:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "10230:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 688,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "10221:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10221:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 697,
														"nodeType": "ExpressionStatement",
														"src": "10221:52:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 700,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 680,
																	"src": "10297:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10289:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 698,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "10289:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10289:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 672,
														"id": 702,
														"nodeType": "Return",
														"src": "10282:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "9831:207:0",
										"text": " Calculate 1 / x rounding towards zero.  Revert on overflow or when x is\n zero.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "inv",
									"nameLocation": "10051:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "10063:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "10056:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 667,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10055:10:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "10089:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 670,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10089:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10088:8:0"
									},
									"scope": 2813,
									"src": "10042:275:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "10640:85:0",
										"statements": [
											{
												"id": 731,
												"nodeType": "UncheckedBlock",
												"src": "10647:73:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 719,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 708,
																							"src": "10690:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						],
																						"id": 718,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10682:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						},
																						"typeName": {
																							"id": 717,
																							"name": "int256",
																							"nodeType": "ElementaryTypeName",
																							"src": "10682:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10682:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"arguments": [
																						{
																							"id": 723,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 710,
																							"src": "10703:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						],
																						"id": 722,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "10695:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						},
																						"typeName": {
																							"id": 721,
																							"name": "int256",
																							"nodeType": "ElementaryTypeName",
																							"src": "10695:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 724,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10695:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "10682:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "10681:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10710:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10681:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10673:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 715,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "10673:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10673:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 714,
														"id": 730,
														"nodeType": "Return",
														"src": "10666:46:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "10323:248:0",
										"text": " Calculate arithmetics average of x and y, i.e. (x + y) / 2 rounding down.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "avg",
									"nameLocation": "10584:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "10596:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "10589:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 707,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "10606:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "10599:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 709,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10599:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10588:20:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "10632:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 712,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "10632:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10631:8:0"
									},
									"scope": 2813,
									"src": "10575:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "11103:242:0",
										"statements": [
											{
												"id": 777,
												"nodeType": "UncheckedBlock",
												"src": "11110:230:0",
												"statements": [
													{
														"assignments": [
															744
														],
														"declarations": [
															{
																"constant": false,
																"id": 744,
																"mutability": "mutable",
																"name": "m",
																"nameLocation": "11136:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 777,
																"src": "11129:8:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 743,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11129:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 754,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 747,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 736,
																		"src": "11148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	],
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11140:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 745,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11140:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11140:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 751,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "11161:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11153:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 749,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11153:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11153:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "11140:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11129:34:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 756,
																		"name": "m",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "11181:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11186:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11181:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 755,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "11172:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11172:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 760,
														"nodeType": "ExpressionStatement",
														"src": "11172:16:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 762,
																		"name": "m",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "11206:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "307834303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030",
																		"id": 763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11221:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_28948022309329048855892746252171976963317496166410141009864396001978282409984_by_1",
																			"typeString": "int_const 2894...(69 digits omitted)...9984"
																		},
																		"value": "0x4000000000000000000000000000000000000000000000000000000000000000"
																	},
																	"src": "11206:81:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 761,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "11197:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11197:91:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 766,
														"nodeType": "ExpressionStatement",
														"src": "11197:91:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 772,
																					"name": "m",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 744,
																					"src": "11328:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11319:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 770,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11319:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11319:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 769,
																		"name": "sqrtu",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2812,
																		"src": "11312:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint256) pure returns (uint128)"
																		}
																	},
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11312:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																],
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11304:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 767,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "11304:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11304:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 742,
														"id": 776,
														"nodeType": "Return",
														"src": "11297:35:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "10731:302:0",
										"text": " Calculate geometric average of x and y, i.e. sqrt (x * y) rounding down.\n Revert on overflow or in case x * y is negative.\n @param x signed 64.64-bit fixed point number\n @param y signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "gavg",
									"nameLocation": "11046:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11059:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "11052:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 735,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "11052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11069:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "11062:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 737,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "11062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11051:20:0"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "11095:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 740,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "11095:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11094:8:0"
									},
									"scope": 2813,
									"src": "11037:308:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "11718:2335:0",
										"statements": [
											{
												"id": 1135,
												"nodeType": "UncheckedBlock",
												"src": "11725:2323:0",
												"statements": [
													{
														"assignments": [
															790
														],
														"declarations": [
															{
																"constant": false,
																"id": 790,
																"mutability": "mutable",
																"name": "negative",
																"nameLocation": "11749:8:0",
																"nodeType": "VariableDeclaration",
																"scope": 1135,
																"src": "11744:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 789,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "11744:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 800,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 791,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "11760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11760:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "11769:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11773:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11769:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11778:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11769:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11760:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11744:35:0"
													},
													{
														"assignments": [
															802
														],
														"declarations": [
															{
																"constant": false,
																"id": 802,
																"mutability": "mutable",
																"name": "absX",
																"nameLocation": "11798:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 1135,
																"src": "11790:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 801,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11790:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 813,
														"initialValue": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 805,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "11814:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11818:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11814:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 810,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "11827:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11814:14:0",
																	"trueExpression": {
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "11822:2:0",
																		"subExpression": {
																			"id": 808,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "11823:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11805:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint128_$",
																	"typeString": "type(uint128)"
																},
																"typeName": {
																	"id": 803,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "11805:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11805:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11790:39:0"
													},
													{
														"assignments": [
															815
														],
														"declarations": [
															{
																"constant": false,
																"id": 815,
																"mutability": "mutable",
																"name": "absResult",
																"nameLocation": "11846:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 1135,
																"src": "11838:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 814,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11838:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 816,
														"nodeType": "VariableDeclarationStatement",
														"src": "11838:17:0"
													},
													{
														"expression": {
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 817,
																"name": "absResult",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "11864:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11876:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"value": "0x100000000000000000000000000000000"
															},
															"src": "11864:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 820,
														"nodeType": "ExpressionStatement",
														"src": "11864:47:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 821,
																"name": "absX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "11926:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "30783130303030303030303030303030303030",
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11934:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"value": "0x10000000000000000"
															},
															"src": "11926:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1104,
															"nodeType": "Block",
															"src": "12615:1258:0",
															"statements": [
																{
																	"assignments": [
																		935
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 935,
																			"mutability": "mutable",
																			"name": "absXShift",
																			"nameLocation": "12634:9:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1104,
																			"src": "12626:17:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 934,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "12626:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 937,
																	"initialValue": {
																		"hexValue": "3633",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12646:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_63_by_1",
																			"typeString": "int_const 63"
																		},
																		"value": "63"
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "12626:22:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 938,
																			"name": "absX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "12663:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "307831303030303030303030303030303030303030303030303030",
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12670:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
																				"typeString": "int_const 79228162514264337593543950336"
																			},
																			"value": "0x1000000000000000000000000"
																		},
																		"src": "12663:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 950,
																	"nodeType": "IfStatement",
																	"src": "12659:73:0",
																	"trueBody": {
																		"id": 949,
																		"nodeType": "Block",
																		"src": "12699:33:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 943,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 941,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12701:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "3332",
																						"id": 942,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12710:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"src": "12701:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 944,
																				"nodeType": "ExpressionStatement",
																				"src": "12701:11:0"
																			},
																			{
																				"expression": {
																					"id": 947,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 945,
																						"name": "absXShift",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 935,
																						"src": "12714:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"hexValue": "3332",
																						"id": 946,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12727:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"src": "12714:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 948,
																				"nodeType": "ExpressionStatement",
																				"src": "12714:15:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 951,
																			"name": "absX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "12746:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30783130303030303030303030303030303030303030303030303030303030",
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12753:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5192296858534827628530496329220096_by_1",
																				"typeString": "int_const 5192...(26 digits omitted)...0096"
																			},
																			"value": "0x10000000000000000000000000000"
																		},
																		"src": "12746:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 963,
																	"nodeType": "IfStatement",
																	"src": "12742:77:0",
																	"trueBody": {
																		"id": 962,
																		"nodeType": "Block",
																		"src": "12786:33:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 956,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 954,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12788:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "3136",
																						"id": 955,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12797:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_16_by_1",
																							"typeString": "int_const 16"
																						},
																						"value": "16"
																					},
																					"src": "12788:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 957,
																				"nodeType": "ExpressionStatement",
																				"src": "12788:11:0"
																			},
																			{
																				"expression": {
																					"id": 960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 958,
																						"name": "absXShift",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 935,
																						"src": "12801:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"hexValue": "3136",
																						"id": 959,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12814:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_16_by_1",
																							"typeString": "int_const 16"
																						},
																						"value": "16"
																					},
																					"src": "12801:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 961,
																				"nodeType": "ExpressionStatement",
																				"src": "12801:15:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 964,
																			"name": "absX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "12833:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "307831303030303030303030303030303030303030303030303030303030303030",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12840:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1329227995784915872903807060280344576_by_1",
																				"typeString": "int_const 1329...(29 digits omitted)...4576"
																			},
																			"value": "0x1000000000000000000000000000000"
																		},
																		"src": "12833:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 976,
																	"nodeType": "IfStatement",
																	"src": "12829:77:0",
																	"trueBody": {
																		"id": 975,
																		"nodeType": "Block",
																		"src": "12875:31:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 967,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12877:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "38",
																						"id": 968,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12886:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "12877:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 970,
																				"nodeType": "ExpressionStatement",
																				"src": "12877:10:0"
																			},
																			{
																				"expression": {
																					"id": 973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 971,
																						"name": "absXShift",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 935,
																						"src": "12889:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"hexValue": "38",
																						"id": 972,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12902:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "12889:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 974,
																				"nodeType": "ExpressionStatement",
																				"src": "12889:14:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 977,
																			"name": "absX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "12920:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30783130303030303030303030303030303030303030303030303030303030303030",
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12927:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_21267647932558653966460912964485513216_by_1",
																				"typeString": "int_const 2126...(30 digits omitted)...3216"
																			},
																			"value": "0x10000000000000000000000000000000"
																		},
																		"src": "12920:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 989,
																	"nodeType": "IfStatement",
																	"src": "12916:78:0",
																	"trueBody": {
																		"id": 988,
																		"nodeType": "Block",
																		"src": "12963:31:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 980,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12965:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "34",
																						"id": 981,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12974:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					},
																					"src": "12965:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 983,
																				"nodeType": "ExpressionStatement",
																				"src": "12965:10:0"
																			},
																			{
																				"expression": {
																					"id": 986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 984,
																						"name": "absXShift",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 935,
																						"src": "12977:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"hexValue": "34",
																						"id": 985,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12990:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					},
																					"src": "12977:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 987,
																				"nodeType": "ExpressionStatement",
																				"src": "12977:14:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 990,
																			"name": "absX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "13008:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30783430303030303030303030303030303030303030303030303030303030303030",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13015:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_85070591730234615865843651857942052864_by_1",
																				"typeString": "int_const 8507...(30 digits omitted)...2864"
																			},
																			"value": "0x40000000000000000000000000000000"
																		},
																		"src": "13008:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1002,
																	"nodeType": "IfStatement",
																	"src": "13004:78:0",
																	"trueBody": {
																		"id": 1001,
																		"nodeType": "Block",
																		"src": "13051:31:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 995,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 993,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "13053:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "32",
																						"id": 994,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13062:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "13053:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 996,
																				"nodeType": "ExpressionStatement",
																				"src": "13053:10:0"
																			},
																			{
																				"expression": {
																					"id": 999,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 997,
																						"name": "absXShift",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 935,
																						"src": "13065:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"hexValue": "32",
																						"id": 998,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13078:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "13065:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1000,
																				"nodeType": "ExpressionStatement",
																				"src": "13065:14:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1003,
																			"name": "absX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "13096:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30783830303030303030303030303030303030303030303030303030303030303030",
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13103:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																				"typeString": "int_const 1701...(31 digits omitted)...5728"
																			},
																			"value": "0x80000000000000000000000000000000"
																		},
																		"src": "13096:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1015,
																	"nodeType": "IfStatement",
																	"src": "13092:78:0",
																	"trueBody": {
																		"id": 1014,
																		"nodeType": "Block",
																		"src": "13139:31:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 1008,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1006,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "13141:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 1007,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13150:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "13141:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1009,
																				"nodeType": "ExpressionStatement",
																				"src": "13141:10:0"
																			},
																			{
																				"expression": {
																					"id": 1012,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1010,
																						"name": "absXShift",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 935,
																						"src": "13153:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 1011,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13166:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "13153:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1013,
																				"nodeType": "ExpressionStatement",
																				"src": "13153:14:0"
																			}
																		]
																	}
																},
																{
																	"assignments": [
																		1017
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1017,
																			"mutability": "mutable",
																			"name": "resultShift",
																			"nameLocation": "13190:11:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1104,
																			"src": "13182:19:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1016,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "13182:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1019,
																	"initialValue": {
																		"hexValue": "30",
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13204:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "13182:23:0"
																},
																{
																	"body": {
																		"id": 1090,
																		"nodeType": "Block",
																		"src": "13231:553:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1026,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1024,
																								"name": "absXShift",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 935,
																								"src": "13253:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 1025,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13265:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "13253:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 1023,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "13244:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 1027,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13244:24:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1028,
																				"nodeType": "ExpressionStatement",
																				"src": "13244:24:0"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1031,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1029,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 784,
																							"src": "13287:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307831",
																							"id": 1030,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13291:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "0x1"
																						},
																						"src": "13287:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1032,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13298:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13287:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1060,
																				"nodeType": "IfStatement",
																				"src": "13283:269:0",
																				"trueBody": {
																					"id": 1059,
																					"nodeType": "Block",
																					"src": "13301:251:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1040,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1034,
																									"name": "absResult",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 815,
																									"src": "13316:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1039,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1037,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 1035,
																											"name": "absResult",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 815,
																											"src": "13328:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"id": 1036,
																											"name": "absX",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 802,
																											"src": "13340:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "13328:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"hexValue": "313237",
																										"id": 1038,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13348:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_127_by_1",
																											"typeString": "int_const 127"
																										},
																										"value": "127"
																									},
																									"src": "13328:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13316:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1041,
																							"nodeType": "ExpressionStatement",
																							"src": "13316:35:0"
																						},
																						{
																							"expression": {
																								"id": 1044,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1042,
																									"name": "resultShift",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1017,
																									"src": "13366:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "+=",
																								"rightHandSide": {
																									"id": 1043,
																									"name": "absXShift",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 935,
																									"src": "13381:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "13366:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1045,
																							"nodeType": "ExpressionStatement",
																							"src": "13366:24:0"
																						},
																						{
																							"condition": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1048,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1046,
																									"name": "absResult",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 815,
																									"src": "13409:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">",
																								"rightExpression": {
																									"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																									"id": 1047,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13421:35:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																										"typeString": "int_const 3402...(31 digits omitted)...1456"
																									},
																									"value": "0x100000000000000000000000000000000"
																								},
																								"src": "13409:47:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"id": 1058,
																							"nodeType": "IfStatement",
																							"src": "13405:134:0",
																							"trueBody": {
																								"id": 1057,
																								"nodeType": "Block",
																								"src": "13458:81:0",
																								"statements": [
																									{
																										"expression": {
																											"id": 1051,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"id": 1049,
																												"name": "absResult",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 815,
																												"src": "13475:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": ">>=",
																											"rightHandSide": {
																												"hexValue": "31",
																												"id": 1050,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "13489:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "13475:15:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1052,
																										"nodeType": "ExpressionStatement",
																										"src": "13475:15:0"
																									},
																									{
																										"expression": {
																											"id": 1055,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"id": 1053,
																												"name": "resultShift",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1017,
																												"src": "13507:11:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "+=",
																											"rightHandSide": {
																												"hexValue": "31",
																												"id": 1054,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "13522:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "13507:16:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1056,
																										"nodeType": "ExpressionStatement",
																										"src": "13507:16:0"
																									}
																								]
																							}
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 1067,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1061,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "13564:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1066,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1064,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1062,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "13571:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1063,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "13578:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "13571:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"hexValue": "313237",
																							"id": 1065,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13586:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_127_by_1",
																								"typeString": "int_const 127"
																							},
																							"value": "127"
																						},
																						"src": "13571:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13564:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1068,
																				"nodeType": "ExpressionStatement",
																				"src": "13564:25:0"
																			},
																			{
																				"expression": {
																					"id": 1071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1069,
																						"name": "absXShift",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 935,
																						"src": "13602:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 1070,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13616:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "13602:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1072,
																				"nodeType": "ExpressionStatement",
																				"src": "13602:15:0"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1075,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1073,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "13634:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																						"id": 1074,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13642:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1456"
																						},
																						"value": "0x100000000000000000000000000000000"
																					},
																					"src": "13634:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1085,
																				"nodeType": "IfStatement",
																				"src": "13630:121:0",
																				"trueBody": {
																					"id": 1084,
																					"nodeType": "Block",
																					"src": "13679:72:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 1078,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1076,
																									"name": "absX",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 802,
																									"src": "13696:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": ">>=",
																								"rightHandSide": {
																									"hexValue": "31",
																									"id": 1077,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13705:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "13696:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1079,
																							"nodeType": "ExpressionStatement",
																							"src": "13696:10:0"
																						},
																						{
																							"expression": {
																								"id": 1082,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 1080,
																									"name": "absXShift",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 935,
																									"src": "13723:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "+=",
																								"rightHandSide": {
																									"hexValue": "31",
																									"id": 1081,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "13736:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "13723:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1083,
																							"nodeType": "ExpressionStatement",
																							"src": "13723:14:0"
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 1088,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1086,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 784,
																						"src": "13765:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 1087,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13771:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "13765:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1089,
																				"nodeType": "ExpressionStatement",
																				"src": "13765:7:0"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1020,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "13223:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13228:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "13223:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1091,
																	"nodeType": "WhileStatement",
																	"src": "13216:568:0"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1095,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1093,
																					"name": "resultShift",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "13805:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"hexValue": "3634",
																					"id": 1094,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13819:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_64_by_1",
																						"typeString": "int_const 64"
																					},
																					"value": "64"
																				},
																				"src": "13805:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1092,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "13796:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13796:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1097,
																	"nodeType": "ExpressionStatement",
																	"src": "13796:26:0"
																},
																{
																	"expression": {
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1098,
																			"name": "absResult",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "13833:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3634",
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13847:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1100,
																				"name": "resultShift",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1017,
																				"src": "13852:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13847:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13833:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1103,
																	"nodeType": "ExpressionStatement",
																	"src": "13833:30:0"
																}
															]
														},
														"id": 1105,
														"nodeType": "IfStatement",
														"src": "11922:1951:0",
														"trueBody": {
															"id": 933,
															"nodeType": "Block",
															"src": "11955:654:0",
															"statements": [
																{
																	"expression": {
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 824,
																			"name": "absX",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "11966:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3633",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11975:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_63_by_1",
																				"typeString": "int_const 63"
																			},
																			"value": "63"
																		},
																		"src": "11966:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 827,
																	"nodeType": "ExpressionStatement",
																	"src": "11966:11:0"
																},
																{
																	"body": {
																		"id": 927,
																		"nodeType": "Block",
																		"src": "12003:568:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 835,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 833,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 831,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 784,
																							"src": "12020:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307831",
																							"id": 832,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12024:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "0x1"
																						},
																						"src": "12020:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 834,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12031:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12020:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 845,
																				"nodeType": "IfStatement",
																				"src": "12016:82:0",
																				"trueBody": {
																					"id": 844,
																					"nodeType": "Block",
																					"src": "12034:64:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 842,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 836,
																									"name": "absResult",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 815,
																									"src": "12049:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 841,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 839,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 837,
																											"name": "absResult",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 815,
																											"src": "12061:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"id": 838,
																											"name": "absX",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 802,
																											"src": "12073:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "12061:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"hexValue": "313237",
																										"id": 840,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12081:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_127_by_1",
																											"typeString": "int_const 127"
																										},
																										"value": "127"
																									},
																									"src": "12061:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12049:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 843,
																							"nodeType": "ExpressionStatement",
																							"src": "12049:35:0"
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 846,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12110:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 851,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 849,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 847,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12117:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 848,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12124:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12117:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"hexValue": "313237",
																							"id": 850,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12132:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_127_by_1",
																								"typeString": "int_const 127"
																							},
																							"value": "127"
																						},
																						"src": "12117:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12110:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 853,
																				"nodeType": "ExpressionStatement",
																				"src": "12110:25:0"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 856,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 854,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 784,
																							"src": "12154:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307832",
																							"id": 855,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12158:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "0x2"
																						},
																						"src": "12154:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 857,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12165:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12154:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 868,
																				"nodeType": "IfStatement",
																				"src": "12150:82:0",
																				"trueBody": {
																					"id": 867,
																					"nodeType": "Block",
																					"src": "12168:64:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 865,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 859,
																									"name": "absResult",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 815,
																									"src": "12183:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 864,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 862,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 860,
																											"name": "absResult",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 815,
																											"src": "12195:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"id": 861,
																											"name": "absX",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 802,
																											"src": "12207:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "12195:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"hexValue": "313237",
																										"id": 863,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12215:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_127_by_1",
																											"typeString": "int_const 127"
																										},
																										"value": "127"
																									},
																									"src": "12195:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12183:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 866,
																							"nodeType": "ExpressionStatement",
																							"src": "12183:35:0"
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 875,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 869,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12244:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 872,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 870,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12251:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 871,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12258:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12251:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"hexValue": "313237",
																							"id": 873,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12266:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_127_by_1",
																								"typeString": "int_const 127"
																							},
																							"value": "127"
																						},
																						"src": "12251:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12244:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 876,
																				"nodeType": "ExpressionStatement",
																				"src": "12244:25:0"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 881,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 879,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 877,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 784,
																							"src": "12288:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307834",
																							"id": 878,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12292:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "0x4"
																						},
																						"src": "12288:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 880,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12299:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12288:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 891,
																				"nodeType": "IfStatement",
																				"src": "12284:82:0",
																				"trueBody": {
																					"id": 890,
																					"nodeType": "Block",
																					"src": "12302:64:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 888,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 882,
																									"name": "absResult",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 815,
																									"src": "12317:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 887,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 885,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 883,
																											"name": "absResult",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 815,
																											"src": "12329:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"id": 884,
																											"name": "absX",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 802,
																											"src": "12341:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "12329:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"hexValue": "313237",
																										"id": 886,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12349:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_127_by_1",
																											"typeString": "int_const 127"
																										},
																										"value": "127"
																									},
																									"src": "12329:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12317:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 889,
																							"nodeType": "ExpressionStatement",
																							"src": "12317:35:0"
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 898,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 892,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12378:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 897,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 895,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 893,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12385:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 894,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12392:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12385:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"hexValue": "313237",
																							"id": 896,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12400:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_127_by_1",
																								"typeString": "int_const 127"
																							},
																							"value": "127"
																						},
																						"src": "12385:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12378:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 899,
																				"nodeType": "ExpressionStatement",
																				"src": "12378:25:0"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 904,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 902,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 900,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 784,
																							"src": "12422:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307838",
																							"id": 901,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12426:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "0x8"
																						},
																						"src": "12422:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 903,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12433:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12422:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 914,
																				"nodeType": "IfStatement",
																				"src": "12418:82:0",
																				"trueBody": {
																					"id": 913,
																					"nodeType": "Block",
																					"src": "12436:64:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 911,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 905,
																									"name": "absResult",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 815,
																									"src": "12451:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 910,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 908,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 906,
																											"name": "absResult",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 815,
																											"src": "12463:9:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"id": 907,
																											"name": "absX",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 802,
																											"src": "12475:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "12463:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"hexValue": "313237",
																										"id": 909,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12483:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_127_by_1",
																											"typeString": "int_const 127"
																										},
																										"value": "127"
																									},
																									"src": "12463:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "12451:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 912,
																							"nodeType": "ExpressionStatement",
																							"src": "12451:35:0"
																						}
																					]
																				}
																			},
																			{
																				"expression": {
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 915,
																						"name": "absX",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 802,
																						"src": "12512:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 920,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 918,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 916,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12519:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 917,
																								"name": "absX",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 802,
																								"src": "12526:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12519:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"hexValue": "313237",
																							"id": 919,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12534:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_127_by_1",
																								"typeString": "int_const 127"
																							},
																							"value": "127"
																						},
																						"src": "12519:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12512:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 922,
																				"nodeType": "ExpressionStatement",
																				"src": "12512:25:0"
																			},
																			{
																				"expression": {
																					"id": 925,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 923,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 784,
																						"src": "12552:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "34",
																						"id": 924,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12558:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					},
																					"src": "12552:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 926,
																				"nodeType": "ExpressionStatement",
																				"src": "12552:7:0"
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 828,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "11995:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12000:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11995:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 928,
																	"nodeType": "WhileStatement",
																	"src": "11988:583:0"
																},
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "absResult",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "12583:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12597:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12583:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "12583:16:0"
																}
															]
														}
													},
													{
														"assignments": [
															1107
														],
														"declarations": [
															{
																"constant": false,
																"id": 1107,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13888:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1135,
																"src": "13881:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1106,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13881:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1119,
														"initialValue": {
															"condition": {
																"id": 1108,
																"name": "negative",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "13897:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"arguments": [
																	{
																		"id": 1116,
																		"name": "absResult",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "13938:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13930:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1114,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "13930:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13930:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "13897:51:0",
															"trueExpression": {
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "13908:19:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1111,
																			"name": "absResult",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "13917:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13909:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1109,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13909:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13909:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13881:67:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1121,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "13966:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1122,
																			"name": "MIN_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "13976:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "13966:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "13989:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1125,
																			"name": "MAX_64x64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 9,
																			"src": "13999:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "13989:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "13966:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1120,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "13957:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13957:52:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1129,
														"nodeType": "ExpressionStatement",
														"src": "13957:52:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1132,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "14033:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14025:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "14025:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14025:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 788,
														"id": 1134,
														"nodeType": "Return",
														"src": "14018:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "11351:297:0",
										"text": " Calculate x^y assuming 0^0 is 1, where x is signed 64.64 fixed point number\n and y is unsigned 256-bit integer number.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @param y uint256 value\n @return signed 64.64-bit fixed point number"
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pow",
									"nameLocation": "11661:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11673:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "11666:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 781,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "11666:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11684:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "11676:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11665:21:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "11710:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 786,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "11710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11709:8:0"
									},
									"scope": 2813,
									"src": "11652:2401:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "14294:114:0",
										"statements": [
											{
												"id": 1166,
												"nodeType": "UncheckedBlock",
												"src": "14301:102:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1146,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "14329:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14334:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14329:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1145,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "14320:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14320:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1150,
														"nodeType": "ExpressionStatement",
														"src": "14320:16:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1158,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1140,
																								"src": "14384:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int128",
																									"typeString": "int128"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_int128",
																									"typeString": "int128"
																								}
																							],
																							"id": 1157,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "14376:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int256_$",
																								"typeString": "type(int256)"
																							},
																							"typeName": {
																								"id": 1156,
																								"name": "int256",
																								"nodeType": "ElementaryTypeName",
																								"src": "14376:6:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "14376:10:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "14367:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1154,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "14367:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14367:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14391:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "14367:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1153,
																		"name": "sqrtu",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2812,
																		"src": "14360:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint256) pure returns (uint128)"
																		}
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14360:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																],
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14352:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 1151,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "14352:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14352:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 1144,
														"id": 1165,
														"nodeType": "Return",
														"src": "14345:50:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "14059:175:0",
										"text": " Calculate sqrt (x) rounding down.  Revert if x < 0.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "14247:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "14260:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "14253:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1139,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "14253:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14252:10:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "14286:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1142,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "14286:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14285:8:0"
									},
									"scope": 2813,
									"src": "14238:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "14650:806:0",
										"statements": [
											{
												"id": 1344,
												"nodeType": "UncheckedBlock",
												"src": "14657:794:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1177,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "14685:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14689:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14685:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1176,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "14676:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14676:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1181,
														"nodeType": "ExpressionStatement",
														"src": "14676:15:0"
													},
													{
														"assignments": [
															1183
														],
														"declarations": [
															{
																"constant": false,
																"id": 1183,
																"mutability": "mutable",
																"name": "msb",
																"nameLocation": "14709:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1344,
																"src": "14702:10:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1182,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14702:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1185,
														"initialValue": {
															"hexValue": "30",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14715:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14702:14:0"
													},
													{
														"assignments": [
															1187
														],
														"declarations": [
															{
																"constant": false,
																"id": 1187,
																"mutability": "mutable",
																"name": "xc",
																"nameLocation": "14732:2:0",
																"nodeType": "VariableDeclaration",
																"scope": 1344,
																"src": "14725:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1186,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14725:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1189,
														"initialValue": {
															"id": 1188,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "14737:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14725:13:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1190,
																"name": "xc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "14751:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30783130303030303030303030303030303030",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14757:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"value": "0x10000000000000000"
															},
															"src": "14751:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1202,
														"nodeType": "IfStatement",
														"src": "14747:56:0",
														"trueBody": {
															"id": 1201,
															"nodeType": "Block",
															"src": "14778:25:0",
															"statements": [
																{
																	"expression": {
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1193,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "14780:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14787:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14780:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1196,
																	"nodeType": "ExpressionStatement",
																	"src": "14780:9:0"
																},
																{
																	"expression": {
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1197,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "14791:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14798:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14791:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1200,
																	"nodeType": "ExpressionStatement",
																	"src": "14791:9:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "xc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "14815:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3078313030303030303030",
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14821:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"value": "0x100000000"
															},
															"src": "14815:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1215,
														"nodeType": "IfStatement",
														"src": "14811:48:0",
														"trueBody": {
															"id": 1214,
															"nodeType": "Block",
															"src": "14834:25:0",
															"statements": [
																{
																	"expression": {
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1206,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "14836:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14843:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14836:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1209,
																	"nodeType": "ExpressionStatement",
																	"src": "14836:9:0"
																},
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "14847:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14854:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14847:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "14847:9:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "xc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "14871:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30783130303030",
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14877:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"value": "0x10000"
															},
															"src": "14871:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1228,
														"nodeType": "IfStatement",
														"src": "14867:44:0",
														"trueBody": {
															"id": 1227,
															"nodeType": "Block",
															"src": "14886:25:0",
															"statements": [
																{
																	"expression": {
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1219,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "14888:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14895:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14888:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1222,
																	"nodeType": "ExpressionStatement",
																	"src": "14888:9:0"
																},
																{
																	"expression": {
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1223,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "14899:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14906:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14899:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1226,
																	"nodeType": "ExpressionStatement",
																	"src": "14899:9:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1229,
																"name": "xc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "14923:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3078313030",
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14929:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"value": "0x100"
															},
															"src": "14923:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1241,
														"nodeType": "IfStatement",
														"src": "14919:40:0",
														"trueBody": {
															"id": 1240,
															"nodeType": "Block",
															"src": "14936:23:0",
															"statements": [
																{
																	"expression": {
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1232,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "14938:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14945:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14938:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1235,
																	"nodeType": "ExpressionStatement",
																	"src": "14938:8:0"
																},
																{
																	"expression": {
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1236,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "14948:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14955:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14948:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1239,
																	"nodeType": "ExpressionStatement",
																	"src": "14948:8:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1242,
																"name": "xc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "14971:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30783130",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14977:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"value": "0x10"
															},
															"src": "14971:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1254,
														"nodeType": "IfStatement",
														"src": "14967:39:0",
														"trueBody": {
															"id": 1253,
															"nodeType": "Block",
															"src": "14983:23:0",
															"statements": [
																{
																	"expression": {
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1245,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "14985:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14992:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14985:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1248,
																	"nodeType": "ExpressionStatement",
																	"src": "14985:8:0"
																},
																{
																	"expression": {
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1249,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "14995:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15002:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14995:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1252,
																	"nodeType": "ExpressionStatement",
																	"src": "14995:8:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1255,
																"name": "xc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "15018:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "307834",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15024:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "0x4"
															},
															"src": "15018:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1267,
														"nodeType": "IfStatement",
														"src": "15014:38:0",
														"trueBody": {
															"id": 1266,
															"nodeType": "Block",
															"src": "15029:23:0",
															"statements": [
																{
																	"expression": {
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1258,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "15031:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15038:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "15031:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1261,
																	"nodeType": "ExpressionStatement",
																	"src": "15031:8:0"
																},
																{
																	"expression": {
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1262,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "15041:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "15041:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1265,
																	"nodeType": "ExpressionStatement",
																	"src": "15041:8:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1268,
																"name": "xc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "15064:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "307832",
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15070:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "0x2"
															},
															"src": "15064:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1275,
														"nodeType": "IfStatement",
														"src": "15060:23:0",
														"trueBody": {
															"expression": {
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1271,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "15075:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15082:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "15075:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1274,
															"nodeType": "ExpressionStatement",
															"src": "15075:8:0"
														}
													},
													{
														"assignments": [
															1277
														],
														"declarations": [
															{
																"constant": false,
																"id": 1277,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15133:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1344,
																"src": "15126:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1276,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1283,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1278,
																	"name": "msb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "15142:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15148:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "15142:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"hexValue": "3634",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15154:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_64_by_1",
																	"typeString": "int_const 64"
																},
																"value": "64"
															},
															"src": "15142:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15126:30:0"
													},
													{
														"assignments": [
															1285
														],
														"declarations": [
															{
																"constant": false,
																"id": 1285,
																"mutability": "mutable",
																"name": "ux",
																"nameLocation": "15173:2:0",
																"nodeType": "VariableDeclaration",
																"scope": 1344,
																"src": "15165:10:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1284,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1300,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1290,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1171,
																				"src": "15195:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15187:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 1288,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15187:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15187:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15178:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1286,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15178:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15178:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15211:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1296,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "15217:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "15211:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15202:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1293,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15202:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15202:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15178:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15165:56:0"
													},
													{
														"body": {
															"id": 1337,
															"nodeType": "Block",
															"src": "15288:123:0",
															"statements": [
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "ux",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "15299:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"id": 1313,
																			"name": "ux",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "15305:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15299:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "15299:8:0"
																},
																{
																	"assignments": [
																		1317
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1317,
																			"mutability": "mutable",
																			"name": "b",
																			"nameLocation": "15326:1:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 1337,
																			"src": "15318:9:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1316,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "15318:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1321,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1318,
																			"name": "ux",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "15330:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15336:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "15330:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "15318:21:0"
																},
																{
																	"expression": {
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1322,
																			"name": "ux",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "15350:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313237",
																				"id": 1323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15357:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_127_by_1",
																					"typeString": "int_const 127"
																				},
																				"value": "127"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1324,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1317,
																				"src": "15363:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15357:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15350:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1327,
																	"nodeType": "ExpressionStatement",
																	"src": "15350:14:0"
																},
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1328,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "15375:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1329,
																				"name": "bit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1302,
																				"src": "15385:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1332,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1317,
																						"src": "15399:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1331,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "15391:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 1330,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "15391:6:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15391:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "15385:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"src": "15375:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "15375:26:0"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1305,
																"name": "bit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "15268:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15268:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"initializationExpression": {
															"assignments": [
																1302
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1302,
																	"mutability": "mutable",
																	"name": "bit",
																	"nameLocation": "15242:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1338,
																	"src": "15235:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 1301,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15235:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1304,
															"initialValue": {
																"hexValue": "307838303030303030303030303030303030",
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15248:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_9223372036854775808_by_1",
																	"typeString": "int_const 9223372036854775808"
																},
																"value": "0x8000000000000000"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15235:31:0"
														},
														"loopExpression": {
															"expression": {
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1308,
																	"name": "bit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "15277:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15285:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "15277:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 1311,
															"nodeType": "ExpressionStatement",
															"src": "15277:9:0"
														},
														"nodeType": "ForStatement",
														"src": "15230:181:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1341,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "15436:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15428:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "15428:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15428:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 1175,
														"id": 1343,
														"nodeType": "Return",
														"src": "15421:22:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "14414:175:0",
										"text": " Calculate binary logarithm of x.  Revert if x <= 0.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log_2",
									"nameLocation": "14602:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "14616:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "14609:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1170,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "14609:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14608:10:0"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "14642:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1173,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "14642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14641:8:0"
									},
									"scope": 2813,
									"src": "14593:863:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "15696:174:0",
										"statements": [
											{
												"id": 1380,
												"nodeType": "UncheckedBlock",
												"src": "15703:162:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1355,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "15731:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15735:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "15731:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1354,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "15722:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15722:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1359,
														"nodeType": "ExpressionStatement",
														"src": "15722:15:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 1369,
																											"name": "x",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1349,
																											"src": "15807:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_int128",
																												"typeString": "int128"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_int128",
																												"typeString": "int128"
																											}
																										],
																										"id": 1368,
																										"name": "log_2",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1346,
																										"src": "15800:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_int128_$returns$_t_int128_$",
																											"typeString": "function (int128) pure returns (int128)"
																										}
																									},
																									"id": 1370,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "15800:9:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_int128",
																										"typeString": "int128"
																									}
																								],
																								"id": 1367,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "15792:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1366,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "15792:6:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1371,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15792:18:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						],
																						"id": 1365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "15783:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1364,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "15783:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15783:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "30784231373231374637443143463739414243394533423339383033463246364146",
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15814:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_235865763225513294137944142764154484399_by_1",
																						"typeString": "int_const 2358...(31 digits omitted)...4399"
																					},
																					"value": "0xB17217F7D1CF79ABC9E3B39803F2F6AF"
																				},
																				"src": "15783:65:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "313238",
																				"id": 1375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15852:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_128_by_1",
																					"typeString": "int_const 128"
																				},
																				"value": "128"
																			},
																			"src": "15783:72:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15763:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1362,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "15763:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15763:93:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15755:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "15755:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15755:102:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 1353,
														"id": 1379,
														"nodeType": "Return",
														"src": "15748:109:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "15462:176:0",
										"text": " Calculate natural logarithm of x.  Revert if x <= 0.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ln",
									"nameLocation": "15651:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "15662:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15655:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1348,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "15655:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15654:10:0"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "15688:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1351,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "15688:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15687:8:0"
									},
									"scope": 2813,
									"src": "15642:228:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2339,
										"nodeType": "Block",
										"src": "16113:6926:0",
										"statements": [
											{
												"id": 2338,
												"nodeType": "UncheckedBlock",
												"src": "16120:6914:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1391,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "16148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "3078343030303030303030303030303030303030",
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16152:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1180591620717411303424_by_1",
																			"typeString": "int_const 1180591620717411303424"
																		},
																		"value": "0x400000000000000000"
																	},
																	"src": "16148:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1390,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "16139:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16139:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1395,
														"nodeType": "ExpressionStatement",
														"src": "16139:34:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1396,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "16200:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "16204:21:0",
																"subExpression": {
																	"hexValue": "3078343030303030303030303030303030303030",
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16205:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1180591620717411303424_by_1",
																		"typeString": "int_const 1180591620717411303424"
																	},
																	"value": "0x400000000000000000"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1180591620717411303424_by_1",
																	"typeString": "int_const -1180591620717411303424"
																}
															},
															"src": "16200:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1402,
														"nodeType": "IfStatement",
														"src": "16196:39:0",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16234:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1389,
															"id": 1401,
															"nodeType": "Return",
															"src": "16227:8:0"
														}
													},
													{
														"assignments": [
															1404
														],
														"declarations": [
															{
																"constant": false,
																"id": 1404,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "16267:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2338,
																"src": "16259:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16259:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1406,
														"initialValue": {
															"hexValue": "30783830303030303030303030303030303030303030303030303030303030303030",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16276:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_170141183460469231731687303715884105728_by_1",
																"typeString": "int_const 1701...(31 digits omitted)...5728"
															},
															"value": "0x80000000000000000000000000000000"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16259:51:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1407,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16325:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838303030303030303030303030303030",
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16329:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_9223372036854775808_by_1",
																		"typeString": "int_const 9223372036854775808"
																	},
																	"value": "0x8000000000000000"
																},
																"src": "16325:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16350:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16325:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1420,
														"nodeType": "IfStatement",
														"src": "16321:101:0",
														"trueBody": {
															"expression": {
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1412,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "16362:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1413,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "16371:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313641303945363637463342434339303842324642313336364541393537443345",
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16380:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_481231938336009023090067544955250113854_by_1",
																				"typeString": "int_const 4812...(31 digits omitted)...3854"
																			},
																			"value": "0x16A09E667F3BCC908B2FB1366EA957D3E"
																		},
																		"src": "16371:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16419:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "16371:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16362:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1419,
															"nodeType": "ExpressionStatement",
															"src": "16362:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1421,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16435:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834303030303030303030303030303030",
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16439:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4611686018427387904_by_1",
																		"typeString": "int_const 4611686018427387904"
																	},
																	"value": "0x4000000000000000"
																},
																"src": "16435:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16460:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16435:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1434,
														"nodeType": "IfStatement",
														"src": "16431:101:0",
														"trueBody": {
															"expression": {
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1426,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "16472:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1427,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "16481:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313330364645304133314237313532444538443541343633303543383545444543",
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16490:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_404666211852346594250993303657235475948_by_1",
																				"typeString": "int_const 4046...(31 digits omitted)...5948"
																			},
																			"value": "0x1306FE0A31B7152DE8D5A46305C85EDEC"
																		},
																		"src": "16481:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16529:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "16481:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16472:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ExpressionStatement",
															"src": "16472:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1435,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16545:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832303030303030303030303030303030",
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16549:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2305843009213693952_by_1",
																		"typeString": "int_const 2305843009213693952"
																	},
																	"value": "0x2000000000000000"
																},
																"src": "16545:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16570:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16545:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1448,
														"nodeType": "IfStatement",
														"src": "16541:101:0",
														"trueBody": {
															"expression": {
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1440,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "16582:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1441,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "16591:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313137324238334337443531374144434446374338433530454231344137393146",
																			"id": 1442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16600:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_371080552416919877990254144423618836767_by_1",
																				"typeString": "int_const 3710...(31 digits omitted)...6767"
																			},
																			"value": "0x1172B83C7D517ADCDF7C8C50EB14A791F"
																		},
																		"src": "16591:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16639:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "16591:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16582:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1447,
															"nodeType": "ExpressionStatement",
															"src": "16582:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1449,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16655:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831303030303030303030303030303030",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16659:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1152921504606846976_by_1",
																		"typeString": "int_const 1152921504606846976"
																	},
																	"value": "0x1000000000000000"
																},
																"src": "16655:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16680:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16655:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1462,
														"nodeType": "IfStatement",
														"src": "16651:101:0",
														"trueBody": {
															"expression": {
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1454,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "16692:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1455,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "16701:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313042353538364346393839304636323938423932423731383432413938333633",
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16710:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_355347954397881497469693820312941593443_by_1",
																				"typeString": "int_const 3553...(31 digits omitted)...3443"
																			},
																			"value": "0x10B5586CF9890F6298B92B71842A98363"
																		},
																		"src": "16701:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16749:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "16701:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16692:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1461,
															"nodeType": "ExpressionStatement",
															"src": "16692:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1463,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16765:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078383030303030303030303030303030",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16769:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_576460752303423488_by_1",
																		"typeString": "int_const 576460752303423488"
																	},
																	"value": "0x800000000000000"
																},
																"src": "16765:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16789:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16765:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1476,
														"nodeType": "IfStatement",
														"src": "16761:100:0",
														"trueBody": {
															"expression": {
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1468,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "16801:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1469,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "16810:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313035394230443331353835373433414537433534384542363843413431374644",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16819:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_347733580493780928808815525413232318461_by_1",
																				"typeString": "int_const 3477...(31 digits omitted)...8461"
																			},
																			"value": "0x1059B0D31585743AE7C548EB68CA417FD"
																		},
																		"src": "16810:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16858:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "16810:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16801:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1475,
															"nodeType": "ExpressionStatement",
															"src": "16801:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1477,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16874:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030303030303030303030303030",
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16878:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_288230376151711744_by_1",
																		"typeString": "int_const 288230376151711744"
																	},
																	"value": "0x400000000000000"
																},
																"src": "16874:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16898:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16874:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "16870:100:0",
														"trueBody": {
															"expression": {
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1482,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "16910:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1483,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "16919:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313032433941334537373830363045453646374341434134463741323942444538",
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16928:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_343987798952690256687074238090730651112_by_1",
																				"typeString": "int_const 3439...(31 digits omitted)...1112"
																			},
																			"value": "0x102C9A3E778060EE6F7CACA4F7A29BDE8"
																		},
																		"src": "16919:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16967:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "16919:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16910:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1489,
															"nodeType": "ExpressionStatement",
															"src": "16910:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1491,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "16983:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030303030303030303030303030",
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16987:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_144115188075855872_by_1",
																		"typeString": "int_const 144115188075855872"
																	},
																	"value": "0x200000000000000"
																},
																"src": "16983:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17007:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16983:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1504,
														"nodeType": "IfStatement",
														"src": "16979:100:0",
														"trueBody": {
															"expression": {
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1496,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17019:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1497,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17028:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313031363344413946423333333536443834413636414533333644434446413346",
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17037:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_342130066523749645191881555545647086143_by_1",
																				"typeString": "int_const 3421...(31 digits omitted)...6143"
																			},
																			"value": "0x10163DA9FB33356D84A66AE336DCDFA3F"
																		},
																		"src": "17028:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17076:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17028:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17019:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1503,
															"nodeType": "ExpressionStatement",
															"src": "17019:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1505,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17092:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030303030303030303030303030",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17096:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_72057594037927936_by_1",
																		"typeString": "int_const 72057594037927936"
																	},
																	"value": "0x100000000000000"
																},
																"src": "17092:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17092:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1518,
														"nodeType": "IfStatement",
														"src": "17088:100:0",
														"trueBody": {
															"expression": {
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1510,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17128:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1511,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17137:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030423141464135414243424544363132394142313345433131444339353433",
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17146:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_341204966012395051463589306197117539651_by_1",
																				"typeString": "int_const 3412...(31 digits omitted)...9651"
																			},
																			"value": "0x100B1AFA5ABCBED6129AB13EC11DC9543"
																		},
																		"src": "17137:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17185:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17137:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17128:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1517,
															"nodeType": "ExpressionStatement",
															"src": "17128:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1519,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17201:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830303030303030303030303030",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17205:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_36028797018963968_by_1",
																		"typeString": "int_const 36028797018963968"
																	},
																	"value": "0x80000000000000"
																},
																"src": "17201:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17224:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17201:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1532,
														"nodeType": "IfStatement",
														"src": "17197:99:0",
														"trueBody": {
															"expression": {
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1524,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17236:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1525,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17245:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030353843383644413143303945413146463139443239344346324636373942",
																			"id": 1526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17254:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340743354212339922144397487283364652955_by_1",
																				"typeString": "int_const 3407...(31 digits omitted)...2955"
																			},
																			"value": "0x10058C86DA1C09EA1FF19D294CF2F679B"
																		},
																		"src": "17245:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17293:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17245:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17236:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1531,
															"nodeType": "ExpressionStatement",
															"src": "17236:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1533,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17309:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430303030303030303030303030",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17313:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18014398509481984_by_1",
																		"typeString": "int_const 18014398509481984"
																	},
																	"value": "0x40000000000000"
																},
																"src": "17309:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17332:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17309:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1546,
														"nodeType": "IfStatement",
														"src": "17305:99:0",
														"trueBody": {
															"expression": {
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1538,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17344:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1539,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17353:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030324336303545324538434543353036443231424643383941323341303046",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17362:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340512782555889898808859563671008026639_by_1",
																				"typeString": "int_const 3405...(31 digits omitted)...6639"
																			},
																			"value": "0x1002C605E2E8CEC506D21BFC89A23A00F"
																		},
																		"src": "17353:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17401:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17353:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17344:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1545,
															"nodeType": "ExpressionStatement",
															"src": "17344:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1547,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17417:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230303030303030303030303030",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17421:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_9007199254740992_by_1",
																		"typeString": "int_const 9007199254740992"
																	},
																	"value": "0x20000000000000"
																},
																"src": "17417:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17440:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17417:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1560,
														"nodeType": "IfStatement",
														"src": "17413:99:0",
														"trueBody": {
															"expression": {
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1552,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17452:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1553,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17461:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030313632463339303430353146413132384243413943353543333145354446",
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17470:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340397555242326998647385072673097901535_by_1",
																				"typeString": "int_const 3403...(31 digits omitted)...1535"
																			},
																			"value": "0x100162F3904051FA128BCA9C55C31E5DF"
																		},
																		"src": "17461:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17509:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17461:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17452:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1559,
															"nodeType": "ExpressionStatement",
															"src": "17452:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1561,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17525:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130303030303030303030303030",
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17529:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4503599627370496_by_1",
																		"typeString": "int_const 4503599627370496"
																	},
																	"value": "0x10000000000000"
																},
																"src": "17525:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17548:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17525:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1574,
														"nodeType": "IfStatement",
														"src": "17521:99:0",
														"trueBody": {
															"expression": {
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1566,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17560:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17569:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030304231373545464644433736424133384533313637314341393339373235",
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17578:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340339956208435708755752659506489956133_by_1",
																				"typeString": "int_const 3403...(31 digits omitted)...6133"
																			},
																			"value": "0x1000B175EFFDC76BA38E31671CA939725"
																		},
																		"src": "17569:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17617:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17569:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17560:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "17560:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17633:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838303030303030303030303030",
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17637:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2251799813685248_by_1",
																		"typeString": "int_const 2251799813685248"
																	},
																	"value": "0x8000000000000"
																},
																"src": "17633:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17655:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17633:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1588,
														"nodeType": "IfStatement",
														"src": "17629:98:0",
														"trueBody": {
															"expression": {
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1580,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17667:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1581,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17676:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303538424130314642394639364436434143443442313830393137433344",
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17685:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340311160346490911934870813363085081661_by_1",
																				"typeString": "int_const 3403...(31 digits omitted)...1661"
																			},
																			"value": "0x100058BA01FB9F96D6CACD4B180917C3D"
																		},
																		"src": "17676:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17724:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17676:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17667:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1587,
															"nodeType": "ExpressionStatement",
															"src": "17667:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1589,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17740:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834303030303030303030303030",
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17744:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1125899906842624_by_1",
																		"typeString": "int_const 1125899906842624"
																	},
																	"value": "0x4000000000000"
																},
																"src": "17740:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17740:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1602,
														"nodeType": "IfStatement",
														"src": "17736:98:0",
														"trueBody": {
															"expression": {
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1594,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17774:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1595,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17783:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303243354343333744413934393144303938354333343843363845374233",
																			"id": 1596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17792:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340296763329178528376528243588334151603_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1603"
																			},
																			"value": "0x10002C5CC37DA9491D0985C348C68E7B3"
																		},
																		"src": "17783:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17831:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17783:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17774:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1601,
															"nodeType": "ExpressionStatement",
															"src": "17774:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1603,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17847:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832303030303030303030303030",
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17851:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_562949953421312_by_1",
																		"typeString": "int_const 562949953421312"
																	},
																	"value": "0x2000000000000"
																},
																"src": "17847:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17869:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17847:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1616,
														"nodeType": "IfStatement",
														"src": "17843:98:0",
														"trueBody": {
															"expression": {
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1608,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17881:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1609,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17890:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303136324535323545453035343735343435374435393935323932303236",
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17899:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340289565048926066557319684044576333862_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...3862"
																			},
																			"value": "0x1000162E525EE054754457D5995292026"
																		},
																		"src": "17890:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17938:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17890:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17881:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1615,
															"nodeType": "ExpressionStatement",
															"src": "17881:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1617,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "17954:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831303030303030303030303030",
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17958:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_281474976710656_by_1",
																		"typeString": "int_const 281474976710656"
																	},
																	"value": "0x1000000000000"
																},
																"src": "17954:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17976:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17954:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1630,
														"nodeType": "IfStatement",
														"src": "17950:98:0",
														"trueBody": {
															"expression": {
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1622,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "17988:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "17997:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303042313732353537373543303430363138424634413441444538334643",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18006:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340285965965899358974465315064323671036_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1036"
																			},
																			"value": "0x10000B17255775C040618BF4A4ADE83FC"
																		},
																		"src": "17997:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18045:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "17997:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17988:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1629,
															"nodeType": "ExpressionStatement",
															"src": "17988:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1631,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078383030303030303030303030",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18065:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_140737488355328_by_1",
																		"typeString": "int_const 140737488355328"
																	},
																	"value": "0x800000000000"
																},
																"src": "18061:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18082:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18061:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1644,
														"nodeType": "IfStatement",
														"src": "18057:97:0",
														"trueBody": {
															"expression": {
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1636,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18094:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1637,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18103:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303035384239314235424339414532454544383145394237443443464142",
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18112:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340284166438660709872813645066166128555_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...8555"
																			},
																			"value": "0x1000058B91B5BC9AE2EED81E9B7D4CFAB"
																		},
																		"src": "18103:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18151:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18103:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18094:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1643,
															"nodeType": "ExpressionStatement",
															"src": "18094:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18167:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030303030303030303030",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18171:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_70368744177664_by_1",
																		"typeString": "int_const 70368744177664"
																	},
																	"value": "0x400000000000"
																},
																"src": "18167:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18188:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18167:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1658,
														"nodeType": "IfStatement",
														"src": "18163:97:0",
														"trueBody": {
															"expression": {
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1650,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18200:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18209:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303032433543383944354543364341344437433841434330313742374339",
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18218:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340283266678610039476911010529773336521_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...6521"
																			},
																			"value": "0x100002C5C89D5EC6CA4D7C8ACC017B7C9"
																		},
																		"src": "18209:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18257:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18209:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18200:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1657,
															"nodeType": "ExpressionStatement",
															"src": "18200:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1659,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18273:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030303030303030303030",
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18277:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_35184372088832_by_1",
																		"typeString": "int_const 35184372088832"
																	},
																	"value": "0x200000000000"
																},
																"src": "18273:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18294:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18273:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1672,
														"nodeType": "IfStatement",
														"src": "18269:97:0",
														"trueBody": {
															"expression": {
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1664,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18306:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18315:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303031363245343346344638333130363045303244383339413944313644",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18324:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282816799476865065514053322893021549_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1549"
																			},
																			"value": "0x10000162E43F4F831060E02D839A9D16D"
																		},
																		"src": "18315:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18363:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18315:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18306:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1671,
															"nodeType": "ExpressionStatement",
															"src": "18306:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1673,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18379:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030303030303030303030",
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18383:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_17592186044416_by_1",
																		"typeString": "int_const 17592186044416"
																	},
																	"value": "0x100000000000"
																},
																"src": "18379:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18400:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18379:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1686,
														"nodeType": "IfStatement",
														"src": "18375:97:0",
														"trueBody": {
															"expression": {
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1678,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18412:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1679,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18421:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030423137323142434643393944394638393045413036393131373633",
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18430:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282591860133317712432962519222523747_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...3747"
																			},
																			"value": "0x100000B1721BCFC99D9F890EA06911763"
																		},
																		"src": "18421:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18469:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18421:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18412:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1685,
															"nodeType": "ExpressionStatement",
															"src": "18412:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1687,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18485:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830303030303030303030",
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18489:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8796093022208_by_1",
																		"typeString": "int_const 8796093022208"
																	},
																	"value": "0x80000000000"
																},
																"src": "18485:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18505:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18485:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1700,
														"nodeType": "IfStatement",
														"src": "18481:96:0",
														"trueBody": {
															"expression": {
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1692,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18517:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1693,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18526:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030353842393043463145364439374639434131344442434331363238",
																			"id": 1694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18535:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282479390517303956044167089727739432_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...9432"
																			},
																			"value": "0x10000058B90CF1E6D97F9CA14DBCC1628"
																		},
																		"src": "18526:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18574:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18526:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18517:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1699,
															"nodeType": "ExpressionStatement",
															"src": "18517:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1701,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18590:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430303030303030303030",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18594:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4398046511104_by_1",
																		"typeString": "int_const 4398046511104"
																	},
																	"value": "0x40000000000"
																},
																"src": "18590:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18610:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18590:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1714,
														"nodeType": "IfStatement",
														"src": "18586:96:0",
														"trueBody": {
															"expression": {
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1706,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18622:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1707,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18631:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030324335433836334237334630313634363846364241433543413242",
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18640:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282423155723237052512385577070742059_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2059"
																			},
																			"value": "0x1000002C5C863B73F016468F6BAC5CA2B"
																		},
																		"src": "18631:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18679:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18631:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18622:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "18622:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1715,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18695:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230303030303030303030",
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18699:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2199023255552_by_1",
																		"typeString": "int_const 2199023255552"
																	},
																	"value": "0x20000000000"
																},
																"src": "18695:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18715:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18695:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1728,
														"nodeType": "IfStatement",
														"src": "18691:96:0",
														"trueBody": {
															"expression": {
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1720,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18727:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1721,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18736:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030313632453433304535413138463631313945334330323238324135",
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18745:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282395038329688593740233918090740389_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...0389"
																			},
																			"value": "0x100000162E430E5A18F6119E3C02282A5"
																		},
																		"src": "18736:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18784:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18736:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18727:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1727,
															"nodeType": "ExpressionStatement",
															"src": "18727:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1729,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18800:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130303030303030303030",
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18804:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1099511627776_by_1",
																		"typeString": "int_const 1099511627776"
																	},
																	"value": "0x10000000000"
																},
																"src": "18800:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18820:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18800:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1742,
														"nodeType": "IfStatement",
														"src": "18796:96:0",
														"trueBody": {
															"expression": {
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1734,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18832:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1735,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18841:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030304231373231383335353134423836453644393645464431424645",
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18850:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282380979633785612518603506803612670_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2670"
																			},
																			"value": "0x1000000B1721835514B86E6D96EFD1BFE"
																		},
																		"src": "18841:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18889:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18841:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18832:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1741,
															"nodeType": "ExpressionStatement",
															"src": "18832:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1743,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "18905:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838303030303030303030",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18909:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_549755813888_by_1",
																		"typeString": "int_const 549755813888"
																	},
																	"value": "0x8000000000"
																},
																"src": "18905:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18924:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18905:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1756,
														"nodeType": "IfStatement",
														"src": "18901:95:0",
														"trueBody": {
															"expression": {
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1748,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "18936:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1749,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "18945:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303538423930433042343843364245354446383436433542324546",
																			"id": 1750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18954:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282373950286051933938400987007267567_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...7567"
																			},
																			"value": "0x100000058B90C0B48C6BE5DF846C5B2EF"
																		},
																		"src": "18945:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18993:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "18945:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18936:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1755,
															"nodeType": "ExpressionStatement",
															"src": "18936:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1757,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19009:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834303030303030303030",
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19013:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_274877906944_by_1",
																		"typeString": "int_const 274877906944"
																	},
																	"value": "0x4000000000"
																},
																"src": "19009:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19028:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19009:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1770,
														"nodeType": "IfStatement",
														"src": "19005:95:0",
														"trueBody": {
															"expression": {
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1762,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19040:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19049:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303243354338363031434336423945393432313343373237333741",
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19058:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282370435612239547654640565033792378_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2378"
																			},
																			"value": "0x10000002C5C8601CC6B9E94213C72737A"
																		},
																		"src": "19049:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19097:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19049:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19040:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1769,
															"nodeType": "ExpressionStatement",
															"src": "19040:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1771,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19113:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832303030303030303030",
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19117:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_137438953472_by_1",
																		"typeString": "int_const 137438953472"
																	},
																	"value": "0x2000000000"
																},
																"src": "19113:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19113:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1784,
														"nodeType": "IfStatement",
														"src": "19109:95:0",
														"trueBody": {
															"expression": {
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1776,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19144:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1777,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19153:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303136324534324646463033374446333841413242323139463036",
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19162:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282368678275346967764181521839267590_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...7590"
																			},
																			"value": "0x1000000162E42FFF037DF38AA2B219F06"
																		},
																		"src": "19153:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19201:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19153:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19144:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1783,
															"nodeType": "ExpressionStatement",
															"src": "19144:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1785,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19217:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831303030303030303030",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19221:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_68719476736_by_1",
																		"typeString": "int_const 68719476736"
																	},
																	"value": "0x1000000000"
																},
																"src": "19217:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19236:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19217:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1798,
														"nodeType": "IfStatement",
														"src": "19213:95:0",
														"trueBody": {
															"expression": {
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1790,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19248:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19257:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303042313732313746424139433733394141353831394634344639",
																			"id": 1792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19266:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282367799606904081131786786979136761_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...6761"
																			},
																			"value": "0x10000000B17217FBA9C739AA5819F44F9"
																		},
																		"src": "19257:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19305:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19257:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19248:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1797,
															"nodeType": "ExpressionStatement",
															"src": "19248:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1799,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19321:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078383030303030303030",
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19325:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_34359738368_by_1",
																		"typeString": "int_const 34359738368"
																	},
																	"value": "0x800000000"
																},
																"src": "19321:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19339:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19321:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1812,
														"nodeType": "IfStatement",
														"src": "19317:94:0",
														"trueBody": {
															"expression": {
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1804,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19351:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1805,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19360:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303035384239304246434445453541434433433143454443383233",
																			"id": 1806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19369:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282367360272683488643795553082001443_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1443"
																			},
																			"value": "0x1000000058B90BFCDEE5ACD3C1CEDC823"
																		},
																		"src": "19360:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19408:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19360:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19351:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1811,
															"nodeType": "ExpressionStatement",
															"src": "19351:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1813,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030303030303030",
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19428:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_17179869184_by_1",
																		"typeString": "int_const 17179869184"
																	},
																	"value": "0x400000000"
																},
																"src": "19424:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19442:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19424:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1826,
														"nodeType": "IfStatement",
														"src": "19420:94:0",
														"trueBody": {
															"expression": {
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1818,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19454:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1819,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19463:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303032433543383546453331463335413641333044413142453530",
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19472:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282367140605573405106851149122747984_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...7984"
																			},
																			"value": "0x100000002C5C85FE31F35A6A30DA1BE50"
																		},
																		"src": "19463:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19511:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19463:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19454:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1825,
															"nodeType": "ExpressionStatement",
															"src": "19454:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1827,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19527:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030303030303030",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19531:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8589934592_by_1",
																		"typeString": "int_const 8589934592"
																	},
																	"value": "0x200000000"
																},
																"src": "19527:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19527:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1840,
														"nodeType": "IfStatement",
														"src": "19523:94:0",
														"trueBody": {
															"expression": {
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1832,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19557:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1833,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19566:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303031363245343246463039393943453335343142394646464346",
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19575:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282367030772018416515141710341210063_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...0063"
																			},
																			"value": "0x10000000162E42FF0999CE3541B9FFFCF"
																		},
																		"src": "19566:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19614:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19566:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19557:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1839,
															"nodeType": "ExpressionStatement",
															"src": "19557:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1841,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19630:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030303030303030",
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19634:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4294967296_by_1",
																		"typeString": "int_const 4294967296"
																	},
																	"value": "0x100000000"
																},
																"src": "19630:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19648:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19630:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1854,
														"nodeType": "IfStatement",
														"src": "19626:94:0",
														"trueBody": {
															"expression": {
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1846,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19660:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1847,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19669:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030423137323137463830463445463541414444413435353534",
																			"id": 1848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19678:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366975855240935513477676743808340_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...8340"
																			},
																			"value": "0x100000000B17217F80F4EF5AADDA45554"
																		},
																		"src": "19669:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19717:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19669:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19660:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1853,
															"nodeType": "ExpressionStatement",
															"src": "19660:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1855,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830303030303030",
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19737:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2147483648_by_1",
																		"typeString": "int_const 2147483648"
																	},
																	"value": "0x80000000"
																},
																"src": "19733:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19750:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19733:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1868,
														"nodeType": "IfStatement",
														"src": "19729:93:0",
														"trueBody": {
															"expression": {
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1860,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19762:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1861,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19771:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030353842393042464246383437394244354138314235314144",
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19780:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366948396852198336193330767679917_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...9917"
																			},
																			"value": "0x10000000058B90BFBF8479BD5A81B51AD"
																		},
																		"src": "19771:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19819:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19771:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19762:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1867,
															"nodeType": "ExpressionStatement",
															"src": "19762:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1869,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19835:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430303030303030",
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19839:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1073741824_by_1",
																		"typeString": "int_const 1073741824"
																	},
																	"value": "0x40000000"
																},
																"src": "19835:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19835:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1882,
														"nodeType": "IfStatement",
														"src": "19831:93:0",
														"trueBody": {
															"expression": {
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1874,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19864:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1875,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19873:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030324335433835464446383442443632414533304137344343",
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19882:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366934667657830578438075407037644_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...7644"
																			},
																			"value": "0x1000000002C5C85FDF84BD62AE30A74CC"
																		},
																		"src": "19873:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19921:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19873:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19864:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1881,
															"nodeType": "ExpressionStatement",
															"src": "19864:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1883,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "19937:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230303030303030",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19941:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_536870912_by_1",
																		"typeString": "int_const 536870912"
																	},
																	"value": "0x20000000"
																},
																"src": "19937:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19954:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19937:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1896,
														"nodeType": "IfStatement",
														"src": "19933:93:0",
														"trueBody": {
															"expression": {
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1888,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "19966:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "19975:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030313632453432464546423246454432353735353942444141",
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19984:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366927803060646907282177123794346_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...4346"
																			},
																			"value": "0x100000000162E42FEFB2FED257559BDAA"
																		},
																		"src": "19975:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20023:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "19975:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19966:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1895,
															"nodeType": "ExpressionStatement",
															"src": "19966:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1897,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130303030303030",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20043:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_268435456_by_1",
																		"typeString": "int_const 268435456"
																	},
																	"value": "0x10000000"
																},
																"src": "20039:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20056:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20039:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1910,
														"nodeType": "IfStatement",
														"src": "20035:93:0",
														"trueBody": {
															"expression": {
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1902,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20068:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1903,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20077:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030304231373231374637443541373731364242413441394145",
																			"id": 1904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20086:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366924370762055123634660330219950_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...9950"
																			},
																			"value": "0x1000000000B17217F7D5A7716BBA4A9AE"
																		},
																		"src": "20077:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20125:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20077:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20068:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1909,
															"nodeType": "ExpressionStatement",
															"src": "20068:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1911,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838303030303030",
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20145:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_134217728_by_1",
																		"typeString": "int_const 134217728"
																	},
																	"value": "0x8000000"
																},
																"src": "20141:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20141:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1924,
														"nodeType": "IfStatement",
														"src": "20137:92:0",
														"trueBody": {
															"expression": {
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1916,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20169:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1917,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20178:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303538423930424642453944444241433545313039434345",
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20187:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366922654612759244793510020291790_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1790"
																			},
																			"value": "0x100000000058B90BFBE9DDBAC5E109CCE"
																		},
																		"src": "20178:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20226:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20178:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20169:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1923,
															"nodeType": "ExpressionStatement",
															"src": "20169:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1925,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20242:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834303030303030",
																	"id": 1926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20246:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_67108864_by_1",
																		"typeString": "int_const 67108864"
																	},
																	"value": "0x4000000"
																},
																"src": "20242:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20258:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20242:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1938,
														"nodeType": "IfStatement",
														"src": "20238:92:0",
														"trueBody": {
															"expression": {
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1930,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20270:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1931,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20279:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303243354338354644463442313544453646313745423044",
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20288:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366921796538111308618586887023373_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...3373"
																			},
																			"value": "0x10000000002C5C85FDF4B15DE6F17EB0D"
																		},
																		"src": "20279:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20327:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20279:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20270:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1937,
															"nodeType": "ExpressionStatement",
															"src": "20270:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1939,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20343:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832303030303030",
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20347:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_33554432_by_1",
																		"typeString": "int_const 33554432"
																	},
																	"value": "0x2000000"
																},
																"src": "20343:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20359:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20343:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1952,
														"nodeType": "IfStatement",
														"src": "20339:92:0",
														"trueBody": {
															"expression": {
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1944,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20371:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1945,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20380:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303136324534324645464134393446313437384644453035",
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20389:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366921367500787341342538325810693_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...0693"
																			},
																			"value": "0x1000000000162E42FEFA494F1478FDE05"
																		},
																		"src": "20380:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20428:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20380:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20371:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1951,
															"nodeType": "ExpressionStatement",
															"src": "20371:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1953,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20444:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831303030303030",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20448:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16777216_by_1",
																		"typeString": "int_const 16777216"
																	},
																	"value": "0x1000000"
																},
																"src": "20444:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20460:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20444:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1966,
														"nodeType": "IfStatement",
														"src": "20440:92:0",
														"trueBody": {
															"expression": {
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1958,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20472:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1959,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20481:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303042313732313746374432304346393237433845393443",
																			"id": 1960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20490:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366921152982125357907367296559436_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...9436"
																			},
																			"value": "0x10000000000B17217F7D20CF927C8E94C"
																		},
																		"src": "20481:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20529:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20481:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20472:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1965,
															"nodeType": "ExpressionStatement",
															"src": "20472:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1967,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20545:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078383030303030",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20549:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8388608_by_1",
																		"typeString": "int_const 8388608"
																	},
																	"value": "0x800000"
																},
																"src": "20545:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20560:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20545:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1980,
														"nodeType": "IfStatement",
														"src": "20541:91:0",
														"trueBody": {
															"expression": {
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1972,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20572:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1973,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20581:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303035384239304246424538463731434234453442333344",
																			"id": 1974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20590:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366921045722794366240495094772541_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2541"
																			},
																			"value": "0x1000000000058B90BFBE8F71CB4E4B33D"
																		},
																		"src": "20581:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20629:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20581:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20572:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1979,
															"nodeType": "ExpressionStatement",
															"src": "20572:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1981,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20645:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030303030",
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20649:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4194304_by_1",
																		"typeString": "int_const 4194304"
																	},
																	"value": "0x400000"
																},
																"src": "20645:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20660:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20645:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1994,
														"nodeType": "IfStatement",
														"src": "20641:91:0",
														"trueBody": {
															"expression": {
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1986,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20672:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1987,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20681:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303032433543383546444634373742363632423236393435",
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20690:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920992093128870419737322088773_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...8773"
																			},
																			"value": "0x100000000002C5C85FDF477B662B26945"
																		},
																		"src": "20681:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20729:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20681:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20672:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "20672:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1995,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20745:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030303030",
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20749:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2097152_by_1",
																		"typeString": "int_const 2097152"
																	},
																	"value": "0x200000"
																},
																"src": "20745:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20760:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20745:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2008,
														"nodeType": "IfStatement",
														"src": "20741:91:0",
														"trueBody": {
															"expression": {
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2000,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20772:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2001,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20781:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303031363245343246454641334145353333363933383843",
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20790:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920965278296122512528017799308_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...9308"
																			},
																			"value": "0x10000000000162E42FEFA3AE53369388C"
																		},
																		"src": "20781:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20829:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20781:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20772:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2007,
															"nodeType": "ExpressionStatement",
															"src": "20772:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2009,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20845:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030303030",
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20849:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1048576_by_1",
																		"typeString": "int_const 1048576"
																	},
																	"value": "0x100000"
																},
																"src": "20845:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20860:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20845:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2022,
														"nodeType": "IfStatement",
														"src": "20841:91:0",
														"trueBody": {
															"expression": {
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2014,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20872:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2015,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20881:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030423137323137463744314433353141333839443430",
																			"id": 2016,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20890:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920951870879748559715761167680_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...7680"
																			},
																			"value": "0x100000000000B17217F7D1D351A389D40"
																		},
																		"src": "20881:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20929:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20881:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20872:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2021,
															"nodeType": "ExpressionStatement",
															"src": "20872:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2023,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "20945:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830303030",
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20949:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_524288_by_1",
																		"typeString": "int_const 524288"
																	},
																	"value": "0x80000"
																},
																"src": "20945:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20945:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2036,
														"nodeType": "IfStatement",
														"src": "20941:90:0",
														"trueBody": {
															"expression": {
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2028,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "20971:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2029,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "20980:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030353842393042464245384538423244334434454445",
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20989:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920945167171561583507731730142_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...0142"
																			},
																			"value": "0x10000000000058B90BFBE8E8B2D3D4EDE"
																		},
																		"src": "20980:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21028:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "20980:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20971:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2035,
															"nodeType": "ExpressionStatement",
															"src": "20971:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2037,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21044:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430303030",
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21048:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_262144_by_1",
																		"typeString": "int_const 262144"
																	},
																	"value": "0x40000"
																},
																"src": "21044:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21058:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21044:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2050,
														"nodeType": "IfStatement",
														"src": "21040:90:0",
														"trueBody": {
															"expression": {
																"id": 2048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2042,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21070:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2043,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21079:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030324335433835464446343734314245413645373745",
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21088:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920941815317468095453241730942_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...0942"
																			},
																			"value": "0x1000000000002C5C85FDF4741BEA6E77E"
																		},
																		"src": "21079:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21127:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21079:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21070:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2049,
															"nodeType": "ExpressionStatement",
															"src": "21070:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2051,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21143:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230303030",
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_131072_by_1",
																		"typeString": "int_const 131072"
																	},
																	"value": "0x20000"
																},
																"src": "21143:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21143:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2064,
														"nodeType": "IfStatement",
														"src": "21139:90:0",
														"trueBody": {
															"expression": {
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2056,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21169:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2057,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21178:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030313632453432464546413339464539353538334332",
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21187:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920940139390421351438377911234_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1234"
																			},
																			"value": "0x100000000000162E42FEFA39FE95583C2"
																		},
																		"src": "21178:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21226:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21178:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21169:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2063,
															"nodeType": "ExpressionStatement",
															"src": "21169:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2065,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21242:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130303030",
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21246:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65536_by_1",
																		"typeString": "int_const 65536"
																	},
																	"value": "0x10000"
																},
																"src": "21242:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21256:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21242:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2078,
														"nodeType": "IfStatement",
														"src": "21238:90:0",
														"trueBody": {
															"expression": {
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2070,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21268:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2071,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21277:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030304231373231374637443143464237324234354531",
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21286:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920939301426897979434041296353_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...6353"
																			},
																			"value": "0x1000000000000B17217F7D1CFB72B45E1"
																		},
																		"src": "21277:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21325:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21277:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21268:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2077,
															"nodeType": "ExpressionStatement",
															"src": "21268:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2079,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21341:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838303030",
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21345:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32768_by_1",
																		"typeString": "int_const 32768"
																	},
																	"value": "0x8000"
																},
																"src": "21341:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21354:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21341:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2092,
														"nodeType": "IfStatement",
														"src": "21337:89:0",
														"trueBody": {
															"expression": {
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2084,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21366:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2085,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21375:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303538423930424642453845374343333543334630",
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21384:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938882445136293432646812656_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2656"
																			},
																			"value": "0x100000000000058B90BFBE8E7CC35C3F0"
																		},
																		"src": "21375:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21423:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21375:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21366:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2091,
															"nodeType": "ExpressionStatement",
															"src": "21366:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2093,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21439:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834303030",
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21443:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16384_by_1",
																		"typeString": "int_const 16384"
																	},
																	"value": "0x4000"
																},
																"src": "21439:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21452:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21439:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2106,
														"nodeType": "IfStatement",
														"src": "21435:89:0",
														"trueBody": {
															"expression": {
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2098,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21464:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2099,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21473:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303243354338354644463437334532343245413338",
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21482:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938672954255450432143026744_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...6744"
																			},
																			"value": "0x10000000000002C5C85FDF473E242EA38"
																		},
																		"src": "21473:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21521:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21473:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21464:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2105,
															"nodeType": "ExpressionStatement",
															"src": "21464:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2107,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21537:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832303030",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21541:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8192_by_1",
																		"typeString": "int_const 8192"
																	},
																	"value": "0x2000"
																},
																"src": "21537:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21537:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2120,
														"nodeType": "IfStatement",
														"src": "21533:89:0",
														"trueBody": {
															"expression": {
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2112,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21562:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2113,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21571:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303136324534324645464133394630324237373243",
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21580:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938568208815028931939497772_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...7772"
																			},
																			"value": "0x1000000000000162E42FEFA39F02B772C"
																		},
																		"src": "21571:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21619:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21571:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21562:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2119,
															"nodeType": "ExpressionStatement",
															"src": "21562:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2121,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21635:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831303030",
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21639:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4096_by_1",
																		"typeString": "int_const 4096"
																	},
																	"value": "0x1000"
																},
																"src": "21635:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21648:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21635:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2134,
														"nodeType": "IfStatement",
														"src": "21631:89:0",
														"trueBody": {
															"expression": {
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2126,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21660:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2127,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21669:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303042313732313746374431434637443833433141",
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21678:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938515836094818181849824282_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...4282"
																			},
																			"value": "0x10000000000000B17217F7D1CF7D83C1A"
																		},
																		"src": "21669:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21717:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21669:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21660:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2133,
															"nodeType": "ExpressionStatement",
															"src": "21660:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2135,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21733:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078383030",
																	"id": 2136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21737:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2048_by_1",
																		"typeString": "int_const 2048"
																	},
																	"value": "0x800"
																},
																"src": "21733:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21745:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21733:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2148,
														"nodeType": "IfStatement",
														"src": "21729:88:0",
														"trueBody": {
															"expression": {
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2140,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21757:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2141,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21766:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303035384239304246424538453742444342453245",
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21775:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938489649734712806808010286_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...0286"
																			},
																			"value": "0x1000000000000058B90BFBE8E7BDCBE2E"
																		},
																		"src": "21766:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21814:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21766:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21757:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2147,
															"nodeType": "ExpressionStatement",
															"src": "21757:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2149,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21830:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078343030",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21834:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1024_by_1",
																		"typeString": "int_const 1024"
																	},
																	"value": "0x400"
																},
																"src": "21830:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21842:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21830:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2162,
														"nodeType": "IfStatement",
														"src": "21826:88:0",
														"trueBody": {
															"expression": {
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2154,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21854:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21863:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303032433543383546444634373344454138373146",
																			"id": 2156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21872:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938476556554660119287858975_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...8975"
																			},
																			"value": "0x100000000000002C5C85FDF473DEA871F"
																		},
																		"src": "21863:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21911:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21863:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21854:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2161,
															"nodeType": "ExpressionStatement",
															"src": "21854:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2163,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "21927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078323030",
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_512_by_1",
																		"typeString": "int_const 512"
																	},
																	"value": "0x200"
																},
																"src": "21927:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21927:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2176,
														"nodeType": "IfStatement",
														"src": "21923:88:0",
														"trueBody": {
															"expression": {
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2168,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "21951:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2169,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "21960:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303031363245343246454641333945463434443931",
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21969:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938470009964633775527972241_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2241"
																			},
																			"value": "0x10000000000000162E42FEFA39EF44D91"
																		},
																		"src": "21960:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22008:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "21960:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21951:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2175,
															"nodeType": "ExpressionStatement",
															"src": "21951:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2177,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22024:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "3078313030",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "0x100"
																},
																"src": "22024:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22036:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22024:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2190,
														"nodeType": "IfStatement",
														"src": "22020:88:0",
														"trueBody": {
															"expression": {
																"id": 2188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2182,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22048:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2183,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22057:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030423137323137463744314346373945393439",
																			"id": 2184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22066:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938466736669620603648076105_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...6105"
																			},
																			"value": "0x100000000000000B17217F7D1CF79E949"
																		},
																		"src": "22057:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22105:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22057:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22048:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2189,
															"nodeType": "ExpressionStatement",
															"src": "22048:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2191,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783830",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "0x80"
																},
																"src": "22121:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22132:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22121:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2204,
														"nodeType": "IfStatement",
														"src": "22117:87:0",
														"trueBody": {
															"expression": {
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2196,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22144:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2197,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22153:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030353842393042464245384537424345353434",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22162:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938465100022114017708139844_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...9844"
																			},
																			"value": "0x10000000000000058B90BFBE8E7BCE544"
																		},
																		"src": "22153:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22201:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22153:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22144:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2203,
															"nodeType": "ExpressionStatement",
															"src": "22144:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2205,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22217:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783430",
																	"id": 2206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22221:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "0x40"
																},
																"src": "22217:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22217:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2218,
														"nodeType": "IfStatement",
														"src": "22213:87:0",
														"trueBody": {
															"expression": {
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2210,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22240:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2211,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22249:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030324335433835464446343733444536454341",
																			"id": 2212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22258:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938464281698360724738174666_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...4666"
																			},
																			"value": "0x1000000000000002C5C85FDF473DE6ECA"
																		},
																		"src": "22249:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22297:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22249:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22240:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2217,
															"nodeType": "ExpressionStatement",
															"src": "22240:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22313:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783230",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22317:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "0x20"
																},
																"src": "22313:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22324:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22313:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2232,
														"nodeType": "IfStatement",
														"src": "22309:87:0",
														"trueBody": {
															"expression": {
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2224,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22336:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2225,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22345:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030313632453432464546413339454633363646",
																			"id": 2226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22354:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463872536484078253192815_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2815"
																			},
																			"value": "0x100000000000000162E42FEFA39EF366F"
																		},
																		"src": "22345:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22393:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22345:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22336:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2231,
															"nodeType": "ExpressionStatement",
															"src": "22336:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2233,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22409:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "30783130",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22413:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "0x10"
																},
																"src": "22409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22420:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22409:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2246,
														"nodeType": "IfStatement",
														"src": "22405:87:0",
														"trueBody": {
															"expression": {
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2238,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22432:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2239,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22441:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030304231373231374637443143463739414641",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22450:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463667955545755010702074_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2074"
																			},
																			"value": "0x1000000000000000B17217F7D1CF79AFA"
																		},
																		"src": "22441:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22489:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22441:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22432:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2245,
															"nodeType": "ExpressionStatement",
															"src": "22432:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2247,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22505:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307838",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22509:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "0x8"
																},
																"src": "22505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22515:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22505:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2260,
														"nodeType": "IfStatement",
														"src": "22501:86:0",
														"trueBody": {
															"expression": {
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2252,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22527:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2253,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22536:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030303538423930424642453845374243443644",
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22545:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463565665076593389456749_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...6749"
																			},
																			"value": "0x100000000000000058B90BFBE8E7BCD6D"
																		},
																		"src": "22536:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22584:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22536:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22527:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2259,
															"nodeType": "ExpressionStatement",
															"src": "22527:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2261,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22600:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307834",
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22604:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "0x4"
																},
																"src": "22600:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22610:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22600:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2274,
														"nodeType": "IfStatement",
														"src": "22596:86:0",
														"trueBody": {
															"expression": {
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2266,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22622:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2267,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22631:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030303243354338354644463437334445364232",
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22640:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463514519842012578834098_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...4098"
																			},
																			"value": "0x10000000000000002C5C85FDF473DE6B2"
																		},
																		"src": "22631:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22679:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22631:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22622:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2273,
															"nodeType": "ExpressionStatement",
															"src": "22622:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2275,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22695:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307832",
																	"id": 2276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22699:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "0x2"
																},
																"src": "22695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22705:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22695:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2288,
														"nodeType": "IfStatement",
														"src": "22691:86:0",
														"trueBody": {
															"expression": {
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2280,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22717:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22726:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030303136324534324645464133394546333538",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22735:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463488947224722173522776_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2776"
																			},
																			"value": "0x1000000000000000162E42FEFA39EF358"
																		},
																		"src": "22726:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22774:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22726:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22717:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2287,
															"nodeType": "ExpressionStatement",
															"src": "22717:60:0"
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2289,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "22790:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307831",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22794:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "0x1"
																},
																"src": "22790:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22800:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2302,
														"nodeType": "IfStatement",
														"src": "22786:86:0",
														"trueBody": {
															"expression": {
																"id": 2300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2294,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "22812:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2295,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "22821:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030303042313732313746374431434637394142",
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22830:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463476160916076970867115_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...7115"
																			},
																			"value": "0x10000000000000000B17217F7D1CF79AB"
																		},
																		"src": "22821:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "313238",
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22869:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	"src": "22821:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22812:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2301,
															"nodeType": "ExpressionStatement",
															"src": "22812:60:0"
														}
													},
													{
														"expression": {
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2303,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "22883:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				},
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3633",
																					"id": 2308,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "22911:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_63_by_1",
																						"typeString": "int_const 63"
																					},
																					"value": "63"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							},
																							"id": 2311,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2309,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1385,
																								"src": "22917:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int128",
																									"typeString": "int128"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">>",
																							"rightExpression": {
																								"hexValue": "3634",
																								"id": 2310,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "22922:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_64_by_1",
																									"typeString": "int_const 64"
																								},
																								"value": "64"
																							},
																							"src": "22917:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						}
																					],
																					"id": 2312,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "22916:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int128",
																						"typeString": "int128"
																					}
																				},
																				"src": "22911:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int128",
																					"typeString": "int128"
																				}
																			],
																			"id": 2307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22903:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2306,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22903:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22903:23:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22894:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2304,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22894:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22894:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22883:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2317,
														"nodeType": "ExpressionStatement",
														"src": "22883:44:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2319,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1404,
																		"src": "22945:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2324,
																						"name": "MAX_64x64",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 9,
																						"src": "22972:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int128",
																							"typeString": "int128"
																						}
																					],
																					"id": 2323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "22964:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 2322,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "22964:6:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22964:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22955:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2320,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22955:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22955:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22945:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2318,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "22936:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22936:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2329,
														"nodeType": "ExpressionStatement",
														"src": "22936:48:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2334,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1404,
																			"src": "23018:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23010:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2332,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "23010:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23010:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23002:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int128_$",
																	"typeString": "type(int128)"
																},
																"typeName": {
																	"id": 2330,
																	"name": "int128",
																	"nodeType": "ElementaryTypeName",
																	"src": "23002:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23002:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 1389,
														"id": 2337,
														"nodeType": "Return",
														"src": "22995:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "15876:176:0",
										"text": " Calculate binary exponent of x.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 2340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exp_2",
									"nameLocation": "16065:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "16079:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "16072:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1384,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "16072:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16071:10:0"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "16105:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1387,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "16105:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16104:8:0"
									},
									"scope": 2813,
									"src": "16056:6983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2376,
										"nodeType": "Block",
										"src": "23281:250:0",
										"statements": [
											{
												"id": 2375,
												"nodeType": "UncheckedBlock",
												"src": "23288:238:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2349,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2343,
																		"src": "23316:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "3078343030303030303030303030303030303030",
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23320:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1180591620717411303424_by_1",
																			"typeString": "int_const 1180591620717411303424"
																		},
																		"value": "0x400000000000000000"
																	},
																	"src": "23316:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2348,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "23307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23307:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2353,
														"nodeType": "ExpressionStatement",
														"src": "23307:34:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2354,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2343,
																"src": "23368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "23372:21:0",
																"subExpression": {
																	"hexValue": "3078343030303030303030303030303030303030",
																	"id": 2355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23373:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1180591620717411303424_by_1",
																		"typeString": "int_const 1180591620717411303424"
																	},
																	"value": "0x400000000000000000"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1180591620717411303424_by_1",
																	"typeString": "int_const -1180591620717411303424"
																}
															},
															"src": "23368:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2360,
														"nodeType": "IfStatement",
														"src": "23364:39:0",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23402:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2347,
															"id": 2359,
															"nodeType": "Return",
															"src": "23395:8:0"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2369,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2366,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2343,
																							"src": "23469:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_int128",
																								"typeString": "int128"
																							}
																						],
																						"id": 2365,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "23461:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_int256_$",
																							"typeString": "type(int256)"
																						},
																						"typeName": {
																							"id": 2364,
																							"name": "int256",
																							"nodeType": "ElementaryTypeName",
																							"src": "23461:6:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23461:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "3078313731353437363532423832464531373737443046464441304432334137443132",
																					"id": 2368,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "23474:35:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_490923683258796565746369346286093237522_by_1",
																						"typeString": "int_const 4909...(31 digits omitted)...7522"
																					},
																					"value": "0x171547652B82FE1777D0FFDA0D23A7D12"
																				},
																				"src": "23461:48:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "313238",
																				"id": 2370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23513:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_128_by_1",
																					"typeString": "int_const 128"
																				},
																				"value": "128"
																			},
																			"src": "23461:55:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23453:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int128_$",
																			"typeString": "type(int128)"
																		},
																		"typeName": {
																			"id": 2362,
																			"name": "int128",
																			"nodeType": "ElementaryTypeName",
																			"src": "23453:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23453:64:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int128",
																		"typeString": "int128"
																	}
																],
																"id": 2361,
																"name": "exp_2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2340,
																"src": "23434:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_int128_$returns$_t_int128_$",
																	"typeString": "function (int128) pure returns (int128)"
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23434:84:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int128",
																"typeString": "int128"
															}
														},
														"functionReturnParameters": 2347,
														"id": 2374,
														"nodeType": "Return",
														"src": "23427:91:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2341,
										"nodeType": "StructuredDocumentation",
										"src": "23045:177:0",
										"text": " Calculate natural exponent of x.  Revert on overflow.\n @param x signed 64.64-bit fixed point number\n @return signed 64.64-bit fixed point number"
									},
									"id": 2377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exp",
									"nameLocation": "23235:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "23247:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "23240:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2342,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "23240:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23239:10:0"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "23273:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2345,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "23273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23272:8:0"
									},
									"scope": 2813,
									"src": "23226:305:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2606,
										"nodeType": "Block",
										"src": "23914:1270:0",
										"statements": [
											{
												"id": 2605,
												"nodeType": "UncheckedBlock",
												"src": "23921:1258:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2388,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "23949:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "23949:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2387,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "23940:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23940:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2392,
														"nodeType": "ExpressionStatement",
														"src": "23940:16:0"
													},
													{
														"assignments": [
															2394
														],
														"declarations": [
															{
																"constant": false,
																"id": 2394,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23975:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 2605,
																"src": "23967:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2393,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23967:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2395,
														"nodeType": "VariableDeclarationStatement",
														"src": "23967:14:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2396,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2380,
																"src": "23996:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3078464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24001:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
																	"typeString": "int_const 6277...(50 digits omitted)...2895"
																},
																"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
															},
															"src": "23996:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2592,
															"nodeType": "Block",
															"src": "24098:977:0",
															"statements": [
																{
																	"assignments": [
																		2409
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2409,
																			"mutability": "mutable",
																			"name": "msb",
																			"nameLocation": "24117:3:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2592,
																			"src": "24109:11:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2408,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24109:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2411,
																	"initialValue": {
																		"hexValue": "313932",
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24123:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24109:17:0"
																},
																{
																	"assignments": [
																		2413
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2413,
																			"mutability": "mutable",
																			"name": "xc",
																			"nameLocation": "24145:2:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2592,
																			"src": "24137:10:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2412,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24137:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2417,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2414,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "24150:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "313932",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24155:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_192_by_1",
																				"typeString": "int_const 192"
																			},
																			"value": "192"
																		},
																		"src": "24150:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24137:21:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2418,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "24173:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030",
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24179:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967296_by_1",
																				"typeString": "int_const 4294967296"
																			},
																			"value": "0x100000000"
																		},
																		"src": "24173:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2430,
																	"nodeType": "IfStatement",
																	"src": "24169:48:0",
																	"trueBody": {
																		"id": 2429,
																		"nodeType": "Block",
																		"src": "24192:25:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2423,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2421,
																						"name": "xc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2413,
																						"src": "24194:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "3332",
																						"id": 2422,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24201:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"src": "24194:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2424,
																				"nodeType": "ExpressionStatement",
																				"src": "24194:9:0"
																			},
																			{
																				"expression": {
																					"id": 2427,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2425,
																						"name": "msb",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2409,
																						"src": "24205:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "3332",
																						"id": 2426,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24212:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"src": "24205:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2428,
																				"nodeType": "ExpressionStatement",
																				"src": "24205:9:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2431,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "24231:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30783130303030",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24237:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65536_by_1",
																				"typeString": "int_const 65536"
																			},
																			"value": "0x10000"
																		},
																		"src": "24231:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2443,
																	"nodeType": "IfStatement",
																	"src": "24227:44:0",
																	"trueBody": {
																		"id": 2442,
																		"nodeType": "Block",
																		"src": "24246:25:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2434,
																						"name": "xc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2413,
																						"src": "24248:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "3136",
																						"id": 2435,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24255:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_16_by_1",
																							"typeString": "int_const 16"
																						},
																						"value": "16"
																					},
																					"src": "24248:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2437,
																				"nodeType": "ExpressionStatement",
																				"src": "24248:9:0"
																			},
																			{
																				"expression": {
																					"id": 2440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2438,
																						"name": "msb",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2409,
																						"src": "24259:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "3136",
																						"id": 2439,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24266:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_16_by_1",
																							"typeString": "int_const 16"
																						},
																						"value": "16"
																					},
																					"src": "24259:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2441,
																				"nodeType": "ExpressionStatement",
																				"src": "24259:9:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2444,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "24285:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "3078313030",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24291:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "0x100"
																		},
																		"src": "24285:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2456,
																	"nodeType": "IfStatement",
																	"src": "24281:40:0",
																	"trueBody": {
																		"id": 2455,
																		"nodeType": "Block",
																		"src": "24298:23:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2447,
																						"name": "xc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2413,
																						"src": "24300:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "38",
																						"id": 2448,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24307:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "24300:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2450,
																				"nodeType": "ExpressionStatement",
																				"src": "24300:8:0"
																			},
																			{
																				"expression": {
																					"id": 2453,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2451,
																						"name": "msb",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2409,
																						"src": "24310:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "38",
																						"id": 2452,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24317:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "24310:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2454,
																				"nodeType": "ExpressionStatement",
																				"src": "24310:8:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2457,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "24335:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30783130",
																			"id": 2458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24341:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "0x10"
																		},
																		"src": "24335:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2469,
																	"nodeType": "IfStatement",
																	"src": "24331:39:0",
																	"trueBody": {
																		"id": 2468,
																		"nodeType": "Block",
																		"src": "24347:23:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2460,
																						"name": "xc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2413,
																						"src": "24349:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "34",
																						"id": 2461,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24356:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					},
																					"src": "24349:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2463,
																				"nodeType": "ExpressionStatement",
																				"src": "24349:8:0"
																			},
																			{
																				"expression": {
																					"id": 2466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2464,
																						"name": "msb",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2409,
																						"src": "24359:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "34",
																						"id": 2465,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24366:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					},
																					"src": "24359:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2467,
																				"nodeType": "ExpressionStatement",
																				"src": "24359:8:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2470,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "24384:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "307834",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24390:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "0x4"
																		},
																		"src": "24384:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2482,
																	"nodeType": "IfStatement",
																	"src": "24380:38:0",
																	"trueBody": {
																		"id": 2481,
																		"nodeType": "Block",
																		"src": "24395:23:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2475,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2473,
																						"name": "xc",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2413,
																						"src": "24397:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "32",
																						"id": 2474,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24404:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "24397:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2476,
																				"nodeType": "ExpressionStatement",
																				"src": "24397:8:0"
																			},
																			{
																				"expression": {
																					"id": 2479,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2477,
																						"name": "msb",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2409,
																						"src": "24407:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "32",
																						"id": 2478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24414:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "24407:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2480,
																				"nodeType": "ExpressionStatement",
																				"src": "24407:8:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2483,
																			"name": "xc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "24432:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "307832",
																			"id": 2484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24438:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "0x2"
																		},
																		"src": "24432:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2490,
																	"nodeType": "IfStatement",
																	"src": "24428:23:0",
																	"trueBody": {
																		"expression": {
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2486,
																				"name": "msb",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2409,
																				"src": "24443:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 2487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24450:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "24443:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2489,
																		"nodeType": "ExpressionStatement",
																		"src": "24443:8:0"
																	}
																},
																{
																	"expression": {
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2491,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "24496:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2492,
																							"name": "x",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2380,
																							"src": "24506:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2495,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "323535",
																								"id": 2493,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "24511:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_255_by_1",
																									"typeString": "int_const 255"
																								},
																								"value": "255"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 2494,
																								"name": "msb",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2409,
																								"src": "24517:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "24511:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "24506:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2497,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "24505:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2504,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2500,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2498,
																											"name": "y",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2382,
																											"src": "24526:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 2499,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "24530:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "24526:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2503,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2501,
																											"name": "msb",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2409,
																											"src": "24535:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "313931",
																											"id": 2502,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "24541:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_191_by_1",
																												"typeString": "int_const 191"
																											},
																											"value": "191"
																										},
																										"src": "24535:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "24526:18:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 2505,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "24525:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2506,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "24548:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "24525:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2508,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "24524:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24505:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24496:54:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2511,
																	"nodeType": "ExpressionStatement",
																	"src": "24496:54:0"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2513,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2394,
																					"src": "24570:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "30784646464646464646464646464646464646464646464646464646464646464646",
																					"id": 2514,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24580:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																						"typeString": "int_const 3402...(31 digits omitted)...1455"
																					},
																					"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																				},
																				"src": "24570:44:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 2512,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "24561:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24561:54:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2517,
																	"nodeType": "ExpressionStatement",
																	"src": "24561:54:0"
																},
																{
																	"assignments": [
																		2519
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2519,
																			"mutability": "mutable",
																			"name": "hi",
																			"nameLocation": "24636:2:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2592,
																			"src": "24628:10:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2518,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24628:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2526,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2520,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "24641:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2521,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2382,
																						"src": "24651:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">>",
																					"rightExpression": {
																						"hexValue": "313238",
																						"id": 2522,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24656:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_128_by_1",
																							"typeString": "int_const 128"
																						},
																						"value": "128"
																					},
																					"src": "24651:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2524,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "24650:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24641:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24628:32:0"
																},
																{
																	"assignments": [
																		2528
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2528,
																			"mutability": "mutable",
																			"name": "lo",
																			"nameLocation": "24679:2:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2592,
																			"src": "24671:10:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2527,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24671:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2535,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2529,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "24684:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2532,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2530,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2382,
																						"src": "24694:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"hexValue": "30784646464646464646464646464646464646464646464646464646464646464646",
																						"id": 2531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24698:34:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																							"typeString": "int_const 3402...(31 digits omitted)...1455"
																						},
																						"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																					},
																					"src": "24694:38:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2533,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "24693:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24684:49:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24671:62:0"
																},
																{
																	"assignments": [
																		2537
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2537,
																			"mutability": "mutable",
																			"name": "xh",
																			"nameLocation": "24754:2:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2592,
																			"src": "24746:10:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2536,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24746:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2541,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2538,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "24759:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "313932",
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24764:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_192_by_1",
																				"typeString": "int_const 192"
																			},
																			"value": "192"
																		},
																		"src": "24759:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24746:21:0"
																},
																{
																	"assignments": [
																		2543
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2543,
																			"mutability": "mutable",
																			"name": "xl",
																			"nameLocation": "24786:2:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2592,
																			"src": "24778:10:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2542,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24778:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2547,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2544,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2380,
																			"src": "24791:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24796:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24791:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24778:20:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2548,
																			"name": "xl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "24815:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2549,
																			"name": "lo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "24820:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24815:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2555,
																	"nodeType": "IfStatement",
																	"src": "24811:20:0",
																	"trueBody": {
																		"expression": {
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2551,
																				"name": "xh",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "24824:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 2552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24830:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "24824:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2554,
																		"nodeType": "ExpressionStatement",
																		"src": "24824:7:0"
																	}
																},
																{
																	"expression": {
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2556,
																			"name": "xl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "24842:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 2557,
																			"name": "lo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "24848:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24842:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2559,
																	"nodeType": "ExpressionStatement",
																	"src": "24842:8:0"
																},
																{
																	"expression": {
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2560,
																			"name": "lo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "24898:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2561,
																				"name": "hi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2519,
																				"src": "24903:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "313238",
																				"id": 2562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24909:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_128_by_1",
																					"typeString": "int_const 128"
																				},
																				"value": "128"
																			},
																			"src": "24903:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24898:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2565,
																	"nodeType": "ExpressionStatement",
																	"src": "24898:14:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2566,
																			"name": "xl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "24927:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2567,
																			"name": "lo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "24932:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24927:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2573,
																	"nodeType": "IfStatement",
																	"src": "24923:20:0",
																	"trueBody": {
																		"expression": {
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2569,
																				"name": "xh",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2537,
																				"src": "24936:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 2570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24942:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "24936:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2572,
																		"nodeType": "ExpressionStatement",
																		"src": "24936:7:0"
																	}
																},
																{
																	"expression": {
																		"id": 2576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "xl",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2543,
																			"src": "24954:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 2575,
																			"name": "lo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2528,
																			"src": "24960:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24954:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2577,
																	"nodeType": "ExpressionStatement",
																	"src": "24954:8:0"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2579,
																					"name": "xh",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2537,
																					"src": "25020:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2582,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2580,
																						"name": "hi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2519,
																						"src": "25026:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">>",
																					"rightExpression": {
																						"hexValue": "313238",
																						"id": 2581,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25032:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_128_by_1",
																							"typeString": "int_const 128"
																						},
																						"value": "128"
																					},
																					"src": "25026:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25020:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 2578,
																			"name": "assert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967293,
																			"src": "25012:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 2584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25012:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2585,
																	"nodeType": "ExpressionStatement",
																	"src": "25012:24:0"
																},
																{
																	"expression": {
																		"id": 2590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2586,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "25049:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2587,
																				"name": "xl",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2543,
																				"src": "25059:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2588,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2382,
																				"src": "25064:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25059:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25049:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2591,
																	"nodeType": "ExpressionStatement",
																	"src": "25049:16:0"
																}
															]
														},
														"id": 2593,
														"nodeType": "IfStatement",
														"src": "23992:1083:0",
														"trueBody": {
															"expression": {
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2399,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "24062:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2400,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2380,
																					"src": "24072:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "3634",
																					"id": 2401,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "24077:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_64_by_1",
																						"typeString": "int_const 64"
																					},
																					"value": "64"
																				},
																				"src": "24072:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2403,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "24071:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2404,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "24083:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "24071:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24062:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2407,
															"nodeType": "ExpressionStatement",
															"src": "24062:22:0"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2595,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2394,
																		"src": "25094:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "30784646464646464646464646464646464646464646464646464646464646464646",
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25104:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																	},
																	"src": "25094:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2594,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "25085:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25085:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2599,
														"nodeType": "ExpressionStatement",
														"src": "25085:54:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2602,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "25164:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25155:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint128_$",
																	"typeString": "type(uint128)"
																},
																"typeName": {
																	"id": 2600,
																	"name": "uint128",
																	"nodeType": "ElementaryTypeName",
																	"src": "25155:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25155:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"functionReturnParameters": 2386,
														"id": 2604,
														"nodeType": "Return",
														"src": "25148:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2378,
										"nodeType": "StructuredDocumentation",
										"src": "23537:304:0",
										"text": " Calculate x / y rounding towards zero, where x and y are unsigned 256-bit\n integer numbers.  Revert on overflow or when y is zero.\n @param x unsigned 256-bit integer number\n @param y unsigned 256-bit integer number\n @return unsigned 64.64-bit fixed point number"
									},
									"id": 2607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divuu",
									"nameLocation": "23854:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "23869:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "23861:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "23880:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "23872:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23860:22:0"
									},
									"returnParameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "23905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2384,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "23905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23904:9:0"
									},
									"scope": 2813,
									"src": "23845:1339:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "25451:847:0",
										"statements": [
											{
												"id": 2810,
												"nodeType": "UncheckedBlock",
												"src": "25458:835:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2615,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2610,
																"src": "25481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25486:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25481:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2808,
															"nodeType": "Block",
															"src": "25511:775:0",
															"statements": [
																{
																	"assignments": [
																		2621
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2621,
																			"mutability": "mutable",
																			"name": "xx",
																			"nameLocation": "25530:2:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2808,
																			"src": "25522:10:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2620,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "25522:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2623,
																	"initialValue": {
																		"id": 2622,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2610,
																		"src": "25535:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "25522:14:0"
																},
																{
																	"assignments": [
																		2625
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2625,
																			"mutability": "mutable",
																			"name": "r",
																			"nameLocation": "25555:1:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2808,
																			"src": "25547:9:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2624,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "25547:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2627,
																	"initialValue": {
																		"hexValue": "31",
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25559:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "25547:13:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2628,
																			"name": "xx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "25575:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
																			"id": 2629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25581:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1456"
																			},
																			"value": "0x100000000000000000000000000000000"
																		},
																		"src": "25575:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2640,
																	"nodeType": "IfStatement",
																	"src": "25571:72:0",
																	"trueBody": {
																		"id": 2639,
																		"nodeType": "Block",
																		"src": "25618:25:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2633,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2631,
																						"name": "xx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2621,
																						"src": "25620:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "313238",
																						"id": 2632,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25627:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_128_by_1",
																							"typeString": "int_const 128"
																						},
																						"value": "128"
																					},
																					"src": "25620:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2634,
																				"nodeType": "ExpressionStatement",
																				"src": "25620:10:0"
																			},
																			{
																				"expression": {
																					"id": 2637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2635,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "25632:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "3634",
																						"id": 2636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25638:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_64_by_1",
																							"typeString": "int_const 64"
																						},
																						"value": "64"
																					},
																					"src": "25632:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2638,
																				"nodeType": "ExpressionStatement",
																				"src": "25632:8:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2641,
																			"name": "xx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "25657:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30783130303030303030303030303030303030",
																			"id": 2642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25663:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18446744073709551616_by_1",
																				"typeString": "int_const 18446744073709551616"
																			},
																			"value": "0x10000000000000000"
																		},
																		"src": "25657:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2653,
																	"nodeType": "IfStatement",
																	"src": "25653:55:0",
																	"trueBody": {
																		"id": 2652,
																		"nodeType": "Block",
																		"src": "25684:24:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2644,
																						"name": "xx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2621,
																						"src": "25686:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "3634",
																						"id": 2645,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25693:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_64_by_1",
																							"typeString": "int_const 64"
																						},
																						"value": "64"
																					},
																					"src": "25686:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2647,
																				"nodeType": "ExpressionStatement",
																				"src": "25686:9:0"
																			},
																			{
																				"expression": {
																					"id": 2650,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2648,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "25697:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "3332",
																						"id": 2649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25703:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"src": "25697:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2651,
																				"nodeType": "ExpressionStatement",
																				"src": "25697:8:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2654,
																			"name": "xx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "25722:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "3078313030303030303030",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25728:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4294967296_by_1",
																				"typeString": "int_const 4294967296"
																			},
																			"value": "0x100000000"
																		},
																		"src": "25722:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2666,
																	"nodeType": "IfStatement",
																	"src": "25718:47:0",
																	"trueBody": {
																		"id": 2665,
																		"nodeType": "Block",
																		"src": "25741:24:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2659,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2657,
																						"name": "xx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2621,
																						"src": "25743:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "3332",
																						"id": 2658,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25750:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"src": "25743:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2660,
																				"nodeType": "ExpressionStatement",
																				"src": "25743:9:0"
																			},
																			{
																				"expression": {
																					"id": 2663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2661,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "25754:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "3136",
																						"id": 2662,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25760:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_16_by_1",
																							"typeString": "int_const 16"
																						},
																						"value": "16"
																					},
																					"src": "25754:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2664,
																				"nodeType": "ExpressionStatement",
																				"src": "25754:8:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2667,
																			"name": "xx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "25779:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30783130303030",
																			"id": 2668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25785:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_65536_by_1",
																				"typeString": "int_const 65536"
																			},
																			"value": "0x10000"
																		},
																		"src": "25779:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2679,
																	"nodeType": "IfStatement",
																	"src": "25775:42:0",
																	"trueBody": {
																		"id": 2678,
																		"nodeType": "Block",
																		"src": "25794:23:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2672,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2670,
																						"name": "xx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2621,
																						"src": "25796:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "3136",
																						"id": 2671,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25803:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_16_by_1",
																							"typeString": "int_const 16"
																						},
																						"value": "16"
																					},
																					"src": "25796:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2673,
																				"nodeType": "ExpressionStatement",
																				"src": "25796:9:0"
																			},
																			{
																				"expression": {
																					"id": 2676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2674,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "25807:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "38",
																						"id": 2675,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25813:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "25807:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2677,
																				"nodeType": "ExpressionStatement",
																				"src": "25807:7:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2680,
																			"name": "xx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "25831:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "3078313030",
																			"id": 2681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25837:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "0x100"
																		},
																		"src": "25831:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2692,
																	"nodeType": "IfStatement",
																	"src": "25827:39:0",
																	"trueBody": {
																		"id": 2691,
																		"nodeType": "Block",
																		"src": "25844:22:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2685,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2683,
																						"name": "xx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2621,
																						"src": "25846:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "38",
																						"id": 2684,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25853:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "25846:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2686,
																				"nodeType": "ExpressionStatement",
																				"src": "25846:8:0"
																			},
																			{
																				"expression": {
																					"id": 2689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2687,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "25856:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "34",
																						"id": 2688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25862:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					},
																					"src": "25856:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2690,
																				"nodeType": "ExpressionStatement",
																				"src": "25856:7:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2693,
																			"name": "xx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "25880:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30783130",
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25886:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "0x10"
																		},
																		"src": "25880:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2705,
																	"nodeType": "IfStatement",
																	"src": "25876:38:0",
																	"trueBody": {
																		"id": 2704,
																		"nodeType": "Block",
																		"src": "25892:22:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2698,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2696,
																						"name": "xx",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2621,
																						"src": "25894:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": ">>=",
																					"rightHandSide": {
																						"hexValue": "34",
																						"id": 2697,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25901:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4_by_1",
																							"typeString": "int_const 4"
																						},
																						"value": "4"
																					},
																					"src": "25894:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2699,
																				"nodeType": "ExpressionStatement",
																				"src": "25894:8:0"
																			},
																			{
																				"expression": {
																					"id": 2702,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2700,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "25904:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "32",
																						"id": 2701,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25910:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "25904:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2703,
																				"nodeType": "ExpressionStatement",
																				"src": "25904:7:0"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2706,
																			"name": "xx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2621,
																			"src": "25928:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "307838",
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25934:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "0x8"
																		},
																		"src": "25928:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2714,
																	"nodeType": "IfStatement",
																	"src": "25924:27:0",
																	"trueBody": {
																		"id": 2713,
																		"nodeType": "Block",
																		"src": "25939:12:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2709,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "25941:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "<<=",
																					"rightHandSide": {
																						"hexValue": "31",
																						"id": 2710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25947:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "25941:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2712,
																				"nodeType": "ExpressionStatement",
																				"src": "25941:7:0"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "25961:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2720,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2716,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "25966:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2719,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2717,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2610,
																								"src": "25970:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2718,
																								"name": "r",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "25974:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "25970:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "25966:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2721,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "25965:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "25980:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "25965:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25961:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "25961:20:0"
																},
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2726,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "25992:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2731,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2727,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "25997:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2730,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2728,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2610,
																								"src": "26001:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2729,
																								"name": "r",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "26005:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "26001:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "25997:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2732,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "25996:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26011:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "25996:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25992:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "25992:20:0"
																},
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "26023:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2742,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2738,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "26028:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2741,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2739,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2610,
																								"src": "26032:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2740,
																								"name": "r",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "26036:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "26032:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "26028:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2743,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26027:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26042:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26027:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26023:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "26023:20:0"
																},
																{
																	"expression": {
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "26054:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2753,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2749,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "26059:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2752,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2750,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2610,
																								"src": "26063:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2751,
																								"name": "r",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "26067:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "26063:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "26059:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2754,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26058:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26073:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26058:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26054:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2758,
																	"nodeType": "ExpressionStatement",
																	"src": "26054:20:0"
																},
																{
																	"expression": {
																		"id": 2768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2759,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "26085:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2764,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2760,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "26090:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2763,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2761,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2610,
																								"src": "26094:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2762,
																								"name": "r",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "26098:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "26094:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "26090:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2765,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26089:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26104:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26089:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26085:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2769,
																	"nodeType": "ExpressionStatement",
																	"src": "26085:20:0"
																},
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2770,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "26116:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2775,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2771,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "26121:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2774,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2772,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2610,
																								"src": "26125:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2773,
																								"name": "r",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "26129:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "26125:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "26121:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2776,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26120:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26135:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26120:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26116:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "26116:20:0"
																},
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2781,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "26147:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2786,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2782,
																							"name": "r",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2625,
																							"src": "26152:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2785,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2783,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2610,
																								"src": "26156:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 2784,
																								"name": "r",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2625,
																								"src": "26160:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "26156:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "26152:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2787,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "26151:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2788,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26166:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "26151:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26147:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "26147:20:0"
																},
																{
																	"assignments": [
																		2793
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2793,
																			"mutability": "mutable",
																			"name": "r1",
																			"nameLocation": "26223:2:0",
																			"nodeType": "VariableDeclaration",
																			"scope": 2808,
																			"src": "26215:10:0",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2792,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "26215:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2797,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2794,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2610,
																			"src": "26228:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2795,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2625,
																			"src": "26232:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26228:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "26215:18:0"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2802,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2800,
																						"name": "r",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2625,
																						"src": "26260:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<",
																					"rightExpression": {
																						"id": 2801,
																						"name": "r1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2793,
																						"src": "26264:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26260:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseExpression": {
																					"id": 2804,
																					"name": "r1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2793,
																					"src": "26273:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "Conditional",
																				"src": "26260:15:0",
																				"trueExpression": {
																					"id": 2803,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2625,
																					"src": "26269:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26251:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 2798,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "26251:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26251:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"functionReturnParameters": 2614,
																	"id": 2807,
																	"nodeType": "Return",
																	"src": "26244:32:0"
																}
															]
														},
														"id": 2809,
														"nodeType": "IfStatement",
														"src": "25477:809:0",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2614,
															"id": 2619,
															"nodeType": "Return",
															"src": "25489:8:0"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2608,
										"nodeType": "StructuredDocumentation",
										"src": "25190:199:0",
										"text": " Calculate sqrt (x) rounding down, where x is unsigned 256-bit integer\n number.\n @param x unsigned 256-bit integer number\n @return unsigned 128-bit integer number"
									},
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrtu",
									"nameLocation": "25402:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "25417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "25409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25408:11:0"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "25442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2612,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "25442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25441:9:0"
									},
									"scope": 2813,
									"src": "25393:905:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2814,
							"src": "681:25620:0",
							"usedErrors": []
						}
					],
					"src": "196:26105:0"
				},
				"id": 0
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2891
						]
					},
					"id": 2892,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2815,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2816,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2891,
							"linearizedBaseContracts": [
								2891
							],
							"name": "IERC20",
							"nameLocation": "197:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2817,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2822,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:1"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "327:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:1"
									},
									"scope": 2891,
									"src": "281:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2823,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:1"
									},
									"returnParameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2830,
												"src": "478:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:1"
									},
									"scope": 2891,
									"src": "419:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "725:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "744:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:1"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "778:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:1"
									},
									"scope": 2891,
									"src": "707:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2841,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "1078:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "1093:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:1"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "1133:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:1"
									},
									"scope": 2891,
									"src": "1059:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2851,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1812:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1829:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:1"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "1863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:1"
									},
									"scope": 2891,
									"src": "1795:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2861,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "2207:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "2231:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "2258:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:1"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "2297:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:1"
									},
									"scope": 2891,
									"src": "2176:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 2881,
									"name": "Transfer",
									"nameLocation": "2478:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2487:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2509:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2879,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2881,
												"src": "2529:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:1"
									},
									"src": "2472:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2882,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 2890,
									"name": "Approval",
									"nameLocation": "2709:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "2718:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2886,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "2741:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "2766:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:1"
									},
									"src": "2703:78:1"
								}
							],
							"scope": 2892,
							"src": "187:2596:1",
							"usedErrors": []
						}
					],
					"src": "91:2693:1"
				},
				"id": 1
			},
			"WandInstruments.sol": {
				"ast": {
					"absolutePath": "WandInstruments.sol",
					"exportedSymbols": {
						"ABDKMath64x64": [
							2813
						],
						"Baton": [
							3448
						],
						"ERC20Interface": [
							3440
						],
						"IERC20": [
							2891
						],
						"SignedSafeMath": [
							3071
						],
						"WandInstruments": [
							3432
						]
					},
					"id": 3449,
					"license": "MIT LICENSE",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:2"
						},
						{
							"absolutePath": "ABDKMath64x64.sol",
							"file": "./ABDKMath64x64.sol",
							"id": 2894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3449,
							"sourceUnit": 2814,
							"src": "72:29:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3449,
							"sourceUnit": 2892,
							"src": "103:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3071,
							"linearizedBaseContracts": [
								3071
							],
							"name": "SignedSafeMath",
							"nameLocation": "135:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2901,
									"mutability": "constant",
									"name": "_INT256_MIN",
									"nameLocation": "181:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 3071,
									"src": "157:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2896,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "157:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										},
										"id": 2900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 2898,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "-",
											"prefix": true,
											"src": "195:2:2",
											"subExpression": {
												"hexValue": "32",
												"id": 2897,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "196:1:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"typeDescriptions": {
												"typeIdentifier": "t_rational_minus_2_by_1",
												"typeString": "int_const -2"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "323535",
											"id": 2899,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "199:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_255_by_1",
												"typeString": "int_const 255"
											},
											"value": "255"
										},
										"src": "195:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2949,
										"nodeType": "Block",
										"src": "524:504:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2911,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2904,
														"src": "760:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "765:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "760:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2917,
												"nodeType": "IfStatement",
												"src": "756:47:2",
												"trueBody": {
													"id": 2916,
													"nodeType": "Block",
													"src": "768:35:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2910,
															"id": 2915,
															"nodeType": "Return",
															"src": "783:8:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "823:30:2",
															"subExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2919,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2904,
																				"src": "825:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2921,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "830:2:2",
																				"subExpression": {
																					"hexValue": "31",
																					"id": 2920,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "831:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_minus_1_by_1",
																					"typeString": "int_const -1"
																				}
																			},
																			"src": "825:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2923,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2906,
																				"src": "836:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2924,
																				"name": "_INT256_MIN",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2901,
																				"src": "841:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "836:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "825:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2927,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "824:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "855:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															},
															"value": "SignedSafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															}
														],
														"id": 2918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "815:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "815:82:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2931,
												"nodeType": "ExpressionStatement",
												"src": "815:82:2"
											},
											{
												"assignments": [
													2933
												],
												"declarations": [
													{
														"constant": false,
														"id": 2933,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "917:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 2949,
														"src": "910:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2932,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "910:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2937,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2934,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2904,
														"src": "921:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2935,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2906,
														"src": "925:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "910:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2939,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2933,
																	"src": "945:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2940,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2904,
																	"src": "949:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "945:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2942,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2906,
																"src": "954:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "945:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 2944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "957:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															},
															"value": "SignedSafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a608fbdf6cc4ee9c43b141f63e234f4edb26cfb78aba3140cfd865641cb2c954",
																"typeString": "literal_string \"SignedSafeMath: multiplication overflow\""
															}
														],
														"id": 2938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "937:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "937:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2946,
												"nodeType": "ExpressionStatement",
												"src": "937:62:2"
											},
											{
												"expression": {
													"id": 2947,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2933,
													"src": "1019:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2910,
												"id": 2948,
												"nodeType": "Return",
												"src": "1012:8:2"
											}
										]
									},
									"documentation": {
										"id": 2902,
										"nodeType": "StructuredDocumentation",
										"src": "211:243:2",
										"text": " @dev Returns the multiplication of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "469:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "480:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "473:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2903,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "490:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "483:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2905,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "483:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:20:2"
									},
									"returnParameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2950,
												"src": "516:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2908,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "516:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:8:2"
									},
									"scope": 3071,
									"src": "460:568:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "1566:207:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2961,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2955,
																"src": "1585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1590:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e6564536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1593:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd",
																"typeString": "literal_string \"SignedSafeMath: division by zero\""
															},
															"value": "SignedSafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebc4d0068c2e029285c70894a725032247a74fcdc822ba305ea67dbddf7750bd",
																"typeString": "literal_string \"SignedSafeMath: division by zero\""
															}
														],
														"id": 2960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2966,
												"nodeType": "ExpressionStatement",
												"src": "1577:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1647:30:2",
															"subExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2968,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2955,
																				"src": "1649:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "1654:2:2",
																				"subExpression": {
																					"hexValue": "31",
																					"id": 2969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1655:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_minus_1_by_1",
																					"typeString": "int_const -1"
																				}
																			},
																			"src": "1649:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2972,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2953,
																				"src": "1660:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2973,
																				"name": "_INT256_MIN",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2901,
																				"src": "1665:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "1660:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1649:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1648:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e6564536166654d6174683a206469766973696f6e206f766572666c6f77",
															"id": 2978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1679:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81",
																"typeString": "literal_string \"SignedSafeMath: division overflow\""
															},
															"value": "SignedSafeMath: division overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bc0f3df013376568eb9f7cb8999198097051f79bdb4d07d83447767f5224b81",
																"typeString": "literal_string \"SignedSafeMath: division overflow\""
															}
														],
														"id": 2967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1639:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2980,
												"nodeType": "ExpressionStatement",
												"src": "1639:76:2"
											},
											{
												"assignments": [
													2982
												],
												"declarations": [
													{
														"constant": false,
														"id": 2982,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1735:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 2989,
														"src": "1728:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2981,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2986,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2983,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2953,
														"src": "1739:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2984,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2955,
														"src": "1743:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1739:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1728:16:2"
											},
											{
												"expression": {
													"id": 2987,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2982,
													"src": "1764:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2959,
												"id": 2988,
												"nodeType": "Return",
												"src": "1757:8:2"
											}
										]
									},
									"documentation": {
										"id": 2951,
										"nodeType": "StructuredDocumentation",
										"src": "1036:460:2",
										"text": " @dev Returns the integer division of two signed integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1511:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "1515:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2952,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1532:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "1525:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2954,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:20:2"
									},
									"returnParameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "1558:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2957,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1557:8:2"
									},
									"scope": 3071,
									"src": "1502:271:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3029,
										"nodeType": "Block",
										"src": "2088:154:2",
										"statements": [
											{
												"assignments": [
													3001
												],
												"declarations": [
													{
														"constant": false,
														"id": 3001,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2106:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 3029,
														"src": "2099:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3000,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2099:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3005,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3002,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2993,
														"src": "2110:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3003,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2995,
														"src": "2114:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2099:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3007,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2995,
																				"src": "2135:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2140:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2135:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3010,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3001,
																				"src": "2145:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 3011,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2993,
																				"src": "2150:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2145:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2135:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3014,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2134:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3015,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2995,
																				"src": "2157:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2161:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2157:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3018,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3001,
																				"src": "2166:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 3019,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2993,
																				"src": "2170:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2166:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2157:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3022,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2156:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2134:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e6564536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2174:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dfe37ab0612d67daeef366062296f3ebcaf7e2cc3eb392bf66a6cb5a7bed3bcd",
																"typeString": "literal_string \"SignedSafeMath: subtraction overflow\""
															},
															"value": "SignedSafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dfe37ab0612d67daeef366062296f3ebcaf7e2cc3eb392bf66a6cb5a7bed3bcd",
																"typeString": "literal_string \"SignedSafeMath: subtraction overflow\""
															}
														],
														"id": 3006,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3026,
												"nodeType": "ExpressionStatement",
												"src": "2126:87:2"
											},
											{
												"expression": {
													"id": 3027,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3001,
													"src": "2233:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2999,
												"id": 3028,
												"nodeType": "Return",
												"src": "2226:8:2"
											}
										]
									},
									"documentation": {
										"id": 2991,
										"nodeType": "StructuredDocumentation",
										"src": "1781:237:2",
										"text": " @dev Returns the subtraction of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2033:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2044:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "2037:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2992,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2037:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2054:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "2047:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2994,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2036:20:2"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "2080:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2997,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:8:2"
									},
									"scope": 3071,
									"src": "2024:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3069,
										"nodeType": "Block",
										"src": "2551:151:2",
										"statements": [
											{
												"assignments": [
													3041
												],
												"declarations": [
													{
														"constant": false,
														"id": 3041,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2569:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 3069,
														"src": "2562:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3040,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "2562:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3045,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3042,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3033,
														"src": "2573:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3043,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3035,
														"src": "2577:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2573:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:16:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3047,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3035,
																				"src": "2598:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2603:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2598:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3050,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3041,
																				"src": "2608:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 3051,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3033,
																				"src": "2613:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2608:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2598:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3054,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2597:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3055,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3035,
																				"src": "2620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 3056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2624:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2620:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3058,
																				"name": "c",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3041,
																				"src": "2629:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 3059,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3033,
																				"src": "2633:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "2629:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2620:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 3062,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2619:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2597:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c8d4a3974eee4fcf9925cffefc088ed6ac723b55fb65cf621edb1b7db7b8eb",
																"typeString": "literal_string \"SignedSafeMath: addition overflow\""
															},
															"value": "SignedSafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c8d4a3974eee4fcf9925cffefc088ed6ac723b55fb65cf621edb1b7db7b8eb",
																"typeString": "literal_string \"SignedSafeMath: addition overflow\""
															}
														],
														"id": 3046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2589:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2589:84:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3066,
												"nodeType": "ExpressionStatement",
												"src": "2589:84:2"
											},
											{
												"expression": {
													"id": 3067,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3041,
													"src": "2693:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3039,
												"id": 3068,
												"nodeType": "Return",
												"src": "2686:8:2"
											}
										]
									},
									"documentation": {
										"id": 3031,
										"nodeType": "StructuredDocumentation",
										"src": "2250:231:2",
										"text": " @dev Returns the addition of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 3070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2496:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2507:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "2500:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3032,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2500:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2517:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "2510:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3034,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:20:2"
									},
									"returnParameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "2543:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3037,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2543:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2542:8:2"
									},
									"scope": 3071,
									"src": "2487:215:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3449,
							"src": "127:2578:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3432,
							"linearizedBaseContracts": [
								3432
							],
							"name": "WandInstruments",
							"nameLocation": "2718:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ee620868",
									"id": 3073,
									"mutability": "mutable",
									"name": "growthFactor",
									"nameLocation": "2889:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "2874:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3072,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2874:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cbff4617",
									"id": 3075,
									"mutability": "mutable",
									"name": "sellFactor",
									"nameLocation": "2923:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "2908:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3074,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2908:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3077,
									"mutability": "mutable",
									"name": "backingPrice",
									"nameLocation": "2958:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "2942:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3076,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2942:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3079,
									"mutability": "mutable",
									"name": "scepterBuyPrice",
									"nameLocation": "2995:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "2979:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3078,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2979:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3081,
									"mutability": "mutable",
									"name": "scepterSellPrice",
									"nameLocation": "3033:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3017:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3017:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3083,
									"mutability": "mutable",
									"name": "treasuryUSDC",
									"nameLocation": "3074:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3058:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3082,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3058:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "fbbb4589",
									"id": 3085,
									"mutability": "mutable",
									"name": "treasury1Addr",
									"nameLocation": "3139:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3124:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3084,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3124:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd9b1d97",
									"id": 3087,
									"mutability": "mutable",
									"name": "treasury2Addr",
									"nameLocation": "3174:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3159:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3086,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3159:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "35453307",
									"id": 3095,
									"mutability": "mutable",
									"name": "treasury1bal",
									"nameLocation": "3243:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3228:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3088,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3228:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										},
										"id": 3094,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030",
											"id": 3089,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3258:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000_by_1",
												"typeString": "int_const 500000"
											},
											"value": "500000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 3092,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 3090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3266:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 3091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3270:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3266:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 3093,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3265:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "3258:15:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3098,
									"mutability": "mutable",
									"name": "ft5daybought",
									"nameLocation": "3313:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3297:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3096,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3297:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 3097,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3328:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3101,
									"mutability": "mutable",
									"name": "ft5daysold",
									"nameLocation": "3357:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3341:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3099,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3341:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930303030",
										"id": 3100,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3370:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_90000_by_1",
											"typeString": "int_const 90000"
										},
										"value": "90000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3104,
									"mutability": "mutable",
									"name": "double5daytokens",
									"nameLocation": "3398:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3382:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3102,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3382:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "363030303030",
										"id": 3103,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3417:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600000_by_1",
											"typeString": "int_const 600000"
										},
										"value": "600000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3107,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "3446:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3430:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3430:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 3106,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3450:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3110,
									"mutability": "mutable",
									"name": "bc",
									"nameLocation": "3474:2:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3458:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3458:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 3109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3479:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6f10e285",
									"id": 3112,
									"mutability": "mutable",
									"name": "res",
									"nameLocation": "3502:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3488:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int128",
										"typeString": "int128"
									},
									"typeName": {
										"id": 3111,
										"name": "int128",
										"nodeType": "ElementaryTypeName",
										"src": "3488:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int128",
											"typeString": "int128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eee05f5e",
									"id": 3115,
									"mutability": "mutable",
									"name": "testwallet",
									"nameLocation": "3527:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3512:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3113,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3512:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
										"id": 3114,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3540:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e05c1b9",
									"id": 3118,
									"mutability": "mutable",
									"name": "tSC",
									"nameLocation": "3724:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3710:17:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2891",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3117,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3116,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2891,
											"src": "3710:6:2"
										},
										"referencedDeclaration": 2891,
										"src": "3710:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2891",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee467678",
									"id": 3121,
									"mutability": "mutable",
									"name": "mockUSDC",
									"nameLocation": "3748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3734:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2891",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3120,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3119,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2891,
											"src": "3734:6:2"
										},
										"referencedDeclaration": 2891,
										"src": "3734:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2891",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3124,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "3805:1:2",
									"nodeType": "VariableDeclaration",
									"scope": 3432,
									"src": "3791:15:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Baton_$3448",
										"typeString": "contract Baton"
									},
									"typeName": {
										"id": 3123,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3122,
											"name": "Baton",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3448,
											"src": "3791:5:2"
										},
										"referencedDeclaration": 3448,
										"src": "3791:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Baton_$3448",
											"typeString": "contract Baton"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3176,
										"nodeType": "Block",
										"src": "3865:515:2",
										"statements": [
											{
												"expression": {
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3131,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3124,
														"src": "3918:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Baton_$3448",
															"typeString": "contract Baton"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3133,
																"name": "batonAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3128,
																"src": "3928:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3132,
															"name": "Baton",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3448,
															"src": "3922:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Baton_$3448_$",
																"typeString": "type(contract Baton)"
															}
														},
														"id": 3134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3922:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Baton_$3448",
															"typeString": "contract Baton"
														}
													},
													"src": "3918:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Baton_$3448",
														"typeString": "contract Baton"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "3918:20:2"
											},
											{
												"expression": {
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3137,
														"name": "tSC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3118,
														"src": "3952:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2891",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3139,
																"name": "scepterAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3126,
																"src": "3965:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3138,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2891,
															"src": "3958:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$2891_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3958:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2891",
															"typeString": "contract IERC20"
														}
													},
													"src": "3952:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2891",
														"typeString": "contract IERC20"
													}
												},
												"id": 3142,
												"nodeType": "ExpressionStatement",
												"src": "3952:25:2"
											},
											{
												"expression": {
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3143,
														"name": "mockUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3121,
														"src": "3989:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2891",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307844374143643261394644313539453639426231303241316361323143396133653341354637373142",
																"id": 3145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4007:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3144,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2891,
															"src": "4000:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$2891_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4000:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2891",
															"typeString": "contract IERC20"
														}
													},
													"src": "3989:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2891",
														"typeString": "contract IERC20"
													}
												},
												"id": 3148,
												"nodeType": "ExpressionStatement",
												"src": "3989:61:2"
											},
											{
												"expression": {
													"id": 3151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3149,
														"name": "treasury1Addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3085,
														"src": "4061:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
														"id": 3150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4077:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
													},
													"src": "4061:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3152,
												"nodeType": "ExpressionStatement",
												"src": "4061:58:2"
											},
											{
												"expression": {
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3153,
														"name": "growthFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "4179:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3154,
																		"name": "ft5daybought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3098,
																		"src": "4193:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3155,
																		"name": "double5daytokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3104,
																		"src": "4206:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4193:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4192:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 3158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4227:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 3159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4231:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4227:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 3161,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4226:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "4192:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4179:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3164,
												"nodeType": "ExpressionStatement",
												"src": "4179:55:2"
											},
											{
												"expression": {
													"id": 3174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3165,
														"name": "sellFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "4308:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3166,
																"name": "ft5daysold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3101,
																"src": "4319:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3167,
																"name": "double5daytokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3104,
																"src": "4330:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4319:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 3171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 3169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4349:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 3170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4353:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4349:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																}
															],
															"id": 3172,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4348:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "4319:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4308:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3175,
												"nodeType": "ExpressionStatement",
												"src": "4308:48:2"
											}
										]
									},
									"id": 3177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "scepterAddr",
												"nameLocation": "3833:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "3825:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "batonAddr",
												"nameLocation": "3854:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 3177,
												"src": "3846:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3846:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:40:2"
									},
									"returnParameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3865:0:2"
									},
									"scope": 3432,
									"src": "3813:567:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3193,
										"nodeType": "Block",
										"src": "4490:82:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3190,
															"name": "_addressToQuery",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3181,
															"src": "4548:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3187,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "4523:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3186,
																"name": "ERC20Interface",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3440,
																"src": "4508:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20Interface_$3440_$",
																	"typeString": "type(contract ERC20Interface)"
																}
															},
															"id": 3188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4508:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Interface_$3440",
																"typeString": "contract ERC20Interface"
															}
														},
														"id": 3189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3439,
														"src": "4508:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4508:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3185,
												"id": 3192,
												"nodeType": "Return",
												"src": "4501:63:2"
											}
										]
									},
									"functionSelector": "ee546a51",
									"id": 3194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "queryERC20Balance",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "4423:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "4415:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "_addressToQuery",
												"nameLocation": "4446:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "4438:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:48:2"
									},
									"returnParameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3194,
												"src": "4484:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4484:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4483:6:2"
									},
									"scope": 3432,
									"src": "4388:184:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3241,
										"nodeType": "Block",
										"src": "4765:821:2",
										"statements": [
											{
												"assignments": [
													3200
												],
												"declarations": [
													{
														"constant": false,
														"id": 3200,
														"mutability": "mutable",
														"name": "trader_tsc_balance",
														"nameLocation": "4845:18:2",
														"nodeType": "VariableDeclaration",
														"scope": 3241,
														"src": "4837:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4837:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3206,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4880:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4880:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3201,
															"name": "tSC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "4866:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															}
														},
														"id": 3202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2830,
														"src": "4866:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4866:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4837:54:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3208,
																"name": "trader_tsc_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3200,
																"src": "4910:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 3209,
																"name": "amountSCPtoSell",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3196,
																"src": "4931:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4910:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e742068617665207468617420616d6f756e7421",
															"id": 3211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4948:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c",
																"typeString": "literal_string \"You dont have that amount!\""
															},
															"value": "You dont have that amount!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c",
																"typeString": "literal_string \"You dont have that amount!\""
															}
														],
														"id": 3207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3213,
												"nodeType": "ExpressionStatement",
												"src": "4902:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5197:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5197:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3219,
																"name": "amountSCPtoSell",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3196,
																"src": "5209:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 3225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5228:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"id": 3223,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3221,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5231:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"hexValue": "3138",
																						"id": 3222,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5235:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_18_by_1",
																							"typeString": "int_const 18"
																						},
																						"value": "18"
																					},
																					"src": "5231:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				}
																			],
																			"id": 3224,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5230:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		},
																		"src": "5228:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 3226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5227:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "5209:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3214,
															"name": "mockUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3121,
															"src": "5179:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															}
														},
														"id": 3216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2840,
														"src": "5179:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5179:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3229,
												"nodeType": "ExpressionStatement",
												"src": "5179:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3231,
															"name": "tSC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "5314:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 3232,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5319:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5319:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3236,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5339:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WandInstruments_$3432",
																		"typeString": "contract WandInstruments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WandInstruments_$3432",
																		"typeString": "contract WandInstruments"
																	}
																],
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5331:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5331:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 3237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5331:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3238,
															"name": "amountSCPtoSell",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3196,
															"src": "5346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3230,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3431,
														"src": "5296:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2891_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 3239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5296:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3240,
												"nodeType": "ExpressionStatement",
												"src": "5296:66:2"
											}
										]
									},
									"functionSelector": "daa3a4a4",
									"id": 3242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellScepter",
									"nameLocation": "4714:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3196,
												"mutability": "mutable",
												"name": "amountSCPtoSell",
												"nameLocation": "4734:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 3242,
												"src": "4726:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4726:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4725:25:2"
									},
									"returnParameters": {
										"id": 3198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4765:0:2"
									},
									"scope": 3432,
									"src": "4705:881:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3281,
										"nodeType": "Block",
										"src": "5650:739:2",
										"statements": [
											{
												"assignments": [
													3248
												],
												"declarations": [
													{
														"constant": false,
														"id": 3248,
														"mutability": "mutable",
														"name": "trader_usdc_balance",
														"nameLocation": "5730:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 3281,
														"src": "5722:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3247,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3254,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5771:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5771:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3249,
															"name": "mockUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3121,
															"src": "5752:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															}
														},
														"id": 3250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2830,
														"src": "5752:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5722:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3256,
																"name": "trader_usdc_balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3248,
																"src": "5801:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 3257,
																"name": "amountSCPtoBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3244,
																"src": "5823:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5801:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e742068617665207468617420616d6f756e7421",
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5839:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c",
																"typeString": "literal_string \"You dont have that amount!\""
															},
															"value": "You dont have that amount!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c38a2e60db7303242575d85b735030030a1688b5df78e219a6ff9f2098ec309c",
																"typeString": "literal_string \"You dont have that amount!\""
															}
														],
														"id": 3255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5793:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3261,
												"nodeType": "ExpressionStatement",
												"src": "5793:75:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5932:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5932:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3267,
															"name": "amountSCPtoBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "5944:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3262,
															"name": "tSC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "5919:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															}
														},
														"id": 3264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2840,
														"src": "5919:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5919:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3269,
												"nodeType": "ExpressionStatement",
												"src": "5919:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3271,
															"name": "mockUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3121,
															"src": "6111:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															}
														},
														{
															"expression": {
																"id": 3272,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6121:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6121:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3276,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6141:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_WandInstruments_$3432",
																		"typeString": "contract WandInstruments"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_WandInstruments_$3432",
																		"typeString": "contract WandInstruments"
																	}
																],
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6133:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6133:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6133:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3278,
															"name": "amountSCPtoBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "6148:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3270,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3431,
														"src": "6093:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2891_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "6093:70:2"
											}
										]
									},
									"functionSelector": "65819f7e",
									"id": 3282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyScepter",
									"nameLocation": "5601:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3244,
												"mutability": "mutable",
												"name": "amountSCPtoBuy",
												"nameLocation": "5620:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "5612:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5611:24:2"
									},
									"returnParameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5650:0:2"
									},
									"scope": 3432,
									"src": "5592:797:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3295,
										"nodeType": "Block",
										"src": "6437:65:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3290,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6465:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6465:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3284,
															"src": "6477:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3287,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3124,
															"src": "6458:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Baton_$3448",
																"typeString": "contract Baton"
															}
														},
														"id": 3289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3447,
														"src": "6458:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 3293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6458:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3294,
												"nodeType": "ExpressionStatement",
												"src": "6458:26:2"
											}
										]
									},
									"functionSelector": "2934b237",
									"id": 3296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintBaton",
									"nameLocation": "6404:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 3296,
												"src": "6414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6413:16:2"
									},
									"returnParameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6437:0:2"
									},
									"scope": 3432,
									"src": "6395:107:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3332,
										"nodeType": "Block",
										"src": "6572:104:2",
										"statements": [
											{
												"assignments": [
													3306
												],
												"declarations": [
													{
														"constant": false,
														"id": 3306,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "6586:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 3332,
														"src": "6579:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3305,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6579:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3312,
												"initialValue": {
													"arguments": [
														{
															"id": 3309,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3298,
															"src": "6609:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 3310,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3300,
															"src": "6612:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"id": 3307,
															"name": "SignedSafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "6590:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SignedSafeMath_$3071_$",
																"typeString": "type(library SignedSafeMath)"
															}
														},
														"id": 3308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2990,
														"src": "6590:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
															"typeString": "function (int256,int256) pure returns (int256)"
														}
													},
													"id": 3311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6590:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6579:35:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3313,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3298,
																		"src": "6626:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 3314,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3300,
																		"src": "6630:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "6626:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 3316,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6635:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6625:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 3321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3319,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3306,
																		"src": "6641:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3320,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3300,
																		"src": "6645:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "6641:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 3322,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3298,
																	"src": "6650:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "6641:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 3324,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6640:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6625:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3329,
												"nodeType": "IfStatement",
												"src": "6621:36:2",
												"trueBody": {
													"expression": {
														"id": 3327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "6654:3:2",
														"subExpression": {
															"id": 3326,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3306,
															"src": "6654:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3328,
													"nodeType": "ExpressionStatement",
													"src": "6654:3:2"
												}
											},
											{
												"expression": {
													"id": 3330,
													"name": "r",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3306,
													"src": "6671:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3304,
												"id": 3331,
												"nodeType": "Return",
												"src": "6664:8:2"
											}
										]
									},
									"functionSelector": "0e8a0f89",
									"id": 3333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "floorDiv",
									"nameLocation": "6519:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6535:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "6528:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3297,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6528:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6545:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "6538:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3299,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6538:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6527:20:2"
									},
									"returnParameters": {
										"id": 3304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3333,
												"src": "6564:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3302,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6564:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6563:8:2"
									},
									"scope": 3432,
									"src": "6510:166:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3345,
										"nodeType": "Block",
										"src": "6740:142:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3338,
																"name": "treasury1bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3095,
																"src": "6820:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3339,
																		"name": "tSC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3118,
																		"src": "6833:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2891",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2822,
																	"src": "6833:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 3341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6833:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6820:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3343,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6819:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3337,
												"id": 3344,
												"nodeType": "Return",
												"src": "6812:39:2"
											}
										]
									},
									"functionSelector": "1f564a06",
									"id": 3346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBackingPrice",
									"nameLocation": "6691:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6706:2:2"
									},
									"returnParameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3346,
												"src": "6732:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6731:9:2"
									},
									"scope": 3432,
									"src": "6682:200:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3374,
										"nodeType": "Block",
										"src": "6942:100:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 3351,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6966:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_WandInstruments_$3432",
																				"typeString": "contract WandInstruments"
																			}
																		},
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getBackingPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3346,
																		"src": "6966:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 3353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6966:22:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_rational_900000000000000000_by_1",
																					"typeString": "int_const 900000000000000000"
																				},
																				"id": 3362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_9_by_10",
																								"typeString": "rational_const 9 / 10"
																							},
																							"id": 3356,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "39",
																								"id": 3354,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6993:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_9_by_1",
																									"typeString": "int_const 9"
																								},
																								"value": "9"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"hexValue": "3130",
																								"id": 3355,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6995:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"src": "6993:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_9_by_10",
																								"typeString": "rational_const 9 / 10"
																							}
																						}
																					],
																					"id": 3357,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6992:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_9_by_10",
																						"typeString": "rational_const 9 / 10"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"id": 3360,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "3130",
																								"id": 3358,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7001:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"hexValue": "3138",
																								"id": 3359,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7005:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"src": "7001:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						}
																					],
																					"id": 3361,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7000:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				},
																				"src": "6992:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_900000000000000000_by_1",
																					"typeString": "int_const 900000000000000000"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3363,
																				"name": "sellFactor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3075,
																				"src": "7011:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6992:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3365,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6991:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6966:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 3369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 3367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7026:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"hexValue": "3138",
																			"id": 3368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7030:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "7026:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 3370,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7025:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "6966:67:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3372,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6965:69:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3350,
												"id": 3373,
												"nodeType": "Return",
												"src": "6958:76:2"
											}
										]
									},
									"functionSelector": "018a25e8",
									"id": 3375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBuyPrice",
									"nameLocation": "6897:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6908:2:2"
									},
									"returnParameters": {
										"id": 3350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3375,
												"src": "6934:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6933:9:2"
									},
									"scope": 3432,
									"src": "6888:154:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3403,
										"nodeType": "Block",
										"src": "7103:165:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 3380,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "7193:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_WandInstruments_$3432",
																				"typeString": "contract WandInstruments"
																			}
																		},
																		"id": 3381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getBackingPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3346,
																		"src": "7193:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 3382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7193:22:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3383,
																				"name": "growthFactor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3073,
																				"src": "7219:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_rational_1200000000000000000_by_1",
																							"typeString": "int_const 1200000000000000000"
																						},
																						"id": 3391,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_rational_6000000000000000000_by_1",
																								"typeString": "int_const 6000000000000000000"
																							},
																							"id": 3389,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"leftExpression": {
																								"hexValue": "36",
																								"id": 3384,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7235:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_6_by_1",
																									"typeString": "int_const 6"
																								},
																								"value": "6"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_rational_1000000000000000000_by_1",
																											"typeString": "int_const 1000000000000000000"
																										},
																										"id": 3387,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "3130",
																											"id": 3385,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "7238:2:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_10_by_1",
																												"typeString": "int_const 10"
																											},
																											"value": "10"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "**",
																										"rightExpression": {
																											"hexValue": "3138",
																											"id": 3386,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "7242:2:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_18_by_1",
																												"typeString": "int_const 18"
																											},
																											"value": "18"
																										},
																										"src": "7238:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1000000000000000000_by_1",
																											"typeString": "int_const 1000000000000000000"
																										}
																									}
																								],
																								"id": 3388,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "7237:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000000000000000000_by_1",
																									"typeString": "int_const 1000000000000000000"
																								}
																							},
																							"src": "7235:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_6000000000000000000_by_1",
																								"typeString": "int_const 6000000000000000000"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "35",
																							"id": 3390,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7246:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_5_by_1",
																								"typeString": "int_const 5"
																							},
																							"value": "5"
																						},
																						"src": "7235:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1200000000000000000_by_1",
																							"typeString": "int_const 1200000000000000000"
																						}
																					}
																				],
																				"id": 3392,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "7234:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1200000000000000000_by_1",
																					"typeString": "int_const 1200000000000000000"
																				}
																			},
																			"src": "7219:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3394,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7218:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7193:56:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3396,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7192:58:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 3399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7253:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 3398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7257:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "7253:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															}
														],
														"id": 3400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7252:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "7192:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3379,
												"id": 3402,
												"nodeType": "Return",
												"src": "7185:75:2"
											}
										]
									},
									"functionSelector": "43d32e9c",
									"id": 3404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSellPrice",
									"nameLocation": "7057:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7069:2:2"
									},
									"returnParameters": {
										"id": 3379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "7095:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7095:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:9:2"
									},
									"scope": 3432,
									"src": "7048:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3430,
										"nodeType": "Block",
										"src": "7417:125:2",
										"statements": [
											{
												"assignments": [
													3417
												],
												"declarations": [
													{
														"constant": false,
														"id": 3417,
														"mutability": "mutable",
														"name": "sent",
														"nameLocation": "7433:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 3430,
														"src": "7428:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3416,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7428:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3424,
												"initialValue": {
													"arguments": [
														{
															"id": 3420,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3409,
															"src": "7459:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3421,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3411,
															"src": "7467:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3422,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3413,
															"src": "7478:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3418,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3407,
															"src": "7440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2891",
																"typeString": "contract IERC20"
															}
														},
														"id": 3419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2872,
														"src": "7440:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 3423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7440:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7428:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3426,
															"name": "sent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3417,
															"src": "7504:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 3427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7510:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 3425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7496:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7496:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3429,
												"nodeType": "ExpressionStatement",
												"src": "7496:38:2"
											}
										]
									},
									"id": 3431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "7283:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7318:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "7311:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2891",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 3406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3405,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2891,
														"src": "7311:6:2"
													},
													"referencedDeclaration": 2891,
													"src": "7311:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2891",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3409,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7342:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "7334:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3411,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7367:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "7359:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7395:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 3431,
												"src": "7387:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:108:2"
									},
									"returnParameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7417:0:2"
									},
									"scope": 3432,
									"src": "7274:268:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3449,
							"src": "2709:4838:2",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 3440,
							"linearizedBaseContracts": [
								3440
							],
							"name": "ERC20Interface",
							"nameLocation": "7567:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 3439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7598:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "whom",
												"nameLocation": "7616:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "7608:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7608:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7607:14:2"
									},
									"returnParameters": {
										"id": 3438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3439,
												"src": "7651:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7651:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7650:6:2"
									},
									"scope": 3440,
									"src": "7589:68:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3449,
							"src": "7549:111:2",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 3448,
							"linearizedBaseContracts": [
								3448
							],
							"name": "Baton",
							"nameLocation": "7938:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 3447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "7964:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "addrTo",
												"nameLocation": "7977:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "7969:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3444,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7993:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "7985:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7968:32:2"
									},
									"returnParameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8016:0:2"
									},
									"scope": 3448,
									"src": "7955:62:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3449,
							"src": "7920:100:2",
							"usedErrors": []
						}
					],
					"src": "45:7975:2"
				},
				"id": 2
			}
		}
	}
}